{"version":3,"sources":["excalidraw/src/locales lazy /^/.//.*$/ groupOptions: {} namespace object","excalidraw/src/constants.ts","excalidraw/src/element/typeChecks.ts","excalidraw/src/math.ts","excalidraw/src/points.ts","excalidraw/src/element/bounds.ts","excalidraw/src/renderer/renderElement.ts","excalidraw/src/random.ts","excalidraw/src/element/mutateElement.ts","excalidraw/src/element/sizeHelpers.ts","excalidraw/src/groups.ts","excalidraw/src/element/newElement.ts","excalidraw/src/element/handlerRectangles.ts","excalidraw/src/element/collision.ts","excalidraw/src/element/resizeTest.ts","excalidraw/src/element/resizeElements.ts","excalidraw/src/element/dragElements.ts","excalidraw/src/keys.ts","excalidraw/src/element/textWysiwyg.tsx","excalidraw/src/element/textElement.ts","excalidraw/src/element/showSelectedShapeActions.ts","excalidraw/src/element/index.ts","excalidraw/src/i18n.ts","excalidraw/src/scene/scrollbars.ts","excalidraw/src/scene/selection.ts","excalidraw/src/scene/scroll.ts","excalidraw/src/scene/comparisons.ts","excalidraw/src/scene/zoom.ts","excalidraw/src/scene/globalScene.ts","excalidraw/src/utils.ts","excalidraw/src/components/TopErrorBoundary.tsx","excalidraw/src/components/LoadingMessage.tsx","excalidraw/src/components/InitializeApp.tsx","excalidraw/src/is-mobile.tsx","excalidraw/src/appState.ts","excalidraw/src/renderer/roundRect.ts","excalidraw/src/colors.ts","excalidraw/src/clients.ts","excalidraw/src/element/linearElementEditor.ts","excalidraw/src/renderer/renderScene.ts","excalidraw/src/scene/export.ts","excalidraw/src/charts.ts","excalidraw/src/clipboard.ts","excalidraw/src/data/restore.ts","excalidraw/src/data/blob.ts","excalidraw/src/data/json.ts","excalidraw/src/data/localStorage.ts","excalidraw/src/data/index.ts","excalidraw/src/components/ContextMenu.tsx","excalidraw/src/components/Portal.tsx","excalidraw/src/shapes.tsx","excalidraw/src/history.ts","excalidraw/src/components/Popover.tsx","excalidraw/src/actions/manager.tsx","excalidraw/src/components/ToolButton.tsx","excalidraw/src/components/icons.tsx","excalidraw/src/actions/register.ts","excalidraw/src/actions/actionDeleteSelected.tsx","excalidraw/src/zindex.ts","excalidraw/src/actions/actionZindex.tsx","excalidraw/src/components/ButtonSelect.tsx","excalidraw/src/actions/actionSelectAll.ts","excalidraw/src/actions/actionDuplicateSelection.tsx","excalidraw/src/components/ColorPicker.tsx","excalidraw/src/actions/actionProperties.tsx","excalidraw/src/actions/actionCanvas.tsx","excalidraw/src/actions/actionFinalize.tsx","excalidraw/src/components/ProjectName.tsx","excalidraw/src/actions/actionStyles.ts","excalidraw/src/actions/actionExport.tsx","excalidraw/src/components/HelpIcon.tsx","excalidraw/src/components/Avatar.tsx","excalidraw/src/actions/actionMenu.tsx","excalidraw/src/actions/actionGroup.ts","excalidraw/src/gesture.ts","excalidraw/src/actions/actionNavigate.tsx","excalidraw/src/actions/actionHistory.tsx","excalidraw/src/components/Island.tsx","excalidraw/src/components/Stack.tsx","excalidraw/src/components/FixedSideContainer.tsx","excalidraw/src/components/UserList.tsx","excalidraw/src/components/LockIcon.tsx","excalidraw/src/components/Modal.tsx","excalidraw/src/components/Dialog.tsx","excalidraw/src/components/ExportDialog.tsx","excalidraw/src/components/LanguageList.tsx","excalidraw/src/components/HintViewer.tsx","excalidraw/src/components/Actions.tsx","excalidraw/src/components/Section.tsx","excalidraw/src/components/RoomDialog.tsx","excalidraw/src/components/MobileMenu.tsx","excalidraw/src/components/ErrorDialog.tsx","excalidraw/src/components/ShortcutsDialog.tsx","excalidraw/src/components/GitHubCorner.tsx","excalidraw/src/components/Tooltip.tsx","excalidraw/src/components/LayerUI.tsx","excalidraw/src/components/App.tsx","excalidraw/src/time_constants.ts","Claymate.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","SCENE","EVENT","isTextElement","element","type","isLinearElement","SHIFT_LOCKING_ANGLE","Math","PI","CURSOR_TYPE","POINTER_BUTTON","ENV","BROADCAST","CLASSES","FONT_FAMILY","1","2","3","CANVAS_ONLY_ACTIONS","distanceBetweenPointAndSegment","x","y","x1","y1","x2","y2","xx","yy","C","D","lenSquare","param","dx","dy","hypot","rotate","angle","cos","sin","adjustXYWithRotation","sides","deltaX1","deltaY1","deltaX2","deltaY2","w","n","s","distance2d","xd","yd","isPathALoop","points","length","firstPoint","lastPoint","onSegment","p","q","r","max","min","orientation","val","doIntersect","p1","q1","p2","q2","o1","o2","o3","o4","getGridPoint","gridSize","round","rescalePoints","dimension","nextDimensionSize","prevPoints","prevDimValues","point","prevMaxDimension","prevMinDimension","prevDimensionSize","dimensionScaleFactor","nextMinDimension","Infinity","scaledPoints","prevPoint","value","currentDimension","scaledValue","translation","scaledPoint","getElementAbsoluteCoords","getLinearElementAbsoluteCoords","width","height","getDiamondPoints","topX","floor","rightX","rightY","getCurvePathOps","shape","sets","set","ops","getMinMaxXYFromCurvePathOps","transformXY","currentP","reduce","limits","op","data","p3","p0","equation","idx","pow","minY","minX","maxX","maxY","getShapeForElement","getElementBounds","cx","cy","getLinearElementRotatedBounds","x11","y11","x12","y12","x22","y22","x21","y21","h","ww","hh","getCommonBounds","elements","forEach","getResizedElementAbsoluteCoords","nextWidth","nextHeight","curve","rough","generator","generateRoughOptions","getElementPointsCoords","DASHARRAY_DASHED","DASHARRAY_DOTTED","drawElementOnCanvas","rc","context","globalAlpha","opacity","draw","rtl","isRTL","text","shouldTemporarilyAttach","canvas","isConnected","document","body","appendChild","setAttribute","font","getFontString","fillStyle","strokeColor","textAlign","lines","replace","split","lineHeight","verticalOffset","baseline","horizontalOffset","i","fillText","remove","elementWithCanvasCache","WeakMap","shapeCache","get","invalidateShapeForElement","delete","options","seed","strokeLineDash","strokeStyle","undefined","disableMultiStroke","strokeWidth","fillWeight","hachureGap","roughness","stroke","fill","backgroundColor","curveFitting","generateElementShape","rectangle","topY","bottomX","bottomY","leftX","leftY","polygon","ellipse","prevOp","distance","nx","ny","arrowLength","total","px","py","minSize","xs","ys","x3","y3","getArrowPoints","x4","y4","push","line","generateElementWithCanvas","sceneState","zoom","prevElementWithCanvas","shouldRegenerateBecauseZoom","canvasZoom","shouldCacheIgnoreZoom","elementWithCanvas","createElement","getContext","canvasOffsetX","canvasOffsetY","window","devicePixelRatio","CANVAS_PADDING","translate","scale","generateElementCanvas","renderElement","renderOptimizations","scrollX","scrollY","fillRect","drawImage","drawElementFromCanvas","shiftX","shiftY","renderElementToSvg","rsvg","svgRoot","offsetX","offsetY","degree","node","group","ownerDocument","createElementNS","SVG_NS","direction","textAnchor","textContent","getFontFamilyString","fontSize","random","Random","Date","now","randomInteger","next","randomId","nanoid","mutateElement","updates","didChange","key","getSizeFromPoints","nextPoints","didChangePoints","nextPoint","version","versionNonce","globalSceneState","informMutation","newElementWith","isInvisiblySmallElement","getPerfectElementSize","elementType","absWidth","abs","absHeight","lockedAngle","atan","tan","sign","getNormalizedDimensions","ret","selectGroup","groupId","appState","elementsInGroup","filter","groupIds","includes","selectedGroupIds","editingGroupId","selectedElementIds","fromEntries","isSelectedViaGroup","find","getSelectedGroupIds","entries","selectGroupsForSelectedElements","nextAppState","selectedElements","getSelectedElements","indexOfEditingGroup","indexOf","isElementInGroup","getElementsInGroup","addToGroup","prevGroupIds","newGroupId","positionOfEditingGroupId","positionToInsert","splice","_newElementBase","rest","isDeleted","newElement","opts","getTextElementPositionOffsets","metrics","verticalAlign","newTextElement","measureText","offsets","fontFamily","updateTextElement","nextText","nextBaseline","prevMetrics","Number","isFinite","getAdjustedDimensions","deepCopyElement","depth","prototype","toString","call","tmp","constructor","create","getPrototypeOf","hasOwnProperty","Array","isArray","k","arr","duplicateElement","groupIdMapForOperation","overrides","copy","mapper","endIndex","getNewGroupIdsForDuplication","has","assign","handleSizes","mouse","pen","touch","OMIT_SIDES_FOR_MULTIPLE_ELEMENTS","rotation","OMIT_SIDES_FOR_TEXT_ELEMENT","OMIT_SIDES_FOR_LINE_SLASH","nw","se","OMIT_SIDES_FOR_LINE_BACKSLASH","ne","sw","generateHandler","handlerRectanglesFromCoords","pointerType","omitSides","size","handlerWidth","handlerHeight","handlerMarginX","handlerMarginY","dashedLineMargin","centeringOffset","handlers","minimumSizeForEightHandlers","handlerRectangles","isElementDraggableFromInside","dragFromInside","hitTest","lineThreshold","tx","ty","a","b","ex","ey","rx","ry","qx","qy","relX","relY","some","subshape","hitTestCurveInside","hitTestRoughShape","console","warn","drawable","operation","vertices","extreme","MAX_SAFE_INTEGER","count","current","isPointInPolygon","pointsOnBezierCurves","mx","my","sqrt","pointInBezierEquation","isInHandlerRect","handler","getElementWithResizeHandler","scenePointerX","scenePointerY","result","resizeHandle","rotationHandler","resizeTest","getResizeHandlerFromCoords","RESIZE_CURSORS","getCursorForResizingElement","resizingElement","shouldSwapCursors","cursor","index","rotateResizeCursor","rotateSingleElement","pointerX","pointerY","isRotateWithDiscreteAngle","atan2","resizeSingleTwoPointElement","resizeArrowDirection","pointOrigin","pointEnd","rescalePointsInElement","measureFontSizeFromWH","nextFontSize","getSidesForResizeHandle","isResizeFromCenter","test","resizeSingleTextElement","rotatedX","rotatedY","nextFont","nextElementX","nextElementY","resizeSingleElement","sidesWithSameLength","scaleX","scaleY","nextX1","nextY1","nextX2","nextY2","rescaledPoints","side","finalX1","finalY1","finalX2","finalY2","needsRotation","flipDiffX","flipDiffY","getFlipAdjustment","resizeMultipleElements","getNextXY","origX1","origY1","origX2","origY2","prev","origCoords","finalCoords","dragNewElement","draggingElement","originX","originY","isResizeWithSidesSameLength","isResizeCenterPoint","newX","newY","isDarwin","navigator","platform","KEYS","isArrowKey","keyCode","getResizeCenterPointKey","event","altKey","which","getResizeWithSidesSameLengthKey","shiftKey","getRotateWithDiscreteAngleKey","normalizeText","getTransform","redrawTextBoundingBox","showSelectedShapeActions","Boolean","editingElement","getElementMap","acc","getDrawingVersion","el","getNonDeletedElements","isNonDeletedElement","languages","lng","label","concat","sort","left","right","lang","percentages","currentLanguage","currentLanguageData","fallbackLanguage","setLanguage","newLng","language","documentElement","dir","languageDetector","cacheUserLanguage","setLanguageFirstTime","detect","getLanguage","findPartsForData","parts","part","path","replacement","fallbackLanguageData","LanguageDetector","init","languageUtils","formatLanguageCode","isWhitelisted","checkWhitelist","getScrollBars","viewportWidth","viewportHeight","elementsMinX","elementsMinY","elementsMaxX","elementsMaxY","viewportWidthWithZoom","viewportHeightWithZoom","viewportWidthDiff","viewportHeightDiff","safeArea","top","parseInt","getGlobalCSSVariable","bottom","viewportMinX","viewportMinY","viewportMaxX","viewportMaxY","sceneMinX","sceneMinY","sceneMaxX","sceneMaxY","horizontal","SCROLLBAR_MARGIN","vertical","isOverScrollBars","scrollBars","scrollBar","isOverHorizontalScrollBar","isOverVerticalScrollBar","isSomeElementSelected","normalizeScroll","pos","calculateScrollCenter","cords","sceneCoordsToViewportCoords","sceneX","sceneY","viewportX1","viewportY1","viewportX2","viewportY2","innerWidth","innerHeight","isOutsideViewPort","from","minDistance","closestElement","getClosestElementBounds","viewportCoordsToSceneCoords","clientX","clientY","centerX","centerY","hasBackground","hasStroke","hasText","getElementAtPosition","hitElement","getZoomOrigin","getNormalizedZoom","normalizedZoom","parseFloat","toFixed","callbacks","Set","nonDeletedElements","elementsMap","this","getElement","nextElements","callback","cb","add","mockDateTime","getDateTime","date","year","getFullYear","month","getMonth","padStart","day","getDate","hr","getHours","getMinutes","capitalizeString","str","charAt","toUpperCase","isWritableElement","target","HTMLElement","dataset","HTMLBRElement","HTMLTextAreaElement","HTMLInputElement","style","position","whiteSpace","innerText","join","offsetWidth","offsetHeight","span","display","overflow","offsetTop","removeChild","debounce","fn","timeout","lastArgs","handle","args","clearTimeout","setTimeout","flush","selectNode","selection","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","removeSelection","resetCursor","setCursorForShape","isFullScreen","fullscreenElement","nodeName","getShortcutKey","shortcut","isMac","zoomOrigin","name","getComputedStyle","getPropertyValue","RE_RTL_CHECK","RegExp","TopErrorBoundary","state","hasError","sentryEventId","localStorage","errorSplash","props","children","error","errorInfo","_localStorage","JSON","parse","Sentry","scope","setExtras","eventId","setState","stringify","activeElement","preventDefault","select","templateStrFn","default","encodeURIComponent","open","className","onClick","location","reload","clear","role","aria-label","aria-hidden","createGithubIssue","rows","onPointerDown","selectTextArea","readOnly","React","Component","LoadingMessage","InitializeApp","isLoading","createContext","IsMobileProvider","query","useRef","matchMedia","matches","addListener","removeListener","useState","isMobile","setMobile","useEffect","Provider","useIsMobile","useContext","getDefaultAppState","errorMessage","multiElement","editingLinearElement","elementLocked","exportBackground","shouldAddWatermark","currentItemStrokeColor","oc","black","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","currentItemStrokeStyle","currentItemRoughness","currentItemOpacity","currentItemFontSize","currentItemFontFamily","currentItemTextAlign","viewBackgroundColor","white","cursorX","cursorY","cursorButton","scrolledOutside","username","isCollaborating","isResizing","isRotating","selectionElement","openMenu","lastPointerDownWith","previousSelectedElementIds","collaborators","Map","showShortcutsDialog","zenModeEnabled","cleanAppStateForExport","roundRect","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","shades","red","pink","grape","violet","indigo","blue","cyan","teal","green","lime","yellow","orange","canvasBackground","gray","elementBackground","elementStroke","getClientColors","clientId","sum","charCodeAt","backgrounds","colors","strokes","background","LinearElementEditor","elementId","activePointIndex","draggingElementPointIndex","lastUncommittedPoint","normalizePoints","getNonDeletedElement","lastX","lastY","clickedPointIndex","getPointIndexUnderCursor","deltaX","deltaY","targetPoint","movePoint","history","didAddPoint","createPointAt","resumeRecording","newPoint","pointHandles","getPointsGlobalCoordinates","POINT_HANDLE_SIZE","_idx","pointIndex","targetPosition","nextCoords","prevCoords","nextCenterX","nextCenterY","prevCenterX","prevCenterY","rotated","strokeRectWithRotation","strokeRect","strokeCircle","arc","strokeGrid","origStrokeStyle","renderLinearPointHandles","lineWidth","setLineDash","renderScene","renderScrollbars","renderSelection","renderGrid","atLeastOneVisibleElement","normalizedCanvasWidth","normalizedCanvasHeight","hasTransparence","clearRect","zoomTranslationX","zoomTranslationY","ceil","visibleElements","isVisibleElement","selections","selectionColors","remoteSelectedElementIds","socketId","elementX1","elementY1","elementX2","elementY2","addSelectionForGroupId","groupElements","elementWidth","elementHeight","initialLineDash","getLineDash","lineDashOffset","dashedLinePadding","dashWidth","spaceWidth","locallySelectedElements","remotePointerViewportCoords","remotePointerUsernames","isOutOfBounds","remotePointerButton","paddingHorizontal","paddingVertical","measure","measureHeight","actualBoundingBoxDescent","actualBoundingBoxAscent","SCROLLBAR_WIDTH","exportToCanvas","exportPadding","createCanvas","tempCanvas","sceneElements","getWatermarkElement","exportToSvg","innerHTML","rect","renderSceneToSvg","svg","tryParseNumber","match","exec","isNumericColumn","columnIndex","every","tryParseCells","cells","numCols","hasHeader","values","spreadsheet","yAxisLabel","labels","valueColumnIndex","labelColumnIndex","row","tryParseSpreadsheet","trim","numColsFirstLine","transposedResults","nextCells","col","nextCellRow","transposeCells","renderSpreadsheet","minYLabel","toLocaleString","maxYLabel","bars","barHeight","xLabels","labelX","BAR_HEIGHT","CLIPBOARD","PREFER_APP_CLIPBOARD","probablySupportsClipboardReadText","clipboard","probablySupportsClipboardWriteText","probablySupportsClipboardBlob","HTMLCanvasElement","copyToAppClipboard","copyTextToSystemClipboard","getAppClipboard","clipboardElements","getClipboardContent","clipboardData","getData","readText","copyCanvasToClipboardAsPng","reject","toBlob","blob","write","ClipboardItem","copyCanvasToClipboardAsSvg","svgroot","writeText","outerHTML","copied","copyTextViaExecCommand","getAttribute","textarea","border","padding","margin","yPosition","pageYOffset","scrollTop","success","setSelectionRange","execCommand","migrateElementWithProperties","extra","base","migrateElement","fontPx","_fontFamily","fontFamilyName","getFontFamilyByName","restore","savedElements","savedState","migratedElement","scrollToContent","loadFromBlob","updateAppState","contents","defaultAppState","Blob","reader","FileReader","readAsText","onloadend","readyState","DONE","serializeAsJSON","source","origin","saveAsJSON","fileHandle","serialized","fileSave","fileName","description","extensions","loadFromJSON","fileOpen","mimeTypes","saveToLocalStorage","setItem","clearAppStateForLocalStorage","restoreFromLocalStorage","getItem","contextMenuNode","byteToHex","byte","generateRandomID","Uint8Array","crypto","getRandomValues","generateEncryptionKey","subtle","generateKey","exportKey","createIV","getCollaborationLinkData","link","URL","hash","generateCollaborationLink","pathname","getImportedKey","usage","importKey","alg","ext","key_ops","kty","encryptAESGEM","importedKey","iv","encrypt","decryptAESGEM","decrypt","decrypted","decodedData","TextDecoder","decode","alert","exportToBackend","json","encoded","TextEncoder","encode","encrypted","exportedKey","fetch","process","method","response","url","href","urlString","prompt","importFromBackend","privateKey","ok","arrayBuffer","buffer","string","exportCanvas","tempSvg","loadScene","replaceState","commitToHistory","Portal","app","socket","socketInitialized","roomID","roomKey","on","emit","restoreUserName","_socketID","broadcastScene","INIT","clients","setCollaborators","close","volatile","isOpen","SHAPES","icon","viewBox","d","strokeLinecap","shapesShortcutKeys","flat","clearAppStatePropertiesForHistory","SceneHistory","elementCache","recording","stateHistory","redoStack","lastEntry","generateEntry","dehydrateHistoryEntry","lastCommittedPoint","dehydratedExcalidrawElement","versions","dehydratedHistoryEntry","hydrateHistoryEntry","nextEntry","newEntryDehydrated","newEntry","shouldCreateEntry","clearRedoStack","entryToRestore","pop","currentEntry","pushEntry","Popover","onCloseRequest","fitInViewport","popoverRef","useLayoutEffect","getBoundingClientRect","contains","unstable_batchedUpdates","addEventListener","removeEventListener","ref","ContextMenu","onContextMenu","option","ContextMenuOption","action","getContextMenuNode","div","handleClose","unmountComponentAtNode","params","of","render","ActionManager","updater","getAppState","getElementsIncludingDeleted","actions","renderAction","PanelComponent","updateData","formState","perform","registerAction","keyPriority","keyTest","actionFilter","contextMenuOrder","contextItemLabel","ToolButton","forwardRef","innerRef","useImperativeHandle","sizeCn","hidden","selected","visible","title","showAriaLabel","aria-keyshortcuts","data-testid","onChange","checked","keyBindingLabel","defaultProps","ACTIVE_ELEMENT_COLOR","createIcon","mirror","focusable","save","saveAs","load","trash","palette","exportFile","zoomIn","zoomOut","done","menu","undo","redo","resetZoom","bringForward","sendBackward","bringToFront","sendToBack","strokeLinejoin","users","start","stop","back","marginLeft","clone","shield","register","handleGroupEditingState","siblingElements","actionDeleteSelected","deleteSelectedElements","swap","indexA","indexB","moveOneLeft","indicesToMove","isSorted","moveOneRight","reversedIndicesToMove","moveAllLeft","leftMostElements","reverse","moveAllRight","rightMostElements","moveElements","func","_elements","selectedIndices","deletedIndicesCache","len","getElementIndices","ButtonSelect","groupIdMap","isValidColor","color","Option","keyBindings","Picker","onClose","showInput","firstItem","activeItem","gallery","colorInput","focus","aria-modal","onKeyDown","nextIndex","toLowerCase","nativeEvent","stopImmediatePropagation","_color","currentTarget","onFocus","ColorInput","innerValue","setInnerValue","inputRef","changeColor","useCallback","inputValue","getColor","spellCheck","onBlur","ColorPicker","isActive","setActive","pickerButton","Suspense","fallback","changedColor","changeProperty","getFormValue","defaultValue","attributes","getCommonAttributeOfSelectedElements","KEY_CODES","step","onWheel","stopPropagation","_","confirm","actionFinalize","commonBounds","currentZoom","newZoom","zoomX","zoomY","calculateZoom","newElements","blur","multiPointElement","linePoints","ProjectName","handleFocus","handleBlur","handleKeyDown","isComposing","makeEditable","editable","contentEditable","suppressContentEditableWarning","data-type","copiedStyles","catch","loadedElements","loadedAppState","message","ICON","pastedElement","xmlns","HelpIcon","Avatar","requestFullscreen","exitFullscreen","selectedGroupId","elementIdsInGroup","updatedElements","lastElementInGroup","lastGroupElementIndex","lastIndexOf","elementsAfterGroup","elementsBeforeGroup","updatedElement","updatedElementsInOrder","nextGroupIds","removeFromSelectedGroups","getCenter","collaborator","shortName","names","substring","firstName","lastName","getClientInitials","pointer","pointers","allCoords","coords","getDistance","array","item","writeData","prevElements","prevElementMap","nextElementMap","nextElement","prevElement","syncHistory","testUndo","shift","Island","gap","align","justifyContent","alignItems","justifyItems","FixedSideContainer","UserList","mobile","compClassName","ICONS","CHECKED","UNCHECKED","LockIcon","Modal","modalRoot","useBodyRoot","createPortal","aria-labelledby","labelledBy","maxWidth","maxHeight","overflowY","Dialog","islandRef","focusableElements","queryFocusableElements","currentIndex","findIndex","querySelectorAll","scales","defaultScale","ExportModal","actionManager","onExportToPng","onExportToSvg","onExportToClipboard","onExportToBackend","someElementIsSelected","setScale","exportSelected","setExportSelected","previewRef","exportedElements","previewNode","ExportDialog","modalIsShown","setModalIsShown","triggerButton","LanguageList","i18n","floating","Fragment","HintViewer","hint","multiMode","targetElement","getHints","SelectedShapeActions","targetElements","getTargetElement","isEditing","ShapesSwitcher","setAppState","ZoomActions","marginInlineStart","Section","heading","header","RoomModal","activeRoomLink","onUsernameChange","onRoomCreate","onRoomDestroy","onPressingEnter","roomLinkInput","htmlFor","onKeyPress","RoomDialog","collaboratorCount","setActiveRoomLink","MobileMenu","exportButton","onLockToggle","marginBottom","marginRight","client","ErrorDialog","Columns","flexDirection","flexWrap","Column","ShortcutIsland","caption","Shortcut","borderTop","flex","minWidth","shortcuts","isOr","ShortcutKey","wordBreak","borderRadius","minHeight","boxSizing","Footer","marginTop","paddingTop","rel","ShortcutsDialog","GitHubCorner","memo","transformOrigin","Tooltip","toggleZenMode","renderExportDialog","createExporter","shouldRenderSelectedShapeActions","zIndex","renderFixedSideContainer","getNecessaryObj","prevAppState","withBatchedUpdates","didTapTwice","tappedTwiceTimer","isHoldingSpace","isPanning","isDraggingScrollBar","currentScrollBars","touchTimeout","touchMoving","lastPointerUp","gesture","lastCenter","initialDistance","initialScale","App","portal","lastBroadcastedOrReceivedSceneVersion","broadcastedElementVersions","removeSceneCallback","unmounted","syncActionResult","res","replaceAllElements","setCurrentState","saveDebounced","onUnload","destroySocketClient","disableEvent","onFontLoaded","onSceneUpdated","initializeScene","searchParams","URLSearchParams","search","jsonMatch","isCollaborationScene","scene","initializeSocketClient","showLoadingState","onResize","beforeUnload","getElements","returnValue","queueBroadcastAllElements","throttle","UPDATE","onCut","copyAll","executeAction","onCopy","copyToClipboardAsPng","copyToClipboardAsSvg","onTapStart","resetTapTwice","touches","handleCanvasDoubleClick","onTapEnd","pasteFromClipboard","elementUnderCursor","elementFromPoint","addElementsFromPaste","addTextFromPaste","selectShapeTool","elementsCenterX","elementsCenterY","obj","removePointer","pointerId","openPortal","pushState","closePortal","toggleLock","prevState","toggleGridMode","roomMatch","initialize","initializationTimer","updateScene","decryptedData","remoteElements","payload","localElementMap","socketIOClient","encryptedData","socketID","pointerCoords","button","user","off","broadcastMouseLocation","_broadcastSocketData","sceneType","syncAll","syncableElements","syncableElement","updateCurrentCursorPosition","HTMLSelectElement","findShapeByKey","update","selectedElement","startTextEditing","ctrlKey","metaKey","onKeyUp","onGestureStart","onGestureChange","onGestureEnd","setElements","insertAtParentCenter","existingTextElement","getTextElementAtPosition","parentCenterPosition","getTextWysiwygSnappedToCenterPosition","elementCenterX","elementCenterY","handleTextWysiwyg","isExistingElement","getSelectedGroupIdForElement","handleCanvasPointerMove","savePointer","center","scaleFactor","resetShouldCacheIgnoreZoomDebounced","isOverScrollBar","handlePointerMove","buttons","elementWithResizeHandler","handleTouchMove","handleCanvasPointerDown","persist","openContextMenu","nextPastePrevented","isLinux","onPointerMove","preventNextPaste","PASTE","POINTER_UP","enableNextPaste","teardown","POINTER_MOVE","BLUR","passive","onPointerUp","originGridX","originGridY","setResizeHandle","nextResizeHandle","resizeOffsetXY","isResizingElements","draggingOccurred","dragOffsetXY","hitElementWasAddedToSelection","getResizeOffsetXY","getResizeArrowDirection","handlePointerDown","gridX","gridY","selectedElementWasDuplicated","getDragOffsetXY","resizeX","resizeY","normalizeResizeHandle","resizeElements","handlePointDragging","dragX","dragY","dragSelectedElements","elementsToAppend","duplicatedElement","originDragX","originDragY","simplify","elementsWithinSelection","selectionX1","selectionY1","selectionX2","selectionY2","getElementsWithinSelection","childEvent","handlePointerUp","_prevState","handleCanvasRef","WHEEL","handleWheel","TOUCH_START","TOUCH_END","handleCanvasOnDrop","file","dataTransfer","files","endsWith","handleCanvasContextMenu","getContextMenuItems","delta","isNaN","registerAll","undoOnce","redoOnce","createRedoAction","canvasDOMWidth","canvasDOMHeight","canvasScale","canvasWidth","canvasHeight","saveUsernameToLocalStorage","onDoubleClick","onPointerCancel","onTouchMove","onDrop","bind","defineProperties","configurable","addCallback","addEventListeners","removeEventListeners","COPY","CUT","KEYDOWN","MOUSE_MOVE","KEYUP","RESIZE","UNLOAD","DRAG_OVER","DROP","GESTURE_START","GESTURE_CHANGE","GESTURE_END","BEFORE_UNLOAD","fonts","pointerViewportCoords","pointerUsernames","record","sockets","restoreUsernameFromLocalStorage","resetSelection","updateElement","_element","onSubmit","onCancel","getViewportCoords","updateWysiwygStyle","viewportX","viewportY","transform","tabIndex","wrap","backfaceVisibility","outline","resize","oninput","onkeydown","handleSubmit","stopEvent","cleanup","isDestroyed","onblur","rebindBlur","unbindUpdate","closest","textWysiwyg","elementClickedInside","getElementContainingPosition","Preview","snapshot","ctx","putImageData","imageData","Claymate","snapshots","setSnapshots","getImageData","createSnapshot","gif","GIF","addFrame","disabled","hostname","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"0qNAAA,IAAIA,EAAM,CACT,cAAe,CACd,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,OAAQ,CACP,GACA,GAED,YAAa,CACZ,GACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,gBAAiB,CAChB,GACA,GAED,qBAAsB,CACrB,GACA,GAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,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","file":"static/js/main.f2af84fa.chunk.js","sourcesContent":["var map = {\n\t\"./README.md\": [\n\t\t97,\n\t\t7,\n\t\t39\n\t],\n\t\"./ar-SA\": [\n\t\t40,\n\t\t3,\n\t\t0\n\t],\n\t\"./ar-SA.json\": [\n\t\t40,\n\t\t3,\n\t\t0\n\t],\n\t\"./bg-BG\": [\n\t\t41,\n\t\t3,\n\t\t1\n\t],\n\t\"./bg-BG.json\": [\n\t\t41,\n\t\t3,\n\t\t1\n\t],\n\t\"./ca-ES\": [\n\t\t42,\n\t\t3,\n\t\t2\n\t],\n\t\"./ca-ES.json\": [\n\t\t42,\n\t\t3,\n\t\t2\n\t],\n\t\"./de-DE\": [\n\t\t43,\n\t\t3,\n\t\t3\n\t],\n\t\"./de-DE.json\": [\n\t\t43,\n\t\t3,\n\t\t3\n\t],\n\t\"./el-GR\": [\n\t\t44,\n\t\t3,\n\t\t4\n\t],\n\t\"./el-GR.json\": [\n\t\t44,\n\t\t3,\n\t\t4\n\t],\n\t\"./en\": [\n\t\t23,\n\t\t3\n\t],\n\t\"./en.json\": [\n\t\t23,\n\t\t3\n\t],\n\t\"./es-ES\": [\n\t\t45,\n\t\t3,\n\t\t5\n\t],\n\t\"./es-ES.json\": [\n\t\t45,\n\t\t3,\n\t\t5\n\t],\n\t\"./fa-IR\": [\n\t\t46,\n\t\t3,\n\t\t6\n\t],\n\t\"./fa-IR.json\": [\n\t\t46,\n\t\t3,\n\t\t6\n\t],\n\t\"./fi-FI\": [\n\t\t47,\n\t\t3,\n\t\t7\n\t],\n\t\"./fi-FI.json\": [\n\t\t47,\n\t\t3,\n\t\t7\n\t],\n\t\"./fr-FR\": [\n\t\t48,\n\t\t3,\n\t\t8\n\t],\n\t\"./fr-FR.json\": [\n\t\t48,\n\t\t3,\n\t\t8\n\t],\n\t\"./he-IL\": [\n\t\t49,\n\t\t3,\n\t\t9\n\t],\n\t\"./he-IL.json\": [\n\t\t49,\n\t\t3,\n\t\t9\n\t],\n\t\"./hi-IN\": [\n\t\t50,\n\t\t3,\n\t\t10\n\t],\n\t\"./hi-IN.json\": [\n\t\t50,\n\t\t3,\n\t\t10\n\t],\n\t\"./hu-HU\": [\n\t\t51,\n\t\t3,\n\t\t11\n\t],\n\t\"./hu-HU.json\": [\n\t\t51,\n\t\t3,\n\t\t11\n\t],\n\t\"./id-ID\": [\n\t\t52,\n\t\t3,\n\t\t12\n\t],\n\t\"./id-ID.json\": [\n\t\t52,\n\t\t3,\n\t\t12\n\t],\n\t\"./it-IT\": [\n\t\t53,\n\t\t3,\n\t\t13\n\t],\n\t\"./it-IT.json\": [\n\t\t53,\n\t\t3,\n\t\t13\n\t],\n\t\"./ja-JP\": [\n\t\t54,\n\t\t3,\n\t\t14\n\t],\n\t\"./ja-JP.json\": [\n\t\t54,\n\t\t3,\n\t\t14\n\t],\n\t\"./ko-KR\": [\n\t\t55,\n\t\t3,\n\t\t15\n\t],\n\t\"./ko-KR.json\": [\n\t\t55,\n\t\t3,\n\t\t15\n\t],\n\t\"./nb-NO\": [\n\t\t56,\n\t\t3,\n\t\t16\n\t],\n\t\"./nb-NO.json\": [\n\t\t56,\n\t\t3,\n\t\t16\n\t],\n\t\"./nl-NL\": [\n\t\t57,\n\t\t3,\n\t\t17\n\t],\n\t\"./nl-NL.json\": [\n\t\t57,\n\t\t3,\n\t\t17\n\t],\n\t\"./nn-NO\": [\n\t\t58,\n\t\t3,\n\t\t18\n\t],\n\t\"./nn-NO.json\": [\n\t\t58,\n\t\t3,\n\t\t18\n\t],\n\t\"./percentages\": [\n\t\t24,\n\t\t3\n\t],\n\t\"./percentages.json\": [\n\t\t24,\n\t\t3\n\t],\n\t\"./pl-PL\": [\n\t\t59,\n\t\t3,\n\t\t19\n\t],\n\t\"./pl-PL.json\": [\n\t\t59,\n\t\t3,\n\t\t19\n\t],\n\t\"./pt-PT\": [\n\t\t60,\n\t\t3,\n\t\t20\n\t],\n\t\"./pt-PT.json\": [\n\t\t60,\n\t\t3,\n\t\t20\n\t],\n\t\"./ru-RU\": [\n\t\t61,\n\t\t3,\n\t\t21\n\t],\n\t\"./ru-RU.json\": [\n\t\t61,\n\t\t3,\n\t\t21\n\t],\n\t\"./sq-AL\": [\n\t\t62,\n\t\t3,\n\t\t22\n\t],\n\t\"./sq-AL.json\": [\n\t\t62,\n\t\t3,\n\t\t22\n\t],\n\t\"./tr-TR\": [\n\t\t63,\n\t\t3,\n\t\t23\n\t],\n\t\"./tr-TR.json\": [\n\t\t63,\n\t\t3,\n\t\t23\n\t],\n\t\"./uk-UA\": [\n\t\t64,\n\t\t3,\n\t\t24\n\t],\n\t\"./uk-UA.json\": [\n\t\t64,\n\t\t3,\n\t\t24\n\t],\n\t\"./zh-CN\": [\n\t\t65,\n\t\t3,\n\t\t25\n\t],\n\t\"./zh-CN.json\": [\n\t\t65,\n\t\t3,\n\t\t25\n\t],\n\t\"./zh-TW\": [\n\t\t66,\n\t\t3,\n\t\t26\n\t],\n\t\"./zh-TW.json\": [\n\t\t66,\n\t\t3,\n\t\t26\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 33;\nmodule.exports = webpackAsyncContext;","import { FontFamily } from \"./element/types\";\n\nexport const DRAGGING_THRESHOLD = 10; // 10px\nexport const LINE_CONFIRM_THRESHOLD = 10; // 10px\nexport const ELEMENT_SHIFT_TRANSLATE_AMOUNT = 5;\nexport const ELEMENT_TRANSLATE_AMOUNT = 1;\nexport const TEXT_TO_CENTER_SNAP_THRESHOLD = 30;\nexport const SHIFT_LOCKING_ANGLE = Math.PI / 12;\nexport const CURSOR_TYPE = {\n  TEXT: \"text\",\n  CROSSHAIR: \"crosshair\",\n  GRABBING: \"grabbing\",\n  POINTER: \"pointer\",\n};\nexport const POINTER_BUTTON = {\n  MAIN: 0,\n  WHEEL: 1,\n  SECONDARY: 2,\n  TOUCH: -1,\n};\n\nexport enum SCENE {\n  INIT = \"SCENE_INIT\",\n  UPDATE = \"SCENE_UPDATE\",\n}\n\nexport enum EVENT {\n  COPY = \"copy\",\n  PASTE = \"paste\",\n  CUT = \"cut\",\n  KEYDOWN = \"keydown\",\n  KEYUP = \"keyup\",\n  MOUSE_MOVE = \"mousemove\",\n  RESIZE = \"resize\",\n  UNLOAD = \"unload\",\n  BLUR = \"blur\",\n  DRAG_OVER = \"dragover\",\n  DROP = \"drop\",\n  GESTURE_END = \"gestureend\",\n  BEFORE_UNLOAD = \"beforeunload\",\n  GESTURE_START = \"gesturestart\",\n  GESTURE_CHANGE = \"gesturechange\",\n  POINTER_MOVE = \"pointermove\",\n  POINTER_UP = \"pointerup\",\n  STATE_CHANGE = \"statechange\",\n  WHEEL = \"wheel\",\n  TOUCH_START = \"touchstart\",\n  TOUCH_END = \"touchend\",\n}\n\nexport const ENV = {\n  TEST: \"test\",\n  DEVELOPMENT: \"development\",\n};\n\nexport const BROADCAST = {\n  SERVER_VOLATILE: \"server-volatile-broadcast\",\n  SERVER: \"server-broadcast\",\n};\n\nexport const CLASSES = {\n  SHAPE_ACTIONS_MENU: \"App-menu__left\",\n};\n\n// 1-based in case we ever do `if(element.fontFamily)`\nexport const FONT_FAMILY = {\n  1: \"Virgil\",\n  2: \"Helvetica\",\n  3: \"Cascadia\",\n} as const;\n\nexport const DEFAULT_FONT_SIZE = 20;\nexport const DEFAULT_FONT_FAMILY: FontFamily = 1;\nexport const DEFAULT_TEXT_ALIGN = \"left\";\nexport const DEFAULT_VERTICAL_ALIGN = \"top\";\n\nexport const CANVAS_ONLY_ACTIONS = [\"selectAll\"];\n\nexport const GRID_SIZE = 20; // TODO make it configurable?\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n} from \"./types\";\n\nexport const isTextElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElement => {\n  return element != null && element.type === \"text\";\n};\n\nexport const isLinearElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return (\n    element != null &&\n    (element.type === \"arrow\" ||\n      element.type === \"line\" ||\n      element.type === \"draw\")\n  );\n};\n\nexport const isExcalidrawElement = (element: any): boolean => {\n  return (\n    element?.type === \"text\" ||\n    element?.type === \"diamond\" ||\n    element?.type === \"rectangle\" ||\n    element?.type === \"ellipse\" ||\n    element?.type === \"arrow\" ||\n    element?.type === \"draw\" ||\n    element?.type === \"line\"\n  );\n};\n","import { Point } from \"./types\";\nimport { LINE_CONFIRM_THRESHOLD } from \"./constants\";\nimport { ExcalidrawLinearElement } from \"./element/types\";\n\n// https://stackoverflow.com/a/6853926/232122\nexport const distanceBetweenPointAndSegment = (\n  x: number,\n  y: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n) => {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const lenSquare = C * C + D * D;\n  let param = -1;\n  if (lenSquare !== 0) {\n    // in case of 0 length line\n    param = dot / lenSquare;\n  }\n\n  let xx, yy;\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  const dx = x - xx;\n  const dy = y - yy;\n  return Math.hypot(dx, dy);\n};\n\nexport const rotate = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  angle: number,\n): [number, number] =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const adjustXYWithRotation = (\n  sides: {\n    n?: boolean;\n    e?: boolean;\n    s?: boolean;\n    w?: boolean;\n  },\n  x: number,\n  y: number,\n  angle: number,\n  deltaX1: number,\n  deltaY1: number,\n  deltaX2: number,\n  deltaY2: number,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  if (sides.e && sides.w) {\n    x += deltaX1 + deltaX2;\n  } else if (sides.e) {\n    x += deltaX1 * (1 + cos);\n    y += deltaX1 * sin;\n    x += deltaX2 * (1 - cos);\n    y += deltaX2 * -sin;\n  } else if (sides.w) {\n    x += deltaX1 * (1 - cos);\n    y += deltaX1 * -sin;\n    x += deltaX2 * (1 + cos);\n    y += deltaX2 * sin;\n  }\n\n  if (sides.n && sides.s) {\n    y += deltaY1 + deltaY2;\n  } else if (sides.n) {\n    x += deltaY1 * sin;\n    y += deltaY1 * (1 - cos);\n    x += deltaY2 * -sin;\n    y += deltaY2 * (1 + cos);\n  } else if (sides.s) {\n    x += deltaY1 * -sin;\n    y += deltaY1 * (1 + cos);\n    x += deltaY2 * sin;\n    y += deltaY2 * (1 - cos);\n  }\n  return [x, y];\n};\n\nexport const getFlipAdjustment = (\n  side: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  nextWidth: number,\n  nextHeight: number,\n  nextX1: number,\n  nextY1: number,\n  nextX2: number,\n  nextY2: number,\n  finalX1: number,\n  finalY1: number,\n  finalX2: number,\n  finalY2: number,\n  needsRotation: boolean,\n  angle: number,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  let flipDiffX = 0;\n  let flipDiffY = 0;\n  if (nextWidth < 0) {\n    if (side === \"e\" || side === \"ne\" || side === \"se\") {\n      if (needsRotation) {\n        flipDiffX += (finalX2 - nextX1) * cos;\n        flipDiffY += (finalX2 - nextX1) * sin;\n      } else {\n        flipDiffX += finalX2 - nextX1;\n      }\n    }\n    if (side === \"w\" || side === \"nw\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffX += (finalX1 - nextX2) * cos;\n        flipDiffY += (finalX1 - nextX2) * sin;\n      } else {\n        flipDiffX += finalX1 - nextX2;\n      }\n    }\n  }\n  if (nextHeight < 0) {\n    if (side === \"s\" || side === \"se\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY2 - nextY1) * cos;\n        flipDiffX += (finalY2 - nextY1) * -sin;\n      } else {\n        flipDiffY += finalY2 - nextY1;\n      }\n    }\n    if (side === \"n\" || side === \"ne\" || side === \"nw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY1 - nextY2) * cos;\n        flipDiffX += (finalY1 - nextY2) * -sin;\n      } else {\n        flipDiffY += finalY1 - nextY2;\n      }\n    }\n  }\n  return [flipDiffX, flipDiffY];\n};\n\nexport const getPointOnAPath = (point: Point, path: Point[]) => {\n  const [px, py] = point;\n  const [start, ...other] = path;\n  let [lastX, lastY] = start;\n  let kLine: number = 0;\n  let idx: number = 0;\n\n  // if any item in the array is true, it means that a point is\n  // on some segment of a line based path\n  const retVal = other.some(([x2, y2], i) => {\n    // we always take a line when dealing with line segments\n    const x1 = lastX;\n    const y1 = lastY;\n\n    lastX = x2;\n    lastY = y2;\n\n    // if a point is not within the domain of the line segment\n    // it is not on the line segment\n    if (px < x1 || px > x2) {\n      return false;\n    }\n\n    // check if all points lie on the same line\n    // y1 = kx1 + b, y2 = kx2 + b\n    // y2 - y1 = k(x2 - x2) -> k = (y2 - y1) / (x2 - x1)\n\n    // coefficient for the line (p0, p1)\n    const kL = (y2 - y1) / (x2 - x1);\n\n    // coefficient for the line segment (p0, point)\n    const kP1 = (py - y1) / (px - x1);\n\n    // coefficient for the line segment (point, p1)\n    const kP2 = (py - y2) / (px - x2);\n\n    // because we are basing both lines from the same starting point\n    // the only option for collinearity is having same coefficients\n\n    // using it for floating point comparisons\n    const epsilon = 0.3;\n\n    // if coefficient is more than an arbitrary epsilon,\n    // these lines are nor collinear\n    if (Math.abs(kP1 - kL) > epsilon && Math.abs(kP2 - kL) > epsilon) {\n      return false;\n    }\n\n    // store the coefficient because we are goint to need it\n    kLine = kL;\n    idx = i;\n\n    return true;\n  });\n\n  // Return a coordinate that is always on the line segment\n  if (retVal === true) {\n    return { x: point[0], y: kLine * point[0], segment: idx };\n  }\n\n  return null;\n};\n\nexport const distance2d = (x1: number, y1: number, x2: number, y2: number) => {\n  const xd = x2 - x1;\n  const yd = y2 - y1;\n  return Math.hypot(xd, yd);\n};\n\n// Checks if the first and last point are close enough\n// to be considered a loop\nexport const isPathALoop = (\n  points: ExcalidrawLinearElement[\"points\"],\n): boolean => {\n  if (points.length >= 3) {\n    const [firstPoint, lastPoint] = [points[0], points[points.length - 1]];\n    return (\n      distance2d(firstPoint[0], firstPoint[1], lastPoint[0], lastPoint[1]) <=\n      LINE_CONFIRM_THRESHOLD\n    );\n  }\n  return false;\n};\n\n// Draw a line from the point to the right till infiinty\n// Check how many lines of the polygon does this infinite line intersects with\n// If the number of intersections is odd, point is in the polygon\nexport const isPointInPolygon = (\n  points: Point[],\n  x: number,\n  y: number,\n): boolean => {\n  const vertices = points.length;\n\n  // There must be at least 3 vertices in polygon\n  if (vertices < 3) {\n    return false;\n  }\n  const extreme: Point = [Number.MAX_SAFE_INTEGER, y];\n  const p: Point = [x, y];\n  let count = 0;\n  for (let i = 0; i < vertices; i++) {\n    const current = points[i];\n    const next = points[(i + 1) % vertices];\n    if (doIntersect(current, next, p, extreme)) {\n      if (orientation(current, p, next) === 0) {\n        return onSegment(current, p, next);\n      }\n      count++;\n    }\n  }\n  // true if count is off\n  return count % 2 === 1;\n};\n\n// Check if q lies on the line segment pr\nconst onSegment = (p: Point, q: Point, r: Point) => {\n  return (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  );\n};\n\n// For the ordered points p, q, r, return\n// 0 if p, q, r are collinear\n// 1 if Clockwise\n// 2 if counterclickwise\nconst orientation = (p: Point, q: Point, r: Point) => {\n  const val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n  if (val === 0) {\n    return 0;\n  }\n  return val > 0 ? 1 : 2;\n};\n\n// Check is p1q1 intersects with p2q2\nconst doIntersect = (p1: Point, q1: Point, p2: Point, q2: Point) => {\n  const o1 = orientation(p1, q1, p2);\n  const o2 = orientation(p1, q1, q2);\n  const o3 = orientation(p2, q2, p1);\n  const o4 = orientation(p2, q2, q1);\n\n  if (o1 !== o2 && o3 !== o4) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and p2 lies on segment p1q1\n  if (o1 === 0 && onSegment(p1, p2, q1)) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and q2 lies on segment p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) {\n    return true;\n  }\n\n  // p2, q2 and p1 are colinear and p1 lies on segment p2q2\n  if (o3 === 0 && onSegment(p2, p1, q2)) {\n    return true;\n  }\n\n  // p2, q2 and q1 are colinear and q1 lies on segment p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const getGridPoint = (\n  x: number,\n  y: number,\n  gridSize: number | null,\n): [number, number] => {\n  if (gridSize) {\n    return [\n      Math.round(x / gridSize) * gridSize,\n      Math.round(y / gridSize) * gridSize,\n    ];\n  }\n  return [x, y];\n};\n","import { Point } from \"./types\";\n\nexport const getSizeFromPoints = (points: readonly Point[]) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\nexport const rescalePoints = (\n  dimension: 0 | 1,\n  nextDimensionSize: number,\n  prevPoints: readonly Point[],\n): Point[] => {\n  const prevDimValues = prevPoints.map((point) => point[dimension]);\n  const prevMaxDimension = Math.max(...prevDimValues);\n  const prevMinDimension = Math.min(...prevDimValues);\n  const prevDimensionSize = prevMaxDimension - prevMinDimension;\n\n  const dimensionScaleFactor =\n    prevDimensionSize === 0 ? 1 : nextDimensionSize / prevDimensionSize;\n\n  let nextMinDimension = Infinity;\n\n  const scaledPoints = prevPoints.map(\n    (prevPoint) =>\n      prevPoint.map((value, currentDimension) => {\n        if (currentDimension !== dimension) {\n          return value;\n        }\n        const scaledValue = value * dimensionScaleFactor;\n        nextMinDimension = Math.min(scaledValue, nextMinDimension);\n        return scaledValue;\n      }) as [number, number],\n  );\n\n  if (scaledPoints.length === 2) {\n    // we don't tranlate two-point lines\n    return scaledPoints;\n  }\n\n  const translation = prevMinDimension - nextMinDimension;\n\n  const nextPoints = scaledPoints.map(\n    (scaledPoint) =>\n      scaledPoint.map((value, currentDimension) => {\n        return currentDimension === dimension ? value + translation : value;\n      }) as [number, number],\n  );\n\n  return nextPoints;\n};\n","import { ExcalidrawElement, ExcalidrawLinearElement } from \"./types\";\nimport { distance2d, rotate } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { Drawable, Op } from \"roughjs/bin/core\";\nimport { Point } from \"../types\";\nimport {\n  getShapeForElement,\n  generateRoughOptions,\n} from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { rescalePoints } from \"../points\";\n\n// If the element is created from right to left, the width is going to be negative\n// This set of functions retrieves the absolute position of the 4 points.\nexport const getElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  if (isLinearElement(element)) {\n    return getLinearElementAbsoluteCoords(element);\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n  ];\n};\n\nexport const getDiamondPoints = (element: ExcalidrawElement) => {\n  // Here we add +1 to avoid these numbers to be 0\n  // otherwise rough.js will throw an error complaining about it\n  const topX = Math.floor(element.width / 2) + 1;\n  const topY = 0;\n  const rightX = element.width;\n  const rightY = Math.floor(element.height / 2) + 1;\n  const bottomX = topX;\n  const bottomY = element.height;\n  const leftX = topY;\n  const leftY = rightY;\n\n  return [topX, topY, rightX, rightY, bottomX, bottomY, leftX, leftY];\n};\n\nexport const getCurvePathOps = (shape: Drawable): Op[] => {\n  for (const set of shape.sets) {\n    if (set.type === \"path\") {\n      return set.ops;\n    }\n  }\n  return shape.sets[0].ops;\n};\n\nconst getMinMaxXYFromCurvePathOps = (\n  ops: Op[],\n  transformXY?: (x: number, y: number) => [number, number],\n): [number, number, number, number] => {\n  let currentP: Point = [0, 0];\n  const { minX, minY, maxX, maxY } = ops.reduce(\n    (limits, { op, data }) => {\n      // There are only four operation types:\n      // move, bcurveTo, lineTo, and curveTo\n      if (op === \"move\") {\n        // change starting point\n        currentP = (data as unknown) as Point;\n        // move operation does not draw anything; so, it always\n        // returns false\n      } else if (op === \"bcurveTo\") {\n        // create points from bezier curve\n        // bezier curve stores data as a flattened array of three positions\n        // [x1, y1, x2, y2, x3, y3]\n        const p1 = [data[0], data[1]] as Point;\n        const p2 = [data[2], data[3]] as Point;\n        const p3 = [data[4], data[5]] as Point;\n\n        const p0 = currentP;\n        currentP = p3;\n\n        const equation = (t: number, idx: number) =>\n          Math.pow(1 - t, 3) * p3[idx] +\n          3 * t * Math.pow(1 - t, 2) * p2[idx] +\n          3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n          p0[idx] * Math.pow(t, 3);\n\n        let t = 0;\n        while (t <= 1.0) {\n          let x = equation(t, 0);\n          let y = equation(t, 1);\n          if (transformXY) {\n            [x, y] = transformXY(x, y);\n          }\n\n          limits.minY = Math.min(limits.minY, y);\n          limits.minX = Math.min(limits.minX, x);\n\n          limits.maxX = Math.max(limits.maxX, x);\n          limits.maxY = Math.max(limits.maxY, y);\n\n          t += 0.1;\n        }\n      } else if (op === \"lineTo\") {\n        // TODO: Implement this\n      } else if (op === \"qcurveTo\") {\n        // TODO: Implement this\n      }\n      return limits;\n    },\n    { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n  );\n\n  return [minX, minY, maxX, maxY];\n};\n\nconst getLinearElementAbsoluteCoords = (\n  element: ExcalidrawLinearElement,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getArrowPoints = (\n  element: ExcalidrawLinearElement,\n  shape: Drawable[],\n) => {\n  const ops = getCurvePathOps(shape[0]);\n\n  const data = ops[ops.length - 1].data;\n  const p3 = [data[4], data[5]] as Point;\n  const p2 = [data[2], data[3]] as Point;\n  const p1 = [data[0], data[1]] as Point;\n\n  // we need to find p0 of the bezier curve\n  // it is typically the last point of the previous\n  // curve; it can also be the position of moveTo operation\n  const prevOp = ops[ops.length - 2];\n  let p0: Point = [0, 0];\n  if (prevOp.op === \"move\") {\n    p0 = (prevOp.data as unknown) as Point;\n  } else if (prevOp.op === \"bcurveTo\") {\n    p0 = [prevOp.data[4], prevOp.data[5]];\n  }\n\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // we know the last point of the arrow\n  const [x2, y2] = p3;\n\n  // by using cubic bezier equation (B(t)) and the given parameters,\n  // we calculate a point that is closer to the last point\n  // The value 0.3 is chosen arbitrarily and it works best for all\n  // the tested cases\n  const [x1, y1] = [equation(0.3, 0), equation(0.3, 1)];\n\n  // find the normalized direction vector based on the\n  // previously calculated points\n  const distance = Math.hypot(x2 - x1, y2 - y1);\n  const nx = (x2 - x1) / distance;\n  const ny = (y2 - y1) / distance;\n\n  const size = 30; // pixels\n  const arrowLength = element.points.reduce((total, [cx, cy], idx, points) => {\n    const [px, py] = idx > 0 ? points[idx - 1] : [0, 0];\n    return total + Math.hypot(cx - px, cy - py);\n  }, 0);\n\n  // Scale down the arrow until we hit a certain size so that it doesn't look weird\n  // This value is selected by minizing a minmum size with the whole length of the arrow\n  // intead of last segment of the arrow\n  const minSize = Math.min(size, arrowLength / 2);\n  const xs = x2 - nx * minSize;\n  const ys = y2 - ny * minSize;\n\n  const angle = 20; // degrees\n  const [x3, y3] = rotate(xs, ys, x2, y2, (-angle * Math.PI) / 180);\n  const [x4, y4] = rotate(xs, ys, x2, y2, (angle * Math.PI) / 180);\n\n  return [x2, y2, x3, y3, x4, y4];\n};\n\nconst getLinearElementRotatedBounds = (\n  element: ExcalidrawLinearElement,\n  cx: number,\n  cy: number,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        [x, y] = rotate(element.x + x, element.y + y, cx, cy, element.angle);\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [minX, minY, maxX, maxY];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const transformXY = (x: number, y: number) =>\n    rotate(element.x + x, element.y + y, cx, cy, element.angle);\n  return getMinMaxXYFromCurvePathOps(ops, transformXY);\n};\n\nexport const getElementBounds = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  if (isLinearElement(element)) {\n    return getLinearElementRotatedBounds(element, cx, cy);\n  }\n  if (element.type === \"diamond\") {\n    const [x11, y11] = rotate(cx, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(cx, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x1, cy, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, cy, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    return [minX, minY, maxX, maxY];\n  }\n  if (element.type === \"ellipse\") {\n    const w = (x2 - x1) / 2;\n    const h = (y2 - y1) / 2;\n    const cos = Math.cos(element.angle);\n    const sin = Math.sin(element.angle);\n    const ww = Math.hypot(w * cos, h * sin);\n    const hh = Math.hypot(h * cos, w * sin);\n    return [cx - ww, cy - hh, cx + ww, cy + hh];\n  }\n  const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n  const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n  const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n  const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n  const minX = Math.min(x11, x12, x22, x21);\n  const minY = Math.min(y11, y12, y22, y21);\n  const maxX = Math.max(x11, x12, x22, x21);\n  const maxY = Math.max(y11, y12, y22, y21);\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getCommonBounds = (\n  elements: readonly ExcalidrawElement[],\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getResizedElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n  nextWidth: number,\n  nextHeight: number,\n): [number, number, number, number] => {\n  if (!isLinearElement(element)) {\n    return [\n      element.x,\n      element.y,\n      element.x + nextWidth,\n      element.y + nextHeight,\n    ];\n  }\n\n  const points = rescalePoints(\n    0,\n    nextWidth,\n    rescalePoints(1, nextHeight, element.points),\n  );\n\n  const gen = rough.generator();\n  const curve = gen.curve(\n    points as [number, number][],\n    generateRoughOptions(element),\n  );\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getElementPointsCoords = (\n  element: ExcalidrawLinearElement,\n  points: readonly (readonly [number, number])[],\n): [number, number, number, number] => {\n  // This might be computationally heavey\n  const gen = rough.generator();\n  const curve = gen.curve(\n    points as [number, number][],\n    generateRoughOptions(element),\n  );\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getClosestElementBounds = (\n  elements: readonly ExcalidrawElement[],\n  from: { x: number; y: number },\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minDistance = Infinity;\n  let closestElement = elements[0];\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    const distance = distance2d((x1 + x2) / 2, (y1 + y2) / 2, from.x, from.y);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestElement = element;\n    }\n  });\n\n  return getElementBounds(closestElement);\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { isTextElement, isLinearElement } from \"../element/typeChecks\";\nimport {\n  getDiamondPoints,\n  getArrowPoints,\n  getElementAbsoluteCoords,\n} from \"../element/bounds\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { Drawable, Options } from \"roughjs/bin/core\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport { RoughGenerator } from \"roughjs/bin/generator\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  SVG_NS,\n  distance,\n  getFontString,\n  getFontFamilyString,\n  isRTL,\n} from \"../utils\";\nimport { isPathALoop } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\n\nconst CANVAS_PADDING = 20;\n\nconst DASHARRAY_DASHED = [12, 8];\nconst DASHARRAY_DOTTED = [3, 6];\n\nexport interface ExcalidrawElementWithCanvas {\n  element: ExcalidrawElement | ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  canvasZoom: number;\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n}\n\nconst generateElementCanvas = (\n  element: NonDeletedExcalidrawElement,\n  zoom: number,\n): ExcalidrawElementWithCanvas => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\")!;\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  if (isLinearElement(element)) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n\n    canvasOffsetX =\n      element.x > x1\n        ? Math.floor(distance(element.x, x1)) * window.devicePixelRatio\n        : 0;\n    canvasOffsetY =\n      element.y > y1\n        ? Math.floor(distance(element.y, y1)) * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX * zoom, canvasOffsetY * zoom);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n  }\n\n  context.translate(CANVAS_PADDING, CANVAS_PADDING);\n  context.scale(window.devicePixelRatio * zoom, window.devicePixelRatio * zoom);\n\n  const rc = rough.canvas(canvas);\n  drawElementOnCanvas(element, rc, context);\n  context.translate(-CANVAS_PADDING, -CANVAS_PADDING);\n  context.scale(\n    1 / (window.devicePixelRatio * zoom),\n    1 / (window.devicePixelRatio * zoom),\n  );\n  return { element, canvas, canvasZoom: zoom, canvasOffsetX, canvasOffsetY };\n};\n\nconst drawElementOnCanvas = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      rc.draw(getShapeForElement(element) as Drawable);\n      break;\n    }\n    case \"arrow\":\n    case \"draw\":\n    case \"line\": {\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        rc.draw(shape);\n      });\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const rtl = isRTL(element.text);\n        const shouldTemporarilyAttach = rtl && !context.canvas.isConnected;\n        if (shouldTemporarilyAttach) {\n          // to correctly render RTL text mixed with LTR, we have to append it\n          //  to the DOM\n          document.body.appendChild(context.canvas);\n        }\n        context.canvas.setAttribute(\"dir\", rtl ? \"rtl\" : \"ltr\");\n        const font = context.font;\n        context.font = getFontString(element);\n        const fillStyle = context.fillStyle;\n        context.fillStyle = element.strokeColor;\n        const textAlign = context.textAlign;\n        context.textAlign = element.textAlign as CanvasTextAlign;\n\n        // Canvas does not support multiline text by default\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        for (let i = 0; i < lines.length; i++) {\n          context.fillText(\n            lines[i],\n            horizontalOffset,\n            (i + 1) * lineHeight - verticalOffset,\n          );\n        }\n        context.fillStyle = fillStyle;\n        context.font = font;\n        context.textAlign = textAlign;\n        if (shouldTemporarilyAttach) {\n          context.canvas.remove();\n        }\n      } else {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst elementWithCanvasCache = new WeakMap<\n  ExcalidrawElement,\n  ExcalidrawElementWithCanvas\n>();\n\nconst shapeCache = new WeakMap<\n  ExcalidrawElement,\n  Drawable | Drawable[] | null\n>();\n\nexport const getShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.get(element);\n\nexport const invalidateShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.delete(element);\n\nexport const generateRoughOptions = (element: ExcalidrawElement): Options => {\n  const options: Options = {\n    seed: element.seed,\n    strokeLineDash:\n      element.strokeStyle === \"dashed\"\n        ? DASHARRAY_DASHED\n        : element.strokeStyle === \"dotted\"\n        ? DASHARRAY_DOTTED\n        : undefined,\n    // for non-solid strokes, disable multiStroke because it tends to make\n    //  dashes/dots overlay each other\n    disableMultiStroke: element.strokeStyle !== \"solid\",\n    // for non-solid strokes, increase the width a bit to make it visually\n    //  similar to solid strokes, because we're also disabling multiStroke\n    strokeWidth:\n      element.strokeStyle !== \"solid\"\n        ? element.strokeWidth + 0.5\n        : element.strokeWidth,\n    // when increasing strokeWidth, we must explicitly set fillWeight and\n    //  hachureGap because if not specified, roughjs uses strokeWidth to\n    //  calculate them (and we don't want the fills to be modified)\n    fillWeight: element.strokeWidth / 2,\n    hachureGap: element.strokeWidth * 4,\n    roughness: element.roughness,\n    stroke: element.strokeColor,\n  };\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      options.fillStyle = element.fillStyle;\n      options.fill =\n        element.backgroundColor === \"transparent\"\n          ? undefined\n          : element.backgroundColor;\n      if (element.type === \"ellipse\") {\n        options.curveFitting = 1;\n      }\n      return options;\n    }\n    case \"line\":\n    case \"draw\": {\n      // If shape is a line and is a closed shape,\n      // fill the shape if a color is set.\n      if (isPathALoop(element.points)) {\n        options.fillStyle = element.fillStyle;\n        options.fill =\n          element.backgroundColor === \"transparent\"\n            ? undefined\n            : element.backgroundColor;\n      }\n      return options;\n    }\n    case \"arrow\":\n      return options;\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nconst generateElementShape = (\n  element: NonDeletedExcalidrawElement,\n  generator: RoughGenerator,\n) => {\n  let shape = shapeCache.get(element) || null;\n  if (!shape) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\":\n        shape = generator.rectangle(\n          0,\n          0,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n\n        break;\n      case \"diamond\": {\n        const [\n          topX,\n          topY,\n          rightX,\n          rightY,\n          bottomX,\n          bottomY,\n          leftX,\n          leftY,\n        ] = getDiamondPoints(element);\n        shape = generator.polygon(\n          [\n            [topX, topY],\n            [rightX, rightY],\n            [bottomX, bottomY],\n            [leftX, leftY],\n          ],\n          generateRoughOptions(element),\n        );\n        break;\n      }\n      case \"ellipse\":\n        shape = generator.ellipse(\n          element.width / 2,\n          element.height / 2,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n        break;\n      case \"line\":\n      case \"draw\":\n      case \"arrow\": {\n        const options = generateRoughOptions(element);\n\n        // points array can be empty in the beginning, so it is important to add\n        // initial position to it\n        const points = element.points.length ? element.points : [[0, 0]];\n\n        // curve is always the first element\n        // this simplifies finding the curve for an element\n        shape = [generator.curve(points as [number, number][], options)];\n\n        // add lines only in arrow\n        if (element.type === \"arrow\") {\n          const [x2, y2, x3, y3, x4, y4] = getArrowPoints(element, shape);\n          // for dotted arrows caps, reduce gap to make it more legible\n          if (element.strokeStyle === \"dotted\") {\n            options.strokeLineDash = [3, 4];\n            // for solid/dashed, keep solid arrow cap\n          } else {\n            delete options.strokeLineDash;\n          }\n          shape.push(\n            ...[\n              generator.line(x3, y3, x2, y2, options),\n              generator.line(x4, y4, x2, y2, options),\n            ],\n          );\n        }\n        break;\n      }\n      case \"text\": {\n        // just to ensure we don't regenerate element.canvas on rerenders\n        shape = [];\n        break;\n      }\n    }\n    shapeCache.set(element, shape);\n  }\n};\n\nconst generateElementWithCanvas = (\n  element: NonDeletedExcalidrawElement,\n  sceneState?: SceneState,\n) => {\n  const zoom = sceneState ? sceneState.zoom : 1;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  const shouldRegenerateBecauseZoom =\n    prevElementWithCanvas &&\n    prevElementWithCanvas.canvasZoom !== zoom &&\n    !sceneState?.shouldCacheIgnoreZoom;\n  if (!prevElementWithCanvas || shouldRegenerateBecauseZoom) {\n    const elementWithCanvas = generateElementCanvas(element, zoom);\n    elementWithCanvasCache.set(element, elementWithCanvas);\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n};\n\nconst drawElementFromCanvas = (\n  elementWithCanvas: ExcalidrawElementWithCanvas,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n) => {\n  const element = elementWithCanvas.element;\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = ((x1 + x2) / 2 + sceneState.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + sceneState.scrollY) * window.devicePixelRatio;\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.rotate(element.angle);\n  context.drawImage(\n    elementWithCanvas.canvas!,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.height / elementWithCanvas.canvasZoom,\n  );\n  context.rotate(-element.angle);\n  context.translate(-cx, -cy);\n  context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  // Clear the nested element we appended to the DOM\n};\n\nexport const renderElement = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderOptimizations: boolean,\n  sceneState: SceneState,\n) => {\n  const generator = rc.generator;\n  switch (element.type) {\n    case \"selection\": {\n      context.translate(\n        element.x + sceneState.scrollX,\n        element.y + sceneState.scrollY,\n      );\n      const fillStyle = context.fillStyle;\n      context.fillStyle = \"rgba(0, 0, 255, 0.10)\";\n      context.fillRect(0, 0, element.width, element.height);\n      context.fillStyle = fillStyle;\n      context.translate(\n        -element.x - sceneState.scrollX,\n        -element.y - sceneState.scrollY,\n      );\n      break;\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\":\n    case \"line\":\n    case \"draw\":\n    case \"arrow\":\n    case \"text\": {\n      generateElementShape(element, generator);\n      if (renderOptimizations) {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          sceneState,\n        );\n        drawElementFromCanvas(elementWithCanvas, rc, context, sceneState);\n      } else {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + sceneState.scrollX;\n        const cy = (y1 + y2) / 2 + sceneState.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context);\n        context.translate(shiftX, shiftY);\n        context.rotate(-element.angle);\n        context.translate(-cx, -cy);\n      }\n      break;\n    }\n    default: {\n      // @ts-ignore\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nexport const renderElementToSvg = (\n  element: NonDeletedExcalidrawElement,\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  offsetX?: number,\n  offsetY?: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2 - (element.x - x1);\n  const cy = (y2 - y1) / 2 - (element.y - y1);\n  const degree = (180 * element.angle) / Math.PI;\n  const generator = rsvg.generator;\n  switch (element.type) {\n    case \"selection\": {\n      // Since this is used only during editing experience, which is canvas based,\n      // this should not happen\n      throw new Error(\"Selection rendering is not supported for SVG\");\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      generateElementShape(element, generator);\n      const node = rsvg.draw(getShapeForElement(element) as Drawable);\n      const opacity = element.opacity / 100;\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      svgRoot.appendChild(node);\n      break;\n    }\n    case \"line\":\n    case \"draw\":\n    case \"arrow\": {\n      generateElementShape(element, generator);\n      const group = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      const opacity = element.opacity / 100;\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        const node = rsvg.draw(shape);\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        if (\n          (element.type === \"line\" || element.type === \"draw\") &&\n          isPathALoop(element.points) &&\n          element.backgroundColor !== \"transparent\"\n        ) {\n          node.setAttribute(\"fill-rule\", \"evenodd\");\n        }\n        group.appendChild(node);\n      });\n      svgRoot.appendChild(group);\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const opacity = element.opacity / 100;\n        const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const direction = isRTL(element.text) ? \"rtl\" : \"ltr\";\n        const textAnchor =\n          element.textAlign === \"center\"\n            ? \"middle\"\n            : element.textAlign === \"right\" || direction === \"rtl\"\n            ? \"end\"\n            : \"start\";\n        for (let i = 0; i < lines.length; i++) {\n          const text = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"text\");\n          text.textContent = lines[i];\n          text.setAttribute(\"x\", `${horizontalOffset}`);\n          text.setAttribute(\"y\", `${(i + 1) * lineHeight - verticalOffset}`);\n          text.setAttribute(\"font-family\", getFontFamilyString(element));\n          text.setAttribute(\"font-size\", `${element.fontSize}px`);\n          text.setAttribute(\"fill\", element.strokeColor);\n          text.setAttribute(\"text-anchor\", textAnchor);\n          text.setAttribute(\"style\", \"white-space: pre;\");\n          text.setAttribute(\"direction\", direction);\n          node.appendChild(text);\n        }\n        svgRoot.appendChild(node);\n      } else {\n        // @ts-ignore\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n};\n","import { Random } from \"roughjs/bin/math\";\nimport nanoid from \"nanoid\";\n\nlet random = new Random(Date.now());\nlet testIdBase = 0;\n\nexport const randomInteger = () => Math.floor(random.next() * 2 ** 31);\n\nexport const reseed = (seed: number) => {\n  random = new Random(seed);\n  testIdBase = 0;\n};\n\nexport const randomId = () =>\n  process.env.NODE_ENV === \"test\" ? `id${testIdBase++}` : nanoid();\n","import { ExcalidrawElement } from \"./types\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { globalSceneState } from \"../scene\";\nimport { getSizeFromPoints } from \"../points\";\nimport { randomInteger } from \"../random\";\nimport { Point } from \"../types\";\n\ntype ElementUpdate<TElement extends ExcalidrawElement> = Omit<\n  Partial<TElement>,\n  \"id\" | \"seed\" | \"version\" | \"versionNonce\"\n>;\n\n// This function tracks updates of text elements for the purposes for collaboration.\n// The version is used to compare updates when more than one user is working in\n// the same drawing. Note: this will trigger the component to update. Make sure you\n// are calling it either from a React event handler or within unstable_batchedUpdates().\nexport const mutateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n) => {\n  let didChange = false;\n\n  // casting to any because can't use `in` operator\n  // (see https://github.com/microsoft/TypeScript/issues/21732)\n  const { points } = updates as any;\n\n  if (typeof points !== \"undefined\") {\n    updates = { ...getSizeFromPoints(points), ...updates };\n  }\n\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      if (\n        (element as any)[key] === value &&\n        // if object, always update in case its deep prop was mutated\n        (typeof value !== \"object\" || value === null || key === \"groupIds\")\n      ) {\n        continue;\n      }\n\n      if (key === \"points\") {\n        const prevPoints = (element as any)[key];\n        const nextPoints = value;\n        if (prevPoints.length === nextPoints.length) {\n          let didChangePoints = false;\n          let i = prevPoints.length;\n          while (--i) {\n            const prevPoint: Point = prevPoints[i];\n            const nextPoint: Point = nextPoints[i];\n            if (\n              prevPoint[0] !== nextPoint[0] ||\n              prevPoint[1] !== nextPoint[1]\n            ) {\n              didChangePoints = true;\n              break;\n            }\n          }\n          if (!didChangePoints) {\n            continue;\n          }\n        }\n      }\n\n      (element as any)[key] = value;\n      didChange = true;\n    }\n  }\n\n  if (!didChange) {\n    return;\n  }\n\n  if (\n    typeof updates.height !== \"undefined\" ||\n    typeof updates.width !== \"undefined\" ||\n    typeof points !== \"undefined\"\n  ) {\n    invalidateShapeForElement(element);\n  }\n\n  element.version++;\n  element.versionNonce = randomInteger();\n\n  globalSceneState.informMutation();\n};\n\nexport const newElementWith = <TElement extends ExcalidrawElement>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n): TElement => ({\n  ...element,\n  ...updates,\n  version: element.version + 1,\n  versionNonce: randomInteger(),\n});\n","import { ExcalidrawElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { SHIFT_LOCKING_ANGLE } from \"../constants\";\n\nexport const isInvisiblySmallElement = (\n  element: ExcalidrawElement,\n): boolean => {\n  if (isLinearElement(element)) {\n    return element.points.length < 2;\n  }\n  return element.width === 0 && element.height === 0;\n};\n\n/**\n * Makes a perfect shape or diagonal/horizontal/vertical line\n */\nexport const getPerfectElementSize = (\n  elementType: string,\n  width: number,\n  height: number,\n): { width: number; height: number } => {\n  const absWidth = Math.abs(width);\n  const absHeight = Math.abs(height);\n\n  if (\n    elementType === \"line\" ||\n    elementType === \"arrow\" ||\n    elementType === \"draw\"\n  ) {\n    const lockedAngle =\n      Math.round(Math.atan(absHeight / absWidth) / SHIFT_LOCKING_ANGLE) *\n      SHIFT_LOCKING_ANGLE;\n    if (lockedAngle === 0) {\n      height = 0;\n    } else if (lockedAngle === Math.PI / 2) {\n      width = 0;\n    } else {\n      height =\n        Math.round(absWidth * Math.tan(lockedAngle)) * Math.sign(height) ||\n        height;\n    }\n  } else if (elementType !== \"selection\") {\n    height = absWidth * Math.sign(height);\n  }\n  return { width, height };\n};\n\nexport const resizePerfectLineForNWHandler = (\n  element: ExcalidrawElement,\n  x: number,\n  y: number,\n) => {\n  const anchorX = element.x + element.width;\n  const anchorY = element.y + element.height;\n  const distanceToAnchorX = x - anchorX;\n  const distanceToAnchorY = y - anchorY;\n  if (Math.abs(distanceToAnchorX) < Math.abs(distanceToAnchorY) / 2) {\n    mutateElement(element, {\n      x: anchorX,\n      width: 0,\n      y,\n      height: -distanceToAnchorY,\n    });\n  } else if (Math.abs(distanceToAnchorY) < Math.abs(element.width) / 2) {\n    mutateElement(element, {\n      y: anchorY,\n      height: 0,\n    });\n  } else {\n    const nextHeight =\n      Math.sign(distanceToAnchorY) *\n      Math.sign(distanceToAnchorX) *\n      element.width;\n    mutateElement(element, {\n      x,\n      y: anchorY - nextHeight,\n      width: -distanceToAnchorX,\n      height: nextHeight,\n    });\n  }\n};\n\nexport const getNormalizedDimensions = (\n  element: Pick<ExcalidrawElement, \"width\" | \"height\" | \"x\" | \"y\">,\n): {\n  width: ExcalidrawElement[\"width\"];\n  height: ExcalidrawElement[\"height\"];\n  x: ExcalidrawElement[\"x\"];\n  y: ExcalidrawElement[\"y\"];\n} => {\n  const ret = {\n    width: element.width,\n    height: element.height,\n    x: element.x,\n    y: element.y,\n  };\n\n  if (element.width < 0) {\n    const nextWidth = Math.abs(element.width);\n    ret.width = nextWidth;\n    ret.x = element.x - nextWidth;\n  }\n\n  if (element.height < 0) {\n    const nextHeight = Math.abs(element.height);\n    ret.height = nextHeight;\n    ret.y = element.y - nextHeight;\n  }\n\n  return ret;\n};\n","import { GroupId, ExcalidrawElement, NonDeleted } from \"./element/types\";\nimport { AppState } from \"./types\";\nimport { getSelectedElements } from \"./scene\";\n\nexport function selectGroup(\n  groupId: GroupId,\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState {\n  const elementsInGroup = elements.filter((element) =>\n    element.groupIds.includes(groupId),\n  );\n\n  if (elementsInGroup.length < 2) {\n    if (\n      appState.selectedGroupIds[groupId] ||\n      appState.editingGroupId === groupId\n    ) {\n      return {\n        ...appState,\n        selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: false },\n        editingGroupId: null,\n      };\n    }\n    return appState;\n  }\n\n  return {\n    ...appState,\n    selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: true },\n    selectedElementIds: {\n      ...appState.selectedElementIds,\n      ...Object.fromEntries(\n        elementsInGroup.map((element) => [element.id, true]),\n      ),\n    },\n  };\n}\n\n/**\n * If the element's group is selected, don't render an individual\n * selection border around it.\n */\nexport function isSelectedViaGroup(\n  appState: AppState,\n  element: ExcalidrawElement,\n) {\n  return !!element.groupIds\n    .filter((groupId) => groupId !== appState.editingGroupId)\n    .find((groupId) => appState.selectedGroupIds[groupId]);\n}\n\nexport function getSelectedGroupIds(appState: AppState): GroupId[] {\n  return Object.entries(appState.selectedGroupIds)\n    .filter(([groupId, isSelected]) => isSelected)\n    .map(([groupId, isSelected]) => groupId);\n}\n\n/**\n * When you select an element, you often want to actually select the whole group it's in, unless\n * you're currently editing that group.\n */\nexport function selectGroupsForSelectedElements(\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState {\n  let nextAppState = { ...appState };\n\n  const selectedElements = getSelectedElements(elements, appState);\n\n  for (const selectedElement of selectedElements) {\n    let groupIds = selectedElement.groupIds;\n    if (appState.editingGroupId) {\n      // handle the case where a group is nested within a group\n      const indexOfEditingGroup = groupIds.indexOf(appState.editingGroupId);\n      if (indexOfEditingGroup > -1) {\n        groupIds = groupIds.slice(0, indexOfEditingGroup);\n      }\n    }\n    if (groupIds.length > 0) {\n      const groupId = groupIds[groupIds.length - 1];\n      nextAppState = selectGroup(groupId, nextAppState, elements);\n    }\n  }\n\n  return nextAppState;\n}\n\nexport function isElementInGroup(element: ExcalidrawElement, groupId: string) {\n  return element.groupIds.includes(groupId);\n}\n\nexport function getElementsInGroup(\n  elements: readonly ExcalidrawElement[],\n  groupId: string,\n) {\n  return elements.filter((element) => isElementInGroup(element, groupId));\n}\n\nexport function getSelectedGroupIdForElement(\n  element: ExcalidrawElement,\n  selectedGroupIds: { [groupId: string]: boolean },\n) {\n  return element.groupIds.find((groupId) => selectedGroupIds[groupId]);\n}\n\nexport function getNewGroupIdsForDuplication(\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  editingGroupId: AppState[\"editingGroupId\"],\n  mapper: (groupId: GroupId) => GroupId,\n) {\n  const copy = [...groupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const endIndex =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  for (let i = 0; i < endIndex; i++) {\n    copy[i] = mapper(copy[i]);\n  }\n\n  return copy;\n}\n\nexport function addToGroup(\n  prevGroupIds: ExcalidrawElement[\"groupIds\"],\n  newGroupId: GroupId,\n  editingGroupId: AppState[\"editingGroupId\"],\n) {\n  // insert before the editingGroupId, or push to the end.\n  const groupIds = [...prevGroupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const positionToInsert =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  groupIds.splice(positionToInsert, 0, newGroupId);\n  return groupIds;\n}\n\nexport function removeFromSelectedGroups(\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  selectedGroupIds: { [groupId: string]: boolean },\n) {\n  return groupIds.filter((groupId) => !selectedGroupIds[groupId]);\n}\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawGenericElement,\n  NonDeleted,\n  TextAlign,\n  FontFamily,\n  GroupId,\n  VerticalAlign,\n} from \"../element/types\";\nimport { measureText, getFontString } from \"../utils\";\nimport { randomInteger, randomId } from \"../random\";\nimport { newElementWith } from \"./mutateElement\";\nimport { getNewGroupIdsForDuplication } from \"../groups\";\nimport { AppState } from \"../types\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { adjustXYWithRotation } from \"../math\";\nimport { getResizedElementAbsoluteCoords } from \"./bounds\";\n\ntype ElementConstructorOpts = MarkOptional<\n  Omit<ExcalidrawGenericElement, \"id\" | \"type\" | \"isDeleted\">,\n  | \"width\"\n  | \"height\"\n  | \"angle\"\n  | \"groupIds\"\n  | \"seed\"\n  | \"version\"\n  | \"versionNonce\"\n>;\n\nconst _newElementBase = <T extends ExcalidrawElement>(\n  type: T[\"type\"],\n  {\n    x,\n    y,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    width = 0,\n    height = 0,\n    angle = 0,\n    groupIds = [],\n    ...rest\n  }: ElementConstructorOpts & Omit<Partial<ExcalidrawGenericElement>, \"type\">,\n) => ({\n  id: rest.id || randomId(),\n  type,\n  x,\n  y,\n  width,\n  height,\n  angle,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth,\n  strokeStyle,\n  roughness,\n  opacity,\n  groupIds,\n  seed: rest.seed ?? randomInteger(),\n  version: rest.version || 1,\n  versionNonce: rest.versionNonce ?? 0,\n  isDeleted: false as false,\n});\n\nexport const newElement = (\n  opts: {\n    type: ExcalidrawGenericElement[\"type\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawGenericElement> =>\n  _newElementBase<ExcalidrawGenericElement>(opts.type, opts);\n\n/** computes element x/y offset based on textAlign/verticalAlign */\nfunction getTextElementPositionOffsets(\n  opts: {\n    textAlign: ExcalidrawTextElement[\"textAlign\"];\n    verticalAlign: ExcalidrawTextElement[\"verticalAlign\"];\n  },\n  metrics: {\n    width: number;\n    height: number;\n  },\n) {\n  return {\n    x:\n      opts.textAlign === \"center\"\n        ? metrics.width / 2\n        : opts.textAlign === \"right\"\n        ? metrics.width\n        : 0,\n    y: opts.verticalAlign === \"middle\" ? metrics.height / 2 : 0,\n  };\n}\n\nexport const newTextElement = (\n  opts: {\n    text: string;\n    fontSize: number;\n    fontFamily: FontFamily;\n    textAlign: TextAlign;\n    verticalAlign: VerticalAlign;\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawTextElement> => {\n  const metrics = measureText(opts.text, getFontString(opts));\n  const offsets = getTextElementPositionOffsets(opts, metrics);\n  const textElement = newElementWith(\n    {\n      ..._newElementBase<ExcalidrawTextElement>(\"text\", opts),\n      text: opts.text,\n      fontSize: opts.fontSize,\n      fontFamily: opts.fontFamily,\n      textAlign: opts.textAlign,\n      verticalAlign: opts.verticalAlign,\n      x: opts.x - offsets.x,\n      y: opts.y - offsets.y,\n      width: metrics.width,\n      height: metrics.height,\n      baseline: metrics.baseline,\n    },\n    {},\n  );\n\n  return textElement;\n};\n\nconst getAdjustedDimensions = (\n  element: ExcalidrawTextElement,\n  nextText: string,\n): {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  baseline: number;\n} => {\n  const {\n    width: nextWidth,\n    height: nextHeight,\n    baseline: nextBaseline,\n  } = measureText(nextText, getFontString(element));\n\n  const { textAlign, verticalAlign } = element;\n\n  let x, y;\n\n  if (textAlign === \"center\" && verticalAlign === \"middle\") {\n    const prevMetrics = measureText(element.text, getFontString(element));\n    const offsets = getTextElementPositionOffsets(element, {\n      width: nextWidth - prevMetrics.width,\n      height: nextHeight - prevMetrics.height,\n    });\n\n    x = element.x - offsets.x;\n    y = element.y - offsets.y;\n  } else {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      nextWidth,\n      nextHeight,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n\n    [x, y] = adjustXYWithRotation(\n      {\n        s: true,\n        e: textAlign === \"center\" || textAlign === \"left\",\n        w: textAlign === \"center\" || textAlign === \"right\",\n      },\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n    );\n  }\n\n  return {\n    width: nextWidth,\n    height: nextHeight,\n    x: Number.isFinite(x) ? x : element.x,\n    y: Number.isFinite(y) ? y : element.y,\n    baseline: nextBaseline,\n  };\n};\n\nexport const updateTextElement = (\n  element: ExcalidrawTextElement,\n  { text, isDeleted }: { text: string; isDeleted?: boolean },\n): ExcalidrawTextElement => {\n  return newElementWith(element, {\n    text,\n    isDeleted: isDeleted ?? element.isDeleted,\n    ...getAdjustedDimensions(element, text),\n  });\n};\n\nexport const newLinearElement = (\n  opts: {\n    type: ExcalidrawLinearElement[\"type\"];\n    lastCommittedPoint?: ExcalidrawLinearElement[\"lastCommittedPoint\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawLinearElement> => {\n  return {\n    ..._newElementBase<ExcalidrawLinearElement>(opts.type, opts),\n    points: [],\n    lastCommittedPoint: opts.lastCommittedPoint || null,\n  };\n};\n\n// Simplified deep clone for the purpose of cloning ExcalidrawElement only\n//  (doesn't clone Date, RegExp, Map, Set, Typed arrays etc.)\n//\n// Adapted from https://github.com/lukeed/klona\nexport const deepCopyElement = (val: any, depth: number = 0) => {\n  if (val == null || typeof val !== \"object\") {\n    return val;\n  }\n\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    const tmp =\n      typeof val.constructor === \"function\"\n        ? Object.create(Object.getPrototypeOf(val))\n        : {};\n    for (const key in val) {\n      if (val.hasOwnProperty(key)) {\n        // don't copy top-level shape property, which we want to regenerate\n        if (depth === 0 && (key === \"shape\" || key === \"canvas\")) {\n          continue;\n        }\n        tmp[key] = deepCopyElement(val[key], depth + 1);\n      }\n    }\n    return tmp;\n  }\n\n  if (Array.isArray(val)) {\n    let k = val.length;\n    const arr = new Array(k);\n    while (k--) {\n      arr[k] = deepCopyElement(val[k], depth + 1);\n    }\n    return arr;\n  }\n\n  return val;\n};\n\n/**\n * Duplicate an element, often used in the alt-drag operation.\n * Note that this method has gotten a bit complicated since the\n * introduction of gruoping/ungrouping elements.\n * @param editingGroupId The current group being edited. The new\n *                       element will inherit this group and its\n *                       parents.\n * @param groupIdMapForOperation A Map that maps old group IDs to\n *                               duplicated ones. If you are duplicating\n *                               multiple elements at once, share this map\n *                               amongst all of them\n * @param element Element to duplicate\n * @param overrides Any element properties to override\n */\nexport const duplicateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  editingGroupId: AppState[\"editingGroupId\"],\n  groupIdMapForOperation: Map<GroupId, GroupId>,\n  element: TElement,\n  overrides?: Partial<TElement>,\n): TElement => {\n  let copy: TElement = deepCopyElement(element);\n  copy.id = randomId();\n  copy.seed = randomInteger();\n  copy.groupIds = getNewGroupIdsForDuplication(\n    copy.groupIds,\n    editingGroupId,\n    (groupId) => {\n      if (!groupIdMapForOperation.has(groupId)) {\n        groupIdMapForOperation.set(groupId, randomId());\n      }\n      return groupIdMapForOperation.get(groupId)!;\n    },\n  );\n  if (overrides) {\n    copy = Object.assign(copy, overrides);\n  }\n  return copy;\n};\n","import { ExcalidrawElement, PointerType } from \"./types\";\n\nimport { getElementAbsoluteCoords } from \"./bounds\";\nimport { rotate } from \"../math\";\n\ntype Sides = \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\" | \"rotation\";\n\nconst handleSizes: { [k in PointerType]: number } = {\n  mouse: 8,\n  pen: 16,\n  touch: 28,\n};\n\nconst ROTATION_HANDLER_GAP = 16;\n\nexport const OMIT_SIDES_FOR_MULTIPLE_ELEMENTS = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  rotation: true,\n};\n\nconst OMIT_SIDES_FOR_TEXT_ELEMENT = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_SLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  nw: true,\n  se: true,\n  rotation: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_BACKSLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  ne: true,\n  sw: true,\n  rotation: true,\n};\n\nconst generateHandler = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n): [number, number, number, number] => {\n  const [xx, yy] = rotate(x + width / 2, y + height / 2, cx, cy, angle);\n  return [xx - width / 2, yy - height / 2, width, height];\n};\n\nexport const handlerRectanglesFromCoords = (\n  [x1, y1, x2, y2]: [number, number, number, number],\n  angle: number,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n  omitSides: { [T in Sides]?: boolean } = {},\n): Partial<{ [T in Sides]: [number, number, number, number] }> => {\n  const size = handleSizes[pointerType];\n  const handlerWidth = size / zoom;\n  const handlerHeight = size / zoom;\n\n  const handlerMarginX = size / zoom;\n  const handlerMarginY = size / zoom;\n\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n\n  const dashedLineMargin = 4 / zoom;\n\n  const centeringOffset = (size - 8) / (2 * zoom);\n\n  const handlers: Partial<\n    { [T in Sides]: [number, number, number, number] }\n  > = {\n    nw: omitSides[\"nw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    ne: omitSides[\"ne\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    sw: omitSides[\"sw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    se: omitSides[\"se\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    rotation: omitSides[\"rotation\"]\n      ? undefined\n      : generateHandler(\n          x1 + width / 2 - handlerWidth / 2,\n          y1 -\n            dashedLineMargin -\n            handlerMarginY +\n            centeringOffset -\n            ROTATION_HANDLER_GAP / zoom,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n  };\n\n  // We only want to show height handlers (all cardinal directions)  above a certain size\n  const minimumSizeForEightHandlers = (5 * size) / zoom;\n  if (Math.abs(width) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"n\"]) {\n      handlers[\"n\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"s\"]) {\n      handlers[\"s\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y2 + dashedLineMargin - centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n  if (Math.abs(height) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"w\"]) {\n      handlers[\"w\"] = generateHandler(\n        x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"e\"]) {\n      handlers[\"e\"] = generateHandler(\n        x2 + dashedLineMargin - centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n\n  return handlers;\n};\n\nexport const handlerRectangles = (\n  element: ExcalidrawElement,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n) => {\n  let omitSides: { [T in Sides]?: boolean } = {};\n  if (\n    element.type === \"arrow\" ||\n    element.type === \"line\" ||\n    element.type === \"draw\"\n  ) {\n    if (element.points.length === 2) {\n      // only check the last point because starting point is always (0,0)\n      const [, p1] = element.points;\n      if (p1[0] === 0 || p1[1] === 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] > 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] > 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] < 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] < 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      }\n    }\n  } else if (element.type === \"text\") {\n    omitSides = OMIT_SIDES_FOR_TEXT_ELEMENT;\n  }\n\n  return handlerRectanglesFromCoords(\n    getElementAbsoluteCoords(element),\n    element.angle,\n    zoom,\n    pointerType,\n    omitSides,\n  );\n};\n","import {\n  distanceBetweenPointAndSegment,\n  isPathALoop,\n  rotate,\n  isPointInPolygon,\n} from \"../math\";\nimport { pointsOnBezierCurves } from \"points-on-curve\";\n\nimport { NonDeletedExcalidrawElement } from \"./types\";\n\nimport {\n  getDiamondPoints,\n  getElementAbsoluteCoords,\n  getCurvePathOps,\n} from \"./bounds\";\nimport { Point } from \"../types\";\nimport { Drawable } from \"roughjs/bin/core\";\nimport { AppState } from \"../types\";\nimport { getShapeForElement } from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\n\nconst isElementDraggableFromInside = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n): boolean => {\n  if (element.type === \"arrow\") {\n    return false;\n  }\n  const dragFromInside =\n    element.backgroundColor !== \"transparent\" ||\n    appState.selectedElementIds[element.id];\n  if (element.type === \"line\" || element.type === \"draw\") {\n    return dragFromInside && isPathALoop(element.points);\n  }\n  return dragFromInside;\n};\n\nexport const hitTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n): boolean => {\n  // For shapes that are composed of lines, we only enable point-selection when the distance\n  // of the click is less than x pixels of any of the lines that the shape is composed of\n  const lineThreshold = 10 / zoom;\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // reverse rotate the pointer\n  [x, y] = rotate(x, y, cx, cy, -element.angle);\n\n  if (element.type === \"ellipse\") {\n    // https://stackoverflow.com/a/46007540/232122\n    const px = Math.abs(x - element.x - element.width / 2);\n    const py = Math.abs(y - element.y - element.height / 2);\n\n    let tx = 0.707;\n    let ty = 0.707;\n\n    const a = Math.abs(element.width) / 2;\n    const b = Math.abs(element.height) / 2;\n\n    [0, 1, 2, 3].forEach((x) => {\n      const xx = a * tx;\n      const yy = b * ty;\n\n      const ex = ((a * a - b * b) * tx ** 3) / a;\n      const ey = ((b * b - a * a) * ty ** 3) / b;\n\n      const rx = xx - ex;\n      const ry = yy - ey;\n\n      const qx = px - ex;\n      const qy = py - ey;\n\n      const r = Math.hypot(ry, rx);\n      const q = Math.hypot(qy, qx);\n\n      tx = Math.min(1, Math.max(0, ((qx * r) / q + ex) / a));\n      ty = Math.min(1, Math.max(0, ((qy * r) / q + ey) / b));\n      const t = Math.hypot(ty, tx);\n      tx /= t;\n      ty /= t;\n    });\n\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        a * tx - (px - lineThreshold) >= 0 && b * ty - (py - lineThreshold) >= 0\n      );\n    }\n    return Math.hypot(a * tx - px, b * ty - py) < lineThreshold;\n  } else if (element.type === \"rectangle\") {\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        x > x1 - lineThreshold &&\n        x < x2 + lineThreshold &&\n        y > y1 - lineThreshold &&\n        y < y2 + lineThreshold\n      );\n    }\n\n    // (x1, y1) --A-- (x2, y1)\n    //    |D             |B\n    // (x1, y2) --C-- (x2, y2)\n    return (\n      distanceBetweenPointAndSegment(x, y, x1, y1, x2, y1) < lineThreshold || // A\n      distanceBetweenPointAndSegment(x, y, x2, y1, x2, y2) < lineThreshold || // B\n      distanceBetweenPointAndSegment(x, y, x2, y2, x1, y2) < lineThreshold || // C\n      distanceBetweenPointAndSegment(x, y, x1, y2, x1, y1) < lineThreshold // D\n    );\n  } else if (element.type === \"diamond\") {\n    x -= element.x;\n    y -= element.y;\n    let [\n      topX,\n      topY,\n      rightX,\n      rightY,\n      bottomX,\n      bottomY,\n      leftX,\n      leftY,\n    ] = getDiamondPoints(element);\n\n    if (isElementDraggableFromInside(element, appState)) {\n      // TODO: remove this when we normalize coordinates globally\n      if (topY > bottomY) {\n        [bottomY, topY] = [topY, bottomY];\n      }\n      if (rightX < leftX) {\n        [leftX, rightX] = [rightX, leftX];\n      }\n\n      topY -= lineThreshold;\n      bottomY += lineThreshold;\n      leftX -= lineThreshold;\n      rightX += lineThreshold;\n\n      // all deltas should be < 0. Delta > 0 indicates it's on the outside side\n      //  of the line.\n      //\n      //          (topX, topY)\n      //     D  /             \\ A\n      //      /               \\\n      //  (leftX, leftY)  (rightX, rightY)\n      //    C \\               / B\n      //      \\              /\n      //      (bottomX, bottomY)\n      //\n      // https://stackoverflow.com/a/2752753/927631\n      return (\n        // delta from line D\n        (leftX - topX) * (y - leftY) - (leftX - x) * (topY - leftY) <= 0 &&\n        // delta from line A\n        (topX - rightX) * (y - rightY) - (x - rightX) * (topY - rightY) <= 0 &&\n        // delta from line B\n        (rightX - bottomX) * (y - bottomY) -\n          (x - bottomX) * (rightY - bottomY) <=\n          0 &&\n        // delta from line C\n        (bottomX - leftX) * (y - leftY) - (x - leftX) * (bottomY - leftY) <= 0\n      );\n    }\n\n    return (\n      distanceBetweenPointAndSegment(x, y, topX, topY, rightX, rightY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, rightX, rightY, bottomX, bottomY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, bottomX, bottomY, leftX, leftY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, leftX, leftY, topX, topY) <\n        lineThreshold\n    );\n  } else if (isLinearElement(element)) {\n    if (!getShapeForElement(element)) {\n      return false;\n    }\n    const shape = getShapeForElement(element) as Drawable[];\n\n    if (\n      x < x1 - lineThreshold ||\n      y < y1 - lineThreshold ||\n      x > x2 + lineThreshold ||\n      y > y2 + lineThreshold\n    ) {\n      return false;\n    }\n\n    const relX = x - element.x;\n    const relY = y - element.y;\n\n    if (isElementDraggableFromInside(element, appState)) {\n      const hit = shape.some((subshape) =>\n        hitTestCurveInside(subshape, relX, relY, lineThreshold),\n      );\n      if (hit) {\n        return true;\n      }\n    }\n\n    // hit thest all \"subshapes\" of the linear element\n    return shape.some((subshape) =>\n      hitTestRoughShape(subshape, relX, relY, lineThreshold),\n    );\n  } else if (element.type === \"text\") {\n    return x >= x1 && x <= x2 && y >= y1 && y <= y2;\n  } else if (element.type === \"selection\") {\n    console.warn(\"This should not happen, we need to investigate why it does.\");\n    return false;\n  }\n  throw new Error(`Unimplemented type ${element.type}`);\n};\n\nconst pointInBezierEquation = (\n  p0: Point,\n  p1: Point,\n  p2: Point,\n  p3: Point,\n  [mx, my]: Point,\n  lineThreshold: number,\n) => {\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // go through t in increments of 0.01\n  let t = 0;\n  while (t <= 1.0) {\n    const tx = equation(t, 0);\n    const ty = equation(t, 1);\n\n    const diff = Math.sqrt(Math.pow(tx - mx, 2) + Math.pow(ty - my, 2));\n\n    if (diff < lineThreshold) {\n      return true;\n    }\n\n    t += 0.01;\n  }\n\n  return false;\n};\n\nconst hitTestCurveInside = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  const ops = getCurvePathOps(drawable);\n  const points: Point[] = [];\n  for (const operation of ops) {\n    if (operation.op === \"move\") {\n      if (points.length) {\n        break;\n      }\n      points.push([operation.data[0], operation.data[1]]);\n    } else if (operation.op === \"bcurveTo\") {\n      points.push([operation.data[0], operation.data[1]]);\n      points.push([operation.data[2], operation.data[3]]);\n      points.push([operation.data[4], operation.data[5]]);\n    }\n  }\n  if (points.length >= 4) {\n    const polygonPoints = pointsOnBezierCurves(points as any, 10, 5);\n    return isPointInPolygon(polygonPoints, x, y);\n  }\n  return false;\n};\n\nconst hitTestRoughShape = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  // read operations from first opSet\n  const ops = getCurvePathOps(drawable);\n\n  // set start position as (0,0) just in case\n  // move operation does not exist (unlikely but it is worth safekeeping it)\n  let currentP: Point = [0, 0];\n\n  return ops.some(({ op, data }, idx) => {\n    // There are only four operation types:\n    // move, bcurveTo, lineTo, and curveTo\n    if (op === \"move\") {\n      // change starting point\n      currentP = (data as unknown) as Point;\n      // move operation does not draw anything; so, it always\n      // returns false\n    } else if (op === \"bcurveTo\") {\n      // create points from bezier curve\n      // bezier curve stores data as a flattened array of three positions\n      // [x1, y1, x2, y2, x3, y3]\n      const p1 = [data[0], data[1]] as Point;\n      const p2 = [data[2], data[3]] as Point;\n      const p3 = [data[4], data[5]] as Point;\n\n      const p0 = currentP;\n      currentP = p3;\n\n      // check if points are on the curve\n      // cubic bezier curves require four parameters\n      // the first parameter is the last stored position (p0)\n      const retVal = pointInBezierEquation(\n        p0,\n        p1,\n        p2,\n        p3,\n        [x, y],\n        lineThreshold,\n      );\n\n      // set end point of bezier curve as the new starting point for\n      // upcoming operations as each operation is based on the last drawn\n      // position of the previous operation\n      return retVal;\n    } else if (op === \"lineTo\") {\n      // TODO: Implement this\n    } else if (op === \"qcurveTo\") {\n      // TODO: Implement this\n    }\n\n    return false;\n  });\n};\n","import {\n  ExcalidrawElement,\n  PointerType,\n  NonDeletedExcalidrawElement,\n} from \"./types\";\n\nimport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nimport { AppState } from \"../types\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nconst isInHandlerRect = (\n  handler: [number, number, number, number],\n  x: number,\n  y: number,\n) =>\n  x >= handler[0] &&\n  x <= handler[0] + handler[2] &&\n  y >= handler[1] &&\n  y <= handler[1] + handler[3];\n\nexport const resizeTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n  pointerType: PointerType,\n): HandlerRectanglesRet | false => {\n  if (!appState.selectedElementIds[element.id]) {\n    return false;\n  }\n\n  const { rotation: rotationHandler, ...handlers } = handlerRectangles(\n    element,\n    zoom,\n    pointerType,\n  );\n\n  if (rotationHandler && isInHandlerRect(rotationHandler, x, y)) {\n    return \"rotation\" as HandlerRectanglesRet;\n  }\n\n  const filter = Object.keys(handlers).filter((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    if (!handler) {\n      return false;\n    }\n    return isInHandlerRect(handler, x, y);\n  });\n\n  if (filter.length > 0) {\n    return filter[0] as HandlerRectanglesRet;\n  }\n\n  return false;\n};\n\nexport const getElementWithResizeHandler = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: number,\n  pointerType: PointerType,\n) => {\n  return elements.reduce((result, element) => {\n    if (result) {\n      return result;\n    }\n    const resizeHandle = resizeTest(\n      element,\n      appState,\n      scenePointerX,\n      scenePointerY,\n      zoom,\n      pointerType,\n    );\n    return resizeHandle ? { element, resizeHandle } : null;\n  }, null as { element: NonDeletedExcalidrawElement; resizeHandle: ReturnType<typeof resizeTest> } | null);\n};\n\nexport const getResizeHandlerFromCoords = (\n  [x1, y1, x2, y2]: readonly [number, number, number, number],\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: number,\n  pointerType: PointerType,\n) => {\n  const handlers = handlerRectanglesFromCoords(\n    [x1, y1, x2, y2],\n    0,\n    zoom,\n    pointerType,\n    OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  );\n\n  const found = Object.keys(handlers).find((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    return handler && isInHandlerRect(handler, scenePointerX, scenePointerY);\n  });\n  return (found || false) as HandlerRectanglesRet;\n};\n\nconst RESIZE_CURSORS = [\"ns\", \"nesw\", \"ew\", \"nwse\"];\nconst rotateResizeCursor = (cursor: string, angle: number) => {\n  const index = RESIZE_CURSORS.indexOf(cursor);\n  if (index >= 0) {\n    const a = Math.round(angle / (Math.PI / 4));\n    cursor = RESIZE_CURSORS[(index + a) % RESIZE_CURSORS.length];\n  }\n  return cursor;\n};\n\n/*\n * Returns bi-directional cursor for the element being resized\n */\nexport const getCursorForResizingElement = (resizingElement: {\n  element?: ExcalidrawElement;\n  resizeHandle: ReturnType<typeof resizeTest>;\n}): string => {\n  const { element, resizeHandle } = resizingElement;\n  const shouldSwapCursors =\n    element && Math.sign(element.height) * Math.sign(element.width) === -1;\n  let cursor = null;\n\n  switch (resizeHandle) {\n    case \"n\":\n    case \"s\":\n      cursor = \"ns\";\n      break;\n    case \"w\":\n    case \"e\":\n      cursor = \"ew\";\n      break;\n    case \"nw\":\n    case \"se\":\n      if (shouldSwapCursors) {\n        cursor = \"nesw\";\n      } else {\n        cursor = \"nwse\";\n      }\n      break;\n    case \"ne\":\n    case \"sw\":\n      if (shouldSwapCursors) {\n        cursor = \"nwse\";\n      } else {\n        cursor = \"nesw\";\n      }\n      break;\n    case \"rotation\":\n      return \"grab\";\n  }\n\n  if (cursor && element) {\n    cursor = rotateResizeCursor(cursor, element.angle);\n  }\n\n  return cursor ? `${cursor}-resize` : \"\";\n};\n\nexport const normalizeResizeHandle = (\n  element: ExcalidrawElement,\n  resizeHandle: HandlerRectanglesRet,\n): HandlerRectanglesRet => {\n  if (element.width >= 0 && element.height >= 0) {\n    return resizeHandle;\n  }\n\n  if (element.width < 0 && element.height < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"se\";\n      case \"ne\":\n        return \"sw\";\n      case \"se\":\n        return \"nw\";\n      case \"sw\":\n        return \"ne\";\n    }\n  } else if (element.width < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"ne\";\n      case \"ne\":\n        return \"nw\";\n      case \"se\":\n        return \"sw\";\n      case \"sw\":\n        return \"se\";\n      case \"e\":\n        return \"w\";\n      case \"w\":\n        return \"e\";\n    }\n  } else {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"sw\";\n      case \"ne\":\n        return \"se\";\n      case \"se\":\n        return \"ne\";\n      case \"sw\":\n        return \"nw\";\n      case \"n\":\n        return \"s\";\n      case \"s\":\n        return \"n\";\n    }\n  }\n\n  return resizeHandle;\n};\n","import { SHIFT_LOCKING_ANGLE } from \"../constants\";\nimport { rescalePoints } from \"../points\";\n\nimport { rotate, adjustXYWithRotation, getFlipAdjustment } from \"../math\";\nimport {\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport {\n  getElementAbsoluteCoords,\n  getCommonBounds,\n  getResizedElementAbsoluteCoords,\n} from \"./bounds\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { mutateElement } from \"./mutateElement\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\nimport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n} from \"./resizeTest\";\nimport { measureText, getFontString } from \"../utils\";\n\ntype ResizeTestType = ReturnType<typeof resizeTest>;\n\nexport const resizeElements = (\n  resizeHandle: ResizeTestType,\n  setResizeHandle: (nextResizeHandle: ResizeTestType) => void,\n  selectedElements: NonDeletedExcalidrawElement[],\n  resizeArrowDirection: \"origin\" | \"end\",\n  isRotateWithDiscreteAngle: boolean,\n  isResizeWithSidesSameLength: boolean,\n  isResizeCenterPoint: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  if (selectedElements.length === 1) {\n    const [element] = selectedElements;\n    if (resizeHandle === \"rotation\") {\n      rotateSingleElement(\n        element,\n        pointerX,\n        pointerY,\n        isRotateWithDiscreteAngle,\n      );\n    } else if (\n      isLinearElement(element) &&\n      element.points.length === 2 &&\n      (resizeHandle === \"nw\" ||\n        resizeHandle === \"ne\" ||\n        resizeHandle === \"sw\" ||\n        resizeHandle === \"se\")\n    ) {\n      resizeSingleTwoPointElement(\n        element,\n        resizeArrowDirection,\n        isRotateWithDiscreteAngle,\n        pointerX,\n        pointerY,\n      );\n    } else if (\n      element.type === \"text\" &&\n      (resizeHandle === \"nw\" ||\n        resizeHandle === \"ne\" ||\n        resizeHandle === \"sw\" ||\n        resizeHandle === \"se\")\n    ) {\n      resizeSingleTextElement(\n        element,\n        resizeHandle,\n        isResizeCenterPoint,\n        pointerX,\n        pointerY,\n      );\n    } else if (resizeHandle) {\n      resizeSingleElement(\n        element,\n        resizeHandle,\n        isResizeWithSidesSameLength,\n        isResizeCenterPoint,\n        pointerX,\n        pointerY,\n      );\n      setResizeHandle(normalizeResizeHandle(element, resizeHandle));\n      if (element.width < 0) {\n        mutateElement(element, { width: -element.width });\n      }\n      if (element.height < 0) {\n        mutateElement(element, { height: -element.height });\n      }\n    }\n\n    // update cursor\n    // FIXME it is not very nice to have this here\n    document.documentElement.style.cursor = getCursorForResizingElement({\n      element,\n      resizeHandle,\n    });\n\n    return true;\n  } else if (\n    selectedElements.length > 1 &&\n    (resizeHandle === \"nw\" ||\n      resizeHandle === \"ne\" ||\n      resizeHandle === \"sw\" ||\n      resizeHandle === \"se\")\n  ) {\n    resizeMultipleElements(selectedElements, resizeHandle, pointerX, pointerY);\n    return true;\n  }\n  return false;\n};\n\nconst rotateSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  pointerX: number,\n  pointerY: number,\n  isRotateWithDiscreteAngle: boolean,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  let angle = (5 * Math.PI) / 2 + Math.atan2(pointerY - cy, pointerX - cx);\n  if (isRotateWithDiscreteAngle) {\n    angle += SHIFT_LOCKING_ANGLE / 2;\n    angle -= angle % SHIFT_LOCKING_ANGLE;\n  }\n  if (angle >= 2 * Math.PI) {\n    angle -= 2 * Math.PI;\n  }\n  mutateElement(element, { angle });\n};\n\nconst resizeSingleTwoPointElement = (\n  element: NonDeleted<ExcalidrawLinearElement>,\n  resizeArrowDirection: \"origin\" | \"end\",\n  isRotateWithDiscreteAngle: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const pointOrigin = element.points[0]; // can assume always [0, 0]?\n  const pointEnd = element.points[1];\n  if (resizeArrowDirection === \"end\") {\n    if (isRotateWithDiscreteAngle) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        pointerX - element.x,\n        pointerY - element.y,\n      );\n      mutateElement(element, {\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        points: [\n          pointOrigin,\n          [\n            pointerX - pointOrigin[0] - element.x,\n            pointerY - pointOrigin[1] - element.y,\n          ],\n        ],\n      });\n    }\n  } else {\n    // resizeArrowDirection === \"origin\"\n    if (isRotateWithDiscreteAngle) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        element.x + pointEnd[0] - pointOrigin[0] - pointerX,\n        element.y + pointEnd[1] - pointOrigin[1] - pointerY,\n      );\n      mutateElement(element, {\n        x: element.x + pointEnd[0] - pointOrigin[0] - width,\n        y: element.y + pointEnd[1] - pointOrigin[1] - height,\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        x: pointerX,\n        y: pointerY,\n        points: [\n          pointOrigin,\n          [\n            pointEnd[0] - (pointerX - pointOrigin[0] - element.x),\n            pointEnd[1] - (pointerY - pointOrigin[1] - element.y),\n          ],\n        ],\n      });\n    }\n  }\n};\n\nconst rescalePointsInElement = (\n  element: NonDeletedExcalidrawElement,\n  width: number,\n  height: number,\n) =>\n  isLinearElement(element)\n    ? {\n        points: rescalePoints(\n          0,\n          width,\n          rescalePoints(1, height, element.points),\n        ),\n      }\n    : {};\n\n// This is not computationally ideal, but can't be helped.\nconst measureFontSizeFromWH = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  nextWidth: number,\n  nextHeight: number,\n): { size: number; baseline: number } | null => {\n  let scale = Math.min(nextWidth / element.width, nextHeight / element.height);\n  let nextFontSize = element.fontSize * scale;\n  let metrics = measureText(\n    element.text,\n    getFontString({ fontSize: nextFontSize, fontFamily: element.fontFamily }),\n  );\n  if (metrics.width - nextWidth < 1 && metrics.height - nextHeight < 1) {\n    return { size: nextFontSize, baseline: metrics.baseline };\n  }\n  // second measurement\n  scale = Math.min(\n    Math.min(nextWidth, metrics.width) / element.width,\n    Math.min(nextHeight, metrics.height) / element.height,\n  );\n  nextFontSize = element.fontSize * scale;\n  metrics = measureText(\n    element.text,\n    getFontString({ fontSize: nextFontSize, fontFamily: element.fontFamily }),\n  );\n  if (metrics.width - nextWidth < 1 && metrics.height - nextHeight < 1) {\n    return { size: nextFontSize, baseline: metrics.baseline };\n  }\n  // third measurement\n  scale *= 0.99; // just heuristics\n  nextFontSize = element.fontSize * scale;\n  metrics = measureText(\n    element.text,\n    getFontString({ fontSize: nextFontSize, fontFamily: element.fontFamily }),\n  );\n  if (metrics.width - nextWidth < 1 && metrics.height - nextHeight < 1) {\n    return { size: nextFontSize, baseline: metrics.baseline };\n  }\n  return null;\n};\n\nconst getSidesForResizeHandle = (\n  resizeHandle: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  isResizeFromCenter: boolean,\n) => {\n  return {\n    n:\n      /^(n|ne|nw)$/.test(resizeHandle) ||\n      (isResizeFromCenter && /^(s|se|sw)$/.test(resizeHandle)),\n    s:\n      /^(s|se|sw)$/.test(resizeHandle) ||\n      (isResizeFromCenter && /^(n|ne|nw)$/.test(resizeHandle)),\n    w:\n      /^(w|nw|sw)$/.test(resizeHandle) ||\n      (isResizeFromCenter && /^(e|ne|se)$/.test(resizeHandle)),\n    e:\n      /^(e|ne|se)$/.test(resizeHandle) ||\n      (isResizeFromCenter && /^(w|nw|sw)$/.test(resizeHandle)),\n  };\n};\n\nconst resizeSingleTextElement = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  resizeHandle: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scale;\n  switch (resizeHandle) {\n    case \"se\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n  }\n  if (scale > 0) {\n    const nextWidth = element.width * scale;\n    const nextHeight = element.height * scale;\n    const nextFont = measureFontSizeFromWH(element, nextWidth, nextHeight);\n    if (nextFont === null) {\n      return;\n    }\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      nextWidth,\n      nextHeight,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n    const [nextElementX, nextElementY] = adjustXYWithRotation(\n      getSidesForResizeHandle(resizeHandle, isResizeFromCenter),\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n    );\n    mutateElement(element, {\n      fontSize: nextFont.size,\n      width: nextWidth,\n      height: nextHeight,\n      baseline: nextFont.baseline,\n      x: nextElementX,\n      y: nextElementY,\n    });\n  }\n};\n\nconst resizeSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  resizeHandle: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  sidesWithSameLength: boolean,\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scaleX = 1;\n  let scaleY = 1;\n  if (resizeHandle === \"e\" || resizeHandle === \"ne\" || resizeHandle === \"se\") {\n    scaleX = (rotatedX - x1) / (x2 - x1);\n  }\n  if (resizeHandle === \"s\" || resizeHandle === \"sw\" || resizeHandle === \"se\") {\n    scaleY = (rotatedY - y1) / (y2 - y1);\n  }\n  if (resizeHandle === \"w\" || resizeHandle === \"nw\" || resizeHandle === \"sw\") {\n    scaleX = (x2 - rotatedX) / (x2 - x1);\n  }\n  if (resizeHandle === \"n\" || resizeHandle === \"nw\" || resizeHandle === \"ne\") {\n    scaleY = (y2 - rotatedY) / (y2 - y1);\n  }\n  let nextWidth = element.width * scaleX;\n  let nextHeight = element.height * scaleY;\n  if (sidesWithSameLength) {\n    nextWidth = nextHeight = Math.max(nextWidth, nextHeight);\n  }\n  const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n    element,\n    nextWidth,\n    nextHeight,\n  );\n  const deltaX1 = (x1 - nextX1) / 2;\n  const deltaY1 = (y1 - nextY1) / 2;\n  const deltaX2 = (x2 - nextX2) / 2;\n  const deltaY2 = (y2 - nextY2) / 2;\n  const rescaledPoints = rescalePointsInElement(element, nextWidth, nextHeight);\n  const [finalX1, finalY1, finalX2, finalY2] = getResizedElementAbsoluteCoords(\n    {\n      ...element,\n      ...rescaledPoints,\n    },\n    Math.abs(nextWidth),\n    Math.abs(nextHeight),\n  );\n  const [flipDiffX, flipDiffY] = getFlipAdjustment(\n    resizeHandle,\n    nextWidth,\n    nextHeight,\n    nextX1,\n    nextY1,\n    nextX2,\n    nextY2,\n    finalX1,\n    finalY1,\n    finalX2,\n    finalY2,\n    isLinearElement(element),\n    element.angle,\n  );\n  const [nextElementX, nextElementY] = adjustXYWithRotation(\n    getSidesForResizeHandle(resizeHandle, isResizeFromCenter),\n    element.x - flipDiffX,\n    element.y - flipDiffY,\n    element.angle,\n    deltaX1,\n    deltaY1,\n    deltaX2,\n    deltaY2,\n  );\n  if (\n    nextWidth !== 0 &&\n    nextHeight !== 0 &&\n    Number.isFinite(nextElementX) &&\n    Number.isFinite(nextElementY)\n  ) {\n    mutateElement(element, {\n      width: nextWidth,\n      height: nextHeight,\n      x: nextElementX,\n      y: nextElementY,\n      ...rescaledPoints,\n    });\n  }\n};\n\nconst resizeMultipleElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  resizeHandle: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n  let scale: number;\n  let getNextXY: (\n    element: NonDeletedExcalidrawElement,\n    origCoords: readonly [number, number, number, number],\n    finalCoords: readonly [number, number, number, number],\n  ) => { x: number; y: number };\n  switch (resizeHandle) {\n    case \"se\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, origY1], [finalX1, finalY1]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [, , origX2, origY2], [, , finalX2, finalY2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, , , origY2], [finalX1, , , finalY2]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [, origY1, origX2], [, finalY1, finalX2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n  }\n  if (scale > 0) {\n    const updates = elements.reduce(\n      (prev, element) => {\n        if (!prev) {\n          return prev;\n        }\n        const width = element.width * scale;\n        const height = element.height * scale;\n        let font: { fontSize?: number; baseline?: number } = {};\n        if (element.type === \"text\") {\n          const nextFont = measureFontSizeFromWH(element, width, height);\n          if (nextFont === null) {\n            return null;\n          }\n          font = { fontSize: nextFont.size, baseline: nextFont.baseline };\n        }\n        const origCoords = getElementAbsoluteCoords(element);\n        const rescaledPoints = rescalePointsInElement(element, width, height);\n        const finalCoords = getResizedElementAbsoluteCoords(\n          {\n            ...element,\n            ...rescaledPoints,\n          },\n          width,\n          height,\n        );\n        const { x, y } = getNextXY(element, origCoords, finalCoords);\n        return [...prev, { width, height, x, y, ...rescaledPoints, ...font }];\n      },\n      [] as\n        | {\n            width: number;\n            height: number;\n            x: number;\n            y: number;\n            points?: (readonly [number, number])[];\n            fontSize?: number;\n            baseline?: number;\n          }[]\n        | null,\n    );\n    if (updates) {\n      elements.forEach((element, index) => {\n        mutateElement(element, updates[index]);\n      });\n    }\n  }\n};\n\nexport const getResizeOffsetXY = (\n  resizeHandle: ResizeTestType,\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1, x2, y2] =\n    selectedElements.length === 1\n      ? getElementAbsoluteCoords(selectedElements[0])\n      : getCommonBounds(selectedElements);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  const angle = selectedElements.length === 1 ? selectedElements[0].angle : 0;\n  [x, y] = rotate(x, y, cx, cy, -angle);\n  switch (resizeHandle) {\n    case \"n\":\n      return rotate(x - (x1 + x2) / 2, y - y1, 0, 0, angle);\n    case \"s\":\n      return rotate(x - (x1 + x2) / 2, y - y2, 0, 0, angle);\n    case \"w\":\n      return rotate(x - x1, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"e\":\n      return rotate(x - x2, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"nw\":\n      return rotate(x - x1, y - y1, 0, 0, angle);\n    case \"ne\":\n      return rotate(x - x2, y - y1, 0, 0, angle);\n    case \"sw\":\n      return rotate(x - x1, y - y2, 0, 0, angle);\n    case \"se\":\n      return rotate(x - x2, y - y2, 0, 0, angle);\n    default:\n      return [0, 0];\n  }\n};\n\nexport const getResizeArrowDirection = (\n  resizeHandle: ResizeTestType,\n  element: NonDeleted<ExcalidrawLinearElement>,\n): \"origin\" | \"end\" => {\n  const [, [px, py]] = element.points;\n  const isResizeEnd =\n    (resizeHandle === \"nw\" && (px < 0 || py < 0)) ||\n    (resizeHandle === \"ne\" && px >= 0) ||\n    (resizeHandle === \"sw\" && px <= 0) ||\n    (resizeHandle === \"se\" && (px > 0 || py > 0));\n  return isResizeEnd ? \"end\" : \"origin\";\n};\n","import { NonDeletedExcalidrawElement } from \"./types\";\nimport { getCommonBounds } from \"./bounds\";\nimport { mutateElement } from \"./mutateElement\";\nimport { SHAPES } from \"../shapes\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\n\nexport const dragSelectedElements = (\n  selectedElements: NonDeletedExcalidrawElement[],\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  selectedElements.forEach((element) => {\n    mutateElement(element, {\n      x: pointerX + element.x - x1,\n      y: pointerY + element.y - y1,\n    });\n  });\n};\n\nexport const getDragOffsetXY = (\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  return [x - x1, y - y1];\n};\n\nexport const dragNewElement = (\n  draggingElement: NonDeletedExcalidrawElement,\n  elementType: typeof SHAPES[number][\"value\"],\n  originX: number,\n  originY: number,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  isResizeWithSidesSameLength: boolean,\n  isResizeCenterPoint: boolean,\n) => {\n  if (isResizeWithSidesSameLength) {\n    ({ width, height } = getPerfectElementSize(\n      elementType,\n      width,\n      y < originY ? -height : height,\n    ));\n\n    if (height < 0) {\n      height = -height;\n    }\n  }\n\n  let newX = x < originX ? originX - width : originX;\n  let newY = y < originY ? originY - height : originY;\n\n  if (isResizeCenterPoint) {\n    width += width;\n    height += height;\n    newX = originX - width / 2;\n    newY = originY - height / 2;\n  }\n\n  if (width !== 0 && height !== 0) {\n    mutateElement(draggingElement, {\n      x: newX,\n      y: newY,\n      width: width,\n      height: height,\n    });\n  }\n};\n","export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nexport const KEYS = {\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  DELETE: \"Delete\",\n  BACKSPACE: \"Backspace\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  TAB: \"Tab\",\n  SPACE: \" \",\n  QUESTION_MARK: \"?\",\n  F_KEY_CODE: 70,\n  ALT_KEY_CODE: 18,\n  Z_KEY_CODE: 90,\n  GRID_KEY_CODE: 222,\n  G_KEY_CODE: 71,\n} as const;\n\nexport type Key = keyof typeof KEYS;\n\nexport const isArrowKey = (keyCode: string) =>\n  keyCode === KEYS.ARROW_LEFT ||\n  keyCode === KEYS.ARROW_RIGHT ||\n  keyCode === KEYS.ARROW_DOWN ||\n  keyCode === KEYS.ARROW_UP;\n\nexport const getResizeCenterPointKey = (event: MouseEvent | KeyboardEvent) =>\n  event.altKey || event.which === KEYS.ALT_KEY_CODE;\n\nexport const getResizeWithSidesSameLengthKey = (event: MouseEvent) =>\n  event.shiftKey;\n\nexport const getRotateWithDiscreteAngleKey = (event: MouseEvent) =>\n  event.shiftKey;\n","import { KEYS } from \"../keys\";\nimport { isWritableElement, getFontString } from \"../utils\";\nimport { globalSceneState } from \"../scene\";\nimport { isTextElement } from \"./typeChecks\";\nimport { CLASSES } from \"../constants\";\nimport { ExcalidrawElement } from \"./types\";\n\nconst normalizeText = (text: string) => {\n  return (\n    text\n      // replace tabs with spaces so they render and measure correctly\n      .replace(/\\t/g, \"        \")\n      // normalize newlines\n      .replace(/\\r?\\n|\\r/g, \"\\n\")\n  );\n};\n\nconst getTransform = (\n  width: number,\n  height: number,\n  angle: number,\n  zoom: number,\n) => {\n  const degree = (180 * angle) / Math.PI;\n  return `translate(${(width * (zoom - 1)) / 2}px, ${\n    (height * (zoom - 1)) / 2\n  }px) scale(${zoom}) rotate(${degree}deg)`;\n};\n\nexport const textWysiwyg = ({\n  id,\n  zoom,\n  onChange,\n  onSubmit,\n  onCancel,\n  getViewportCoords,\n}: {\n  id: ExcalidrawElement[\"id\"];\n  zoom: number;\n  onChange?: (text: string) => void;\n  onSubmit: (text: string) => void;\n  onCancel: () => void;\n  getViewportCoords: (x: number, y: number) => [number, number];\n}) => {\n  function updateWysiwygStyle() {\n    const updatedElement = globalSceneState.getElement(id);\n    if (isTextElement(updatedElement)) {\n      const [viewportX, viewportY] = getViewportCoords(\n        updatedElement.x,\n        updatedElement.y,\n      );\n      const { textAlign, angle } = updatedElement;\n\n      editable.value = updatedElement.text;\n\n      const lines = updatedElement.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n      const lineHeight = updatedElement.height / lines.length;\n\n      Object.assign(editable.style, {\n        font: getFontString(updatedElement),\n        // must be defined *after* font ¯\\_(ツ)_/¯\n        lineHeight: `${lineHeight}px`,\n        width: `${updatedElement.width}px`,\n        height: `${updatedElement.height}px`,\n        left: `${viewportX}px`,\n        top: `${viewportY}px`,\n        transform: getTransform(\n          updatedElement.width,\n          updatedElement.height,\n          angle,\n          zoom,\n        ),\n        textAlign: textAlign,\n        color: updatedElement.strokeColor,\n        opacity: updatedElement.opacity / 100,\n      });\n    }\n  }\n\n  const editable = document.createElement(\"textarea\");\n\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.dataset.type = \"wysiwyg\";\n  // prevent line wrapping on Safari\n  editable.wrap = \"off\";\n\n  Object.assign(editable.style, {\n    position: \"fixed\",\n    display: \"inline-block\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\",\n    margin: 0,\n    padding: 0,\n    border: 0,\n    outline: 0,\n    resize: \"none\",\n    background: \"transparent\",\n    overflow: \"hidden\",\n    // prevent line wrapping (`whitespace: nowrap` doesn't work on FF)\n    whiteSpace: \"pre\",\n  });\n\n  updateWysiwygStyle();\n\n  if (onChange) {\n    editable.oninput = () => {\n      onChange(normalizeText(editable.value));\n    };\n  }\n\n  editable.onkeydown = (event) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && !event.altKey) {\n      event.stopPropagation();\n    }\n  };\n\n  const stopEvent = (event: Event) => {\n    event.stopPropagation();\n  };\n\n  const handleSubmit = () => {\n    if (editable.value) {\n      onSubmit(normalizeText(editable.value));\n    } else {\n      onCancel();\n    }\n    cleanup();\n  };\n\n  const cleanup = () => {\n    if (isDestroyed) {\n      return;\n    }\n    isDestroyed = true;\n    // remove events to ensure they don't late-fire\n    editable.onblur = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n\n    window.removeEventListener(\"resize\", updateWysiwygStyle);\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    window.removeEventListener(\"pointerdown\", onPointerDown);\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    window.removeEventListener(\"blur\", handleSubmit);\n\n    unbindUpdate();\n\n    document.body.removeChild(editable);\n  };\n\n  const rebindBlur = () => {\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    // deferred to guard against focus traps on various UIs that steal focus\n    //  upon pointerUp\n    setTimeout(() => {\n      editable.onblur = handleSubmit;\n      // case: clicking on the same property → no change → no update → no focus\n      editable.focus();\n    });\n  };\n\n  // prevent blur when changing properties from the menu\n  const onPointerDown = (event: MouseEvent) => {\n    if (\n      event.target instanceof HTMLElement &&\n      event.target.closest(`.${CLASSES.SHAPE_ACTIONS_MENU}`) &&\n      !isWritableElement(event.target)\n    ) {\n      editable.onblur = null;\n      window.addEventListener(\"pointerup\", rebindBlur);\n      // handle edge-case where pointerup doesn't fire e.g. due to user\n      //  alt-tabbing away\n      window.addEventListener(\"blur\", handleSubmit);\n    }\n  };\n\n  // handle updates of textElement properties of editing element\n  const unbindUpdate = globalSceneState.addCallback(() => {\n    updateWysiwygStyle();\n    editable.focus();\n  });\n\n  let isDestroyed = false;\n\n  editable.onblur = handleSubmit;\n  // reposition wysiwyg in case of window resize. Happens on mobile when\n  //  device keyboard is opened.\n  window.addEventListener(\"resize\", updateWysiwygStyle);\n  window.addEventListener(\"pointerdown\", onPointerDown);\n  window.addEventListener(\"wheel\", stopEvent, true);\n  document.body.appendChild(editable);\n  editable.focus();\n  editable.select();\n};\n","import { measureText, getFontString } from \"../utils\";\nimport { ExcalidrawTextElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\n\nexport const redrawTextBoundingBox = (element: ExcalidrawTextElement) => {\n  const metrics = measureText(element.text, getFontString(element));\n  mutateElement(element, {\n    width: metrics.width,\n    height: metrics.height,\n    baseline: metrics.baseline,\n  });\n};\n","import { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\nimport { getSelectedElements } from \"../scene\";\n\nexport const showSelectedShapeActions = (\n  appState: AppState,\n  elements: readonly NonDeletedExcalidrawElement[],\n) =>\n  Boolean(\n    appState.editingElement ||\n      getSelectedElements(elements, appState).length ||\n      appState.elementType !== \"selection\",\n  );\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport { isInvisiblySmallElement } from \"./sizeHelpers\";\n\nexport {\n  newElement,\n  newTextElement,\n  updateTextElement,\n  newLinearElement,\n  duplicateElement,\n} from \"./newElement\";\nexport {\n  getElementAbsoluteCoords,\n  getElementBounds,\n  getCommonBounds,\n  getDiamondPoints,\n  getArrowPoints,\n  getClosestElementBounds,\n} from \"./bounds\";\n\nexport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nexport { hitTest } from \"./collision\";\nexport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n  getElementWithResizeHandler,\n  getResizeHandlerFromCoords,\n} from \"./resizeTest\";\nexport {\n  resizeElements,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n} from \"./resizeElements\";\nexport {\n  dragSelectedElements,\n  getDragOffsetXY,\n  dragNewElement,\n} from \"./dragElements\";\nexport { isTextElement, isExcalidrawElement } from \"./typeChecks\";\nexport { textWysiwyg } from \"./textWysiwyg\";\nexport { redrawTextBoundingBox } from \"./textElement\";\nexport {\n  getPerfectElementSize,\n  isInvisiblySmallElement,\n  resizePerfectLineForNWHandler,\n  getNormalizedDimensions,\n} from \"./sizeHelpers\";\nexport { showSelectedShapeActions } from \"./showSelectedShapeActions\";\n\nexport const getSyncableElements = (\n  elements: readonly ExcalidrawElement[], // There are places in Excalidraw where synthetic invisibly small elements are added and removed.\n) =>\n  // It's probably best to keep those local otherwise there might be a race condition that\n  // gets the app into an invalid state. I've never seen it happen but I'm worried about it :)\n  elements.filter((el) => el.isDeleted || !isInvisiblySmallElement(el));\n\nexport const getElementMap = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce(\n    (acc: { [key: string]: ExcalidrawElement }, element: ExcalidrawElement) => {\n      acc[element.id] = element;\n      return acc;\n    },\n    {},\n  );\n\nexport const getDrawingVersion = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce((acc, el) => acc + el.version, 0);\n\nexport const getNonDeletedElements = (elements: readonly ExcalidrawElement[]) =>\n  elements.filter(\n    (element) => !element.isDeleted,\n  ) as readonly NonDeletedExcalidrawElement[];\n\nexport const isNonDeletedElement = <T extends ExcalidrawElement>(\n  element: T,\n): element is NonDeleted<T> => !element.isDeleted;\n","import LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport fallbackLanguageData from \"./locales/en.json\";\nimport percentages from \"./locales/percentages.json\";\n\nconst COMPLETION_THRESHOLD_TO_EXCEED = 85;\n\ninterface Language {\n  lng: string;\n  label: string;\n  data: string;\n  rtl?: boolean;\n}\n\nconst allLanguages: Language[] = [\n  { lng: \"bg-BG\", label: \"Български\", data: \"bg-BG.json\" },\n  { lng: \"de-DE\", label: \"Deutsch\", data: \"de-DE.json\" },\n  { lng: \"es-ES\", label: \"Español\", data: \"es-ES.json\" },\n  { lng: \"ca-ES\", label: \"Catalan\", data: \"ca-ES.json\" },\n  { lng: \"el-GR\", label: \"Ελληνικά\", data: \"el-GR.json\" },\n  { lng: \"fr-FR\", label: \"Français\", data: \"fr-FR.json\" },\n  { lng: \"id-ID\", label: \"Bahasa Indonesia\", data: \"id-ID.json\" },\n  { lng: \"it-IT\", label: \"Italiano\", data: \"it-IT.json\" },\n  { lng: \"hu-HU\", label: \"Magyar\", data: \"hu-HU.json\" },\n  { lng: \"nl-NL\", label: \"Nederlands\", data: \"nl-NL.json\" },\n  { lng: \"nb-NO\", label: \"Norsk bokmål\", data: \"nb-NO.json\" },\n  { lng: \"nn-NO\", label: \"Norsk nynorsk\", data: \"nn-NO.json\" },\n  { lng: \"pl-PL\", label: \"Polski\", data: \"pl-PL.json\" },\n  { lng: \"pt-PT\", label: \"Português\", data: \"pt-PT.json\" },\n  { lng: \"ru-RU\", label: \"Русский\", data: \"ru-RU.json\" },\n  { lng: \"uk-UA\", label: \"Українська\", data: \"uk-UA.json\" },\n  { lng: \"fi-FI\", label: \"Suomi\", data: \"fi-FI.json\" },\n  { lng: \"tr-TR\", label: \"Türkçe\", data: \"tr-TR.json\" },\n  { lng: \"ja-JP\", label: \"日本語\", data: \"ja-JP.json\" },\n  { lng: \"ko-KR\", label: \"한국어\", data: \"ko-KR.json\" },\n  { lng: \"zh-TW\", label: \"繁體中文\", data: \"zh-TW.json\" },\n  { lng: \"zh-CN\", label: \"简体中文\", data: \"zh-CN.json\" },\n  { lng: \"ar-SA\", label: \"العربية\", data: \"ar-SA.json\", rtl: true },\n  { lng: \"he-IL\", label: \"עברית\", data: \"he-IL.json\", rtl: true },\n  { lng: \"hi-IN\", label: \"हिन्दी\", data: \"hi-IN.json\" },\n];\n\nexport const languages: Language[] = [\n  { lng: \"en\", label: \"English\", data: \"en.json\" },\n]\n  .concat(\n    allLanguages.sort((left, right) => (left.label > right.label ? 1 : -1)),\n  )\n  .filter(\n    (lang) =>\n      (percentages as Record<string, number>)[lang.lng] >\n      COMPLETION_THRESHOLD_TO_EXCEED,\n  );\n\nlet currentLanguage = languages[0];\nlet currentLanguageData = {};\nconst fallbackLanguage = languages[0];\n\nexport const setLanguage = async (newLng: string | undefined) => {\n  currentLanguage =\n    languages.find((language) => language.lng === newLng) || fallbackLanguage;\n\n  document.documentElement.dir = currentLanguage.rtl ? \"rtl\" : \"ltr\";\n\n  currentLanguageData = await import(`./locales/${currentLanguage.data}`);\n\n  languageDetector.cacheUserLanguage(currentLanguage.lng);\n};\n\nexport const setLanguageFirstTime = async () => {\n  const newLng: string | undefined = languageDetector.detect();\n\n  currentLanguage =\n    languages.find((language) => language.lng === newLng) || fallbackLanguage;\n\n  document.documentElement.dir = currentLanguage.rtl ? \"rtl\" : \"ltr\";\n\n  currentLanguageData = await import(`./locales/${currentLanguage.data}`);\n\n  languageDetector.cacheUserLanguage(currentLanguage.lng);\n};\n\nexport const getLanguage = () => currentLanguage;\n\nconst findPartsForData = (data: any, parts: string[]) => {\n  for (var i = 0; i < parts.length; ++i) {\n    const part = parts[i];\n    if (data[part] === undefined) {\n      return undefined;\n    }\n    data = data[part];\n  }\n  if (typeof data !== \"string\") {\n    return undefined;\n  }\n  return data;\n};\n\nexport const t = (path: string, replacement?: { [key: string]: string }) => {\n  const parts = path.split(\".\");\n  let translation =\n    findPartsForData(currentLanguageData, parts) ||\n    findPartsForData(fallbackLanguageData, parts);\n  if (translation === undefined) {\n    throw new Error(`Can't find translation for ${path}`);\n  }\n\n  if (replacement) {\n    for (var key in replacement) {\n      translation = translation.replace(`{{${key}}}`, replacement[key]);\n    }\n  }\n  return translation;\n};\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.init({\n  languageUtils: {\n    formatLanguageCode: (lng: string) => lng,\n    isWhitelisted: () => true,\n  },\n  checkWhitelist: false,\n});\n","import { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element\";\nimport { FlooredNumber } from \"../types\";\nimport { ScrollBars } from \"./types\";\nimport { getGlobalCSSVariable } from \"../utils\";\nimport { getLanguage } from \"../i18n\";\n\nexport const SCROLLBAR_MARGIN = 4;\nexport const SCROLLBAR_WIDTH = 6;\nexport const SCROLLBAR_COLOR = \"rgba(0,0,0,0.3)\";\n\nexport const getScrollBars = (\n  elements: readonly ExcalidrawElement[],\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n): ScrollBars => {\n  // This is the bounding box of all the elements\n  const [\n    elementsMinX,\n    elementsMinY,\n    elementsMaxX,\n    elementsMaxY,\n  ] = getCommonBounds(elements);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  const safeArea = {\n    top: parseInt(getGlobalCSSVariable(\"sat\")),\n    bottom: parseInt(getGlobalCSSVariable(\"sab\")),\n    left: parseInt(getGlobalCSSVariable(\"sal\")),\n    right: parseInt(getGlobalCSSVariable(\"sar\")),\n  };\n\n  const isRTL = getLanguage().rtl;\n\n  // The viewport is the rectangle currently visible for the user\n  const viewportMinX = -scrollX + viewportWidthDiff / 2 + safeArea.left;\n  const viewportMinY = -scrollY + viewportHeightDiff / 2 + safeArea.top;\n  const viewportMaxX = viewportMinX + viewportWidthWithZoom - safeArea.right;\n  const viewportMaxY = viewportMinY + viewportHeightWithZoom - safeArea.bottom;\n\n  // The scene is the bounding box of both the elements and viewport\n  const sceneMinX = Math.min(elementsMinX, viewportMinX);\n  const sceneMinY = Math.min(elementsMinY, viewportMinY);\n  const sceneMaxX = Math.max(elementsMaxX, viewportMaxX);\n  const sceneMaxY = Math.max(elementsMaxY, viewportMaxY);\n\n  // The scrollbar represents where the viewport is in relationship to the scene\n\n  return {\n    horizontal:\n      viewportMinX === sceneMinX && viewportMaxX === sceneMaxX\n        ? null\n        : {\n            x:\n              Math.max(safeArea.left, SCROLLBAR_MARGIN) +\n              ((viewportMinX - sceneMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth,\n            y:\n              viewportHeight -\n              SCROLLBAR_WIDTH -\n              Math.max(SCROLLBAR_MARGIN, safeArea.bottom),\n            width:\n              ((viewportMaxX - viewportMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.left + safeArea.right),\n            height: SCROLLBAR_WIDTH,\n          },\n    vertical:\n      viewportMinY === sceneMinY && viewportMaxY === sceneMaxY\n        ? null\n        : {\n            x: isRTL\n              ? Math.max(safeArea.left, SCROLLBAR_MARGIN)\n              : viewportWidth -\n                SCROLLBAR_WIDTH -\n                Math.max(safeArea.right, SCROLLBAR_MARGIN),\n            y:\n              ((viewportMinY - sceneMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight +\n              Math.max(safeArea.top, SCROLLBAR_MARGIN),\n            width: SCROLLBAR_WIDTH,\n            height:\n              ((viewportMaxY - viewportMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.top + safeArea.bottom),\n          },\n  };\n};\n\nexport const isOverScrollBars = (\n  scrollBars: ScrollBars,\n  x: number,\n  y: number,\n) => {\n  const [isOverHorizontalScrollBar, isOverVerticalScrollBar] = [\n    scrollBars.horizontal,\n    scrollBars.vertical,\n  ].map((scrollBar) => {\n    return (\n      scrollBar &&\n      scrollBar.x <= x &&\n      x <= scrollBar.x + scrollBar.width &&\n      scrollBar.y <= y &&\n      y <= scrollBar.y + scrollBar.height\n    );\n  });\n\n  return {\n    isOverHorizontalScrollBar,\n    isOverVerticalScrollBar,\n  };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { getElementAbsoluteCoords, getElementBounds } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const getElementsWithinSelection = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  selection: NonDeletedExcalidrawElement,\n) => {\n  const [\n    selectionX1,\n    selectionY1,\n    selectionX2,\n    selectionY2,\n  ] = getElementAbsoluteCoords(selection);\n  return elements.filter((element) => {\n    const [elementX1, elementY1, elementX2, elementY2] = getElementBounds(\n      element,\n    );\n\n    return (\n      element.type !== \"selection\" &&\n      selectionX1 <= elementX1 &&\n      selectionY1 <= elementY1 &&\n      selectionX2 >= elementX2 &&\n      selectionY2 >= elementY2\n    );\n  });\n};\n\nexport const isSomeElementSelected = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n): boolean => {\n  return elements.some((element) => appState.selectedElementIds[element.id]);\n};\n\n/**\n * Returns common attribute (picked by `getAttribute` callback) of selected\n *  elements. If elements don't share the same value, returns `null`.\n */\nexport const getCommonAttributeOfSelectedElements = <T>(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n): T | null => {\n  const attributes = Array.from(\n    new Set(\n      getSelectedElements(elements, appState).map((element) =>\n        getAttribute(element),\n      ),\n    ),\n  );\n  return attributes.length === 1 ? attributes[0] : null;\n};\n\nexport const getSelectedElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  return elements.filter((element) => appState.selectedElementIds[element.id]);\n};\n\nexport const getTargetElement = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  return appState.editingElement\n    ? [appState.editingElement]\n    : getSelectedElements(elements, appState);\n};\n","import { AppState, FlooredNumber } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds, getClosestElementBounds } from \"../element\";\n\nimport {\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n} from \"../utils\";\n\nexport const normalizeScroll = (pos: number) =>\n  Math.floor(pos) as FlooredNumber;\n\nfunction isOutsideViewPort(\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n  cords: Array<number>,\n) {\n  const [x1, y1, x2, y2] = cords;\n  const { x: viewportX1, y: viewportY1 } = sceneCoordsToViewportCoords(\n    { sceneX: x1, sceneY: y1 },\n    appState,\n    canvas,\n    window.devicePixelRatio,\n  );\n  const { x: viewportX2, y: viewportY2 } = sceneCoordsToViewportCoords(\n    { sceneX: x2, sceneY: y2 },\n    appState,\n    canvas,\n    window.devicePixelRatio,\n  );\n  return (\n    viewportX2 - viewportX1 > window.innerWidth ||\n    viewportY2 - viewportY1 > window.innerHeight\n  );\n}\n\nexport const calculateScrollCenter = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n): { scrollX: FlooredNumber; scrollY: FlooredNumber } => {\n  if (!elements.length) {\n    return {\n      scrollX: normalizeScroll(0),\n      scrollY: normalizeScroll(0),\n    };\n  }\n  const scale = window.devicePixelRatio;\n  let [x1, y1, x2, y2] = getCommonBounds(elements);\n  if (isOutsideViewPort(appState, canvas, [x1, y1, x2, y2])) {\n    [x1, y1, x2, y2] = getClosestElementBounds(\n      elements,\n      viewportCoordsToSceneCoords(\n        { clientX: appState.scrollX, clientY: appState.scrollY },\n        appState,\n        canvas,\n        scale,\n      ),\n    );\n  }\n\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  return {\n    scrollX: normalizeScroll(window.innerWidth / 2 - centerX),\n    scrollY: normalizeScroll(window.innerHeight / 2 - centerY),\n  };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getElementAbsoluteCoords, hitTest } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const hasBackground = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasStroke = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"arrow\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasText = (type: string) => type === \"text\";\n\nexport const getElementAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    if (hitTest(elements[i], appState, x, y, zoom)) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n\n  return hitElement;\n};\n\nexport const getElementContainingPosition = (\n  elements: readonly ExcalidrawElement[],\n  x: number,\n  y: number,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(elements[i]);\n    if (x1 < x && x < x2 && y1 < y && y < y2) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n  return hitElement;\n};\n","export const getZoomOrigin = (\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  if (canvas === null) {\n    return { x: 0, y: 0 };\n  }\n  const context = canvas.getContext(\"2d\");\n  if (context === null) {\n    return { x: 0, y: 0 };\n  }\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  return {\n    x: normalizedCanvasWidth / 2,\n    y: normalizedCanvasHeight / 2,\n  };\n};\n\nexport const getNormalizedZoom = (zoom: number): number => {\n  const normalizedZoom = parseFloat(zoom.toFixed(2));\n  const clampedZoom = Math.max(0.1, Math.min(normalizedZoom, 2));\n  return clampedZoom;\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"../element/types\";\nimport {\n  getNonDeletedElements,\n  isNonDeletedElement,\n  getElementMap,\n} from \"../element\";\n\nexport interface SceneStateCallback {\n  (): void;\n}\n\nexport interface SceneStateCallbackRemover {\n  (): void;\n}\n\nclass GlobalScene {\n  private callbacks: Set<SceneStateCallback> = new Set();\n\n  private nonDeletedElements: readonly NonDeletedExcalidrawElement[] = [];\n  private elements: readonly ExcalidrawElement[] = [];\n  private elementsMap: {\n    [id: string]: ExcalidrawElement;\n  } = {};\n\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n\n  getElements(): readonly NonDeletedExcalidrawElement[] {\n    return this.nonDeletedElements;\n  }\n\n  getElement(id: ExcalidrawElement[\"id\"]): ExcalidrawElement | null {\n    return this.elementsMap[id] || null;\n  }\n\n  getNonDeletedElement(\n    id: ExcalidrawElement[\"id\"],\n  ): NonDeleted<ExcalidrawElement> | null {\n    const element = this.getElement(id);\n    if (element && isNonDeletedElement(element)) {\n      return element;\n    }\n    return null;\n  }\n\n  replaceAllElements(nextElements: readonly ExcalidrawElement[]) {\n    this.elements = nextElements;\n    this.elementsMap = getElementMap(nextElements);\n    this.nonDeletedElements = getNonDeletedElements(this.elements);\n    this.informMutation();\n  }\n\n  informMutation() {\n    for (const callback of Array.from(this.callbacks)) {\n      callback();\n    }\n  }\n\n  addCallback(cb: SceneStateCallback): SceneStateCallbackRemover {\n    if (this.callbacks.has(cb)) {\n      throw new Error();\n    }\n\n    this.callbacks.add(cb);\n\n    return () => {\n      if (!this.callbacks.has(cb)) {\n        throw new Error();\n      }\n      this.callbacks.delete(cb);\n    };\n  }\n}\n\nexport const globalSceneState = new GlobalScene();\n","import { FlooredNumber } from \"./types\";\nimport { getZoomOrigin } from \"./scene\";\nimport { CURSOR_TYPE, FONT_FAMILY } from \"./constants\";\nimport { FontFamily, FontString } from \"./element/types\";\n\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nlet mockDateTime: string | null = null;\n\nexport const setDateTimeForTests = (dateTime: string) => {\n  mockDateTime = dateTime;\n};\n\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\n\nexport const capitalizeString = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const isToolIcon = (\n  target: Element | EventTarget | null,\n): target is HTMLElement =>\n  target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\n\nexport const isInputLike = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLSelectElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLInputElement ||\n  target instanceof HTMLTextAreaElement ||\n  target instanceof HTMLSelectElement;\n\nexport const isWritableElement = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLTextAreaElement ||\n  (target instanceof HTMLInputElement &&\n    (target.type === \"text\" || target.type === \"number\"));\n\nexport const getFontFamilyString = ({\n  fontFamily,\n}: {\n  fontFamily: FontFamily;\n}) => {\n  return FONT_FAMILY[fontFamily];\n};\n\n/** returns fontSize+fontFamily string for assignment to DOM elements */\nexport const getFontString = ({\n  fontSize,\n  fontFamily,\n}: {\n  fontSize: number;\n  fontFamily: FontFamily;\n}) => {\n  return `${fontSize}px ${getFontFamilyString({ fontFamily })}` as FontString;\n};\n\n// https://github.com/grassator/canvas-text-editor/blob/master/lib/FontMetrics.js\nexport const measureText = (text: string, font: FontString) => {\n  const line = document.createElement(\"div\");\n  const body = document.body;\n  line.style.position = \"absolute\";\n  line.style.whiteSpace = \"pre\";\n  line.style.font = font;\n  body.appendChild(line);\n  line.innerText = text\n    .split(\"\\n\")\n    // replace empty lines with single space because leading/trailing empty\n    //  lines would be stripped from computation\n    .map((x) => x || \" \")\n    .join(\"\\n\");\n  const width = line.offsetWidth;\n  const height = line.offsetHeight;\n  // Now creating 1px sized item that will be aligned to baseline\n  // to calculate baseline shift\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  span.style.overflow = \"hidden\";\n  span.style.width = \"1px\";\n  span.style.height = \"1px\";\n  line.appendChild(span);\n  // Baseline is important for positioning text on canvas\n  const baseline = span.offsetTop + span.offsetHeight;\n  document.body.removeChild(line);\n\n  return { width, height, baseline };\n};\n\nexport const debounce = <T extends any[]>(\n  fn: (...args: T) => void,\n  timeout: number,\n) => {\n  let handle = 0;\n  let lastArgs: T;\n  const ret = (...args: T) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => fn(...args), timeout);\n  };\n  ret.flush = () => {\n    clearTimeout(handle);\n    fn(...lastArgs);\n  };\n  return ret;\n};\n\nexport const selectNode = (node: Element) => {\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\nexport const removeSelection = () => {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n  }\n};\n\nexport const distance = (x: number, y: number) => Math.abs(x - y);\n\nexport const resetCursor = () => {\n  document.documentElement.style.cursor = \"\";\n};\n\nexport const setCursorForShape = (shape: string) => {\n  if (shape === \"selection\") {\n    resetCursor();\n  } else {\n    document.documentElement.style.cursor = CURSOR_TYPE.CROSSHAIR;\n  }\n};\n\nexport const isFullScreen = () =>\n  document.fullscreenElement?.nodeName === \"HTML\";\n\nexport const allowFullScreen = () =>\n  document.documentElement.requestFullscreen();\n\nexport const exitFullScreen = () => document.exitFullscreen();\n\nexport const getShortcutKey = (shortcut: string): string => {\n  const isMac = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n  if (isMac) {\n    return `${shortcut\n      .replace(/\\bCtrlOrCmd\\b/i, \"Cmd\")\n      .replace(/\\bAlt\\b/i, \"Option\")\n      .replace(/\\bDel\\b/i, \"Delete\")\n      .replace(/\\b(Enter|Return)\\b/i, \"Enter\")}`;\n  }\n  return `${shortcut.replace(/\\bCtrlOrCmd\\b/i, \"Ctrl\")}`;\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY }: { clientX: number; clientY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const clientXWithZoom = zoomOrigin.x + (clientX - zoomOrigin.x) / zoom;\n  const clientYWithZoom = zoomOrigin.y + (clientY - zoomOrigin.y) / zoom;\n\n  const x = clientXWithZoom - scrollX;\n  const y = clientYWithZoom - scrollY;\n\n  return { x, y };\n};\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY }: { sceneX: number; sceneY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const x = zoomOrigin.x - (zoomOrigin.x - sceneX - scrollX) * zoom;\n  const y = zoomOrigin.y - (zoomOrigin.y - sceneY - scrollY) * zoom;\n\n  return { x, y };\n};\n\nexport const getGlobalCSSVariable = (name: string) =>\n  getComputedStyle(document.documentElement).getPropertyValue(`--${name}`);\n\nconst RS_LTR_CHARS =\n  \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" +\n  \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\";\nconst RS_RTL_CHARS = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\";\nconst RE_RTL_CHECK = new RegExp(`^[^${RS_LTR_CHARS}]*[${RS_RTL_CHARS}]`);\n/**\n * Checks whether first directional character is RTL. Meaning whether it starts\n *  with RTL characters, or indeterminate (numbers etc.) characters followed by\n *  RTL.\n * See https://github.com/excalidraw/excalidraw/pull/1722#discussion_r436340171\n */\nexport const isRTL = (text: string) => {\n  return RE_RTL_CHECK.test(text);\n};\n","import React from \"react\";\nimport * as Sentry from \"@sentry/browser\";\nimport { resetCursor } from \"../utils\";\nimport { t } from \"../i18n\";\n\ninterface TopErrorBoundaryState {\n  hasError: boolean;\n  sentryEventId: string;\n  localStorage: string;\n}\n\nexport class TopErrorBoundary extends React.Component<\n  any,\n  TopErrorBoundaryState\n> {\n  state: TopErrorBoundaryState = {\n    hasError: false,\n    sentryEventId: \"\",\n    localStorage: \"\",\n  };\n\n  render() {\n    return this.state.hasError ? this.errorSplash() : this.props.children;\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    resetCursor();\n    const _localStorage: any = {};\n    for (const [key, value] of Object.entries({ ...localStorage })) {\n      try {\n        _localStorage[key] = JSON.parse(value);\n      } catch (error) {\n        _localStorage[key] = value;\n      }\n    }\n\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n\n      this.setState((state) => ({\n        hasError: true,\n        sentryEventId: eventId,\n        localStorage: JSON.stringify(_localStorage),\n      }));\n    });\n  }\n\n  private selectTextArea(event: React.MouseEvent<HTMLTextAreaElement>) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLTextAreaElement).select();\n    }\n  }\n\n  private async createGithubIssue() {\n    let body = \"\";\n    try {\n      const templateStrFn = (await import(\"../bug-issue-template\")).default;\n      body = encodeURIComponent(templateStrFn(this.state.sentryEventId));\n    } catch (error) {\n      console.error(error);\n    }\n\n    window.open(\n      `https://github.com/excalidraw/excalidraw/issues/new?body=${body}`,\n    );\n  }\n\n  private errorSplash() {\n    return (\n      <div className=\"ErrorSplash\">\n        <div className=\"ErrorSplash-messageContainer\">\n          <div className=\"ErrorSplash-paragraph bigger align-center\">\n            {t(\"errorSplash.headingMain_pre\")}\n            <button onClick={() => window.location.reload()}>\n              {t(\"errorSplash.headingMain_button\")}\n            </button>\n          </div>\n          <div className=\"ErrorSplash-paragraph align-center\">\n            {t(\"errorSplash.clearCanvasMessage\")}\n            <button\n              onClick={() => {\n                try {\n                  localStorage.clear();\n                  window.location.reload();\n                } catch (error) {\n                  console.error(error);\n                }\n              }}\n            >\n              {t(\"errorSplash.clearCanvasMessage_button\")}\n            </button>\n            <br />\n            <div className=\"smaller\">\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n              {t(\"errorSplash.clearCanvasCaveat\")}\n              <span role=\"img\" aria-hidden=\"true\">\n                ⚠️\n              </span>\n            </div>\n          </div>\n          <div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.trackedToSentry_pre\")}\n              {this.state.sentryEventId}\n              {t(\"errorSplash.trackedToSentry_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.openIssueMessage_pre\")}\n              <button onClick={() => this.createGithubIssue()}>\n                {t(\"errorSplash.openIssueMessage_button\")}\n              </button>\n              {t(\"errorSplash.openIssueMessage_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              <div className=\"ErrorSplash-details\">\n                <label>{t(\"errorSplash.sceneContent\")}</label>\n                <textarea\n                  rows={5}\n                  onPointerDown={this.selectTextArea}\n                  readOnly={true}\n                  value={this.state.localStorage}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport const LoadingMessage = () => {\n  // !! KEEP THIS IN SYNC WITH index.html !!\n  return (\n    <div className=\"LoadingMessage\">\n      <span>{\"Loading scene...\"}</span>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { setLanguageFirstTime } from \"../i18n\";\n\nexport class InitializeApp extends React.Component<\n  any,\n  { isLoading: boolean }\n> {\n  public state: { isLoading: boolean } = {\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    await setLanguageFirstTime();\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  public render() {\n    return this.state.isLoading ? <LoadingMessage /> : this.props.children;\n  }\n}\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nconst context = React.createContext(false);\n\nexport const IsMobileProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const query = useRef<MediaQueryList>();\n  if (!query.current) {\n    query.current = window.matchMedia\n      ? window.matchMedia(\n          \"(max-width: 640px), (max-height: 500px) and (max-width: 1000px)\",\n        )\n      : (({\n          matches: false,\n          addListener: () => {},\n          removeListener: () => {},\n        } as any) as MediaQueryList);\n  }\n  const [isMobile, setMobile] = useState(query.current.matches);\n\n  useEffect(() => {\n    const handler = () => setMobile(query.current!.matches);\n    query.current!.addListener(handler);\n    return () => query.current!.removeListener(handler);\n  }, []);\n\n  return <context.Provider value={isMobile}>{children}</context.Provider>;\n};\n\nexport default function useIsMobile() {\n  return useContext(context);\n}\n","import oc from \"open-color\";\nimport { AppState, FlooredNumber } from \"./types\";\nimport { getDateTime } from \"./utils\";\nimport { t } from \"./i18n\";\nimport {\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n} from \"./constants\";\n\nexport const getDefaultAppState = (): AppState => {\n  return {\n    isLoading: false,\n    errorMessage: null,\n    draggingElement: null,\n    resizingElement: null,\n    multiElement: null,\n    editingElement: null,\n    editingLinearElement: null,\n    elementType: \"selection\",\n    elementLocked: false,\n    exportBackground: true,\n    shouldAddWatermark: false,\n    currentItemStrokeColor: oc.black,\n    currentItemBackgroundColor: \"transparent\",\n    currentItemFillStyle: \"hachure\",\n    currentItemStrokeWidth: 1,\n    currentItemStrokeStyle: \"solid\",\n    currentItemRoughness: 1,\n    currentItemOpacity: 100,\n    currentItemFontSize: DEFAULT_FONT_SIZE,\n    currentItemFontFamily: DEFAULT_FONT_FAMILY,\n    currentItemTextAlign: DEFAULT_TEXT_ALIGN,\n    viewBackgroundColor: oc.white,\n    scrollX: 0 as FlooredNumber,\n    scrollY: 0 as FlooredNumber,\n    cursorX: 0,\n    cursorY: 0,\n    cursorButton: \"up\",\n    scrolledOutside: false,\n    name: `${t(\"labels.untitled\")}-${getDateTime()}`,\n    username: \"\",\n    isCollaborating: false,\n    isResizing: false,\n    isRotating: false,\n    selectionElement: null,\n    zoom: 1,\n    openMenu: null,\n    lastPointerDownWith: \"mouse\",\n    selectedElementIds: {},\n    previousSelectedElementIds: {},\n    collaborators: new Map(),\n    shouldCacheIgnoreZoom: false,\n    showShortcutsDialog: false,\n    zenModeEnabled: false,\n    gridSize: null,\n    editingGroupId: null,\n    selectedGroupIds: {},\n  };\n};\n\nexport const clearAppStateForLocalStorage = (appState: AppState) => {\n  const {\n    draggingElement,\n    resizingElement,\n    multiElement,\n    editingElement,\n    selectionElement,\n    isResizing,\n    isRotating,\n    collaborators,\n    isCollaborating,\n    isLoading,\n    errorMessage,\n    showShortcutsDialog,\n    editingLinearElement,\n    ...exportedState\n  } = appState;\n  return exportedState;\n};\n\nexport const cleanAppStateForExport = (appState: AppState) => {\n  return {\n    viewBackgroundColor: appState.viewBackgroundColor,\n    gridSize: appState.gridSize,\n  };\n};\n","/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  context.stroke();\n};\n","import oc from \"open-color\";\n\nconst shades = (i: number) => [\n  oc.red[i],\n  oc.pink[i],\n  oc.grape[i],\n  oc.violet[i],\n  oc.indigo[i],\n  oc.blue[i],\n  oc.cyan[i],\n  oc.teal[i],\n  oc.green[i],\n  oc.lime[i],\n  oc.yellow[i],\n  oc.orange[i],\n];\n\nexport default {\n  canvasBackground: [oc.white, oc.gray[0], oc.gray[1], ...shades(0)],\n  elementBackground: [\"transparent\", oc.gray[4], oc.gray[6], ...shades(6)],\n  elementStroke: [oc.black, oc.gray[8], oc.gray[7], ...shades(9)],\n};\n","import colors from \"./colors\";\n\nexport const getClientColors = (clientId: string) => {\n  // Naive way of getting an integer out of the clientId\n  const sum = clientId.split(\"\").reduce((a, str) => a + str.charCodeAt(0), 0);\n\n  // Skip transparent background.\n  const backgrounds = colors.elementBackground.slice(1);\n  const strokes = colors.elementStroke.slice(1);\n  return {\n    background: backgrounds[sum % backgrounds.length],\n    stroke: strokes[sum % strokes.length],\n  };\n};\n\nexport const getClientInitials = (username?: string | null) => {\n  if (!username) {\n    return \"?\";\n  }\n  const names = username.trim().split(\" \");\n\n  if (names.length < 2) {\n    return names[0].substring(0, 2).toUpperCase();\n  }\n\n  const firstName = names[0];\n  const lastName = names[names.length - 1];\n\n  return (firstName[0] + lastName[0]).toUpperCase();\n};\n","import {\n  NonDeleted,\n  ExcalidrawLinearElement,\n  ExcalidrawElement,\n} from \"./types\";\nimport { distance2d, rotate, isPathALoop } from \"../math\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { getElementPointsCoords } from \"./bounds\";\nimport { Point, AppState } from \"../types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { SceneHistory } from \"../history\";\nimport { globalSceneState } from \"../scene\";\n\nexport class LinearElementEditor {\n  public elementId: ExcalidrawElement[\"id\"];\n  public activePointIndex: number | null;\n  public draggingElementPointIndex: number | null;\n  public lastUncommittedPoint: Point | null;\n\n  constructor(element: NonDeleted<ExcalidrawLinearElement>) {\n    LinearElementEditor.normalizePoints(element);\n\n    this.elementId = element.id;\n    this.activePointIndex = null;\n    this.lastUncommittedPoint = null;\n    this.draggingElementPointIndex = null;\n  }\n\n  // ---------------------------------------------------------------------------\n  // static methods\n  // ---------------------------------------------------------------------------\n\n  static POINT_HANDLE_SIZE = 20;\n\n  static getElement(id: ExcalidrawElement[\"id\"]) {\n    const element = globalSceneState.getNonDeletedElement(id);\n    if (element) {\n      return element as NonDeleted<ExcalidrawLinearElement>;\n    }\n    return null;\n  }\n\n  /** @returns whether point was dragged */\n  static handlePointDragging(\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    scenePointerX: number,\n    scenePointerY: number,\n    lastX: number,\n    lastY: number,\n  ): boolean {\n    if (!appState.editingLinearElement) {\n      return false;\n    }\n    const { editingLinearElement } = appState;\n    let { draggingElementPointIndex, elementId } = editingLinearElement;\n\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return false;\n    }\n\n    const clickedPointIndex =\n      draggingElementPointIndex ??\n      LinearElementEditor.getPointIndexUnderCursor(\n        element,\n        appState.zoom,\n        scenePointerX,\n        scenePointerY,\n      );\n\n    draggingElementPointIndex = draggingElementPointIndex ?? clickedPointIndex;\n    if (draggingElementPointIndex > -1) {\n      if (\n        editingLinearElement.draggingElementPointIndex !==\n          draggingElementPointIndex ||\n        editingLinearElement.activePointIndex !== clickedPointIndex\n      ) {\n        setState({\n          editingLinearElement: {\n            ...editingLinearElement,\n            draggingElementPointIndex,\n            activePointIndex: clickedPointIndex,\n          },\n        });\n      }\n\n      const [deltaX, deltaY] = rotate(\n        scenePointerX - lastX,\n        scenePointerY - lastY,\n        0,\n        0,\n        -element.angle,\n      );\n      const targetPoint = element.points[clickedPointIndex];\n      LinearElementEditor.movePoint(element, clickedPointIndex, [\n        targetPoint[0] + deltaX,\n        targetPoint[1] + deltaY,\n      ]);\n      return true;\n    }\n    return false;\n  }\n\n  static handlePointerUp(\n    editingLinearElement: LinearElementEditor,\n  ): LinearElementEditor {\n    const { elementId, draggingElementPointIndex } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    if (\n      draggingElementPointIndex !== null &&\n      (draggingElementPointIndex === 0 ||\n        draggingElementPointIndex === element.points.length - 1) &&\n      isPathALoop(element.points)\n    ) {\n      LinearElementEditor.movePoint(\n        element,\n        draggingElementPointIndex,\n        draggingElementPointIndex === 0\n          ? element.points[element.points.length - 1]\n          : element.points[0],\n      );\n    }\n    if (draggingElementPointIndex !== null) {\n      return {\n        ...editingLinearElement,\n        draggingElementPointIndex: null,\n      };\n    }\n    return editingLinearElement;\n  }\n\n  static handlePointerDown(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    history: SceneHistory,\n    scenePointerX: number,\n    scenePointerY: number,\n  ): {\n    didAddPoint: boolean;\n    hitElement: ExcalidrawElement | null;\n  } {\n    const ret: ReturnType<typeof LinearElementEditor[\"handlePointerDown\"]> = {\n      didAddPoint: false,\n      hitElement: null,\n    };\n\n    if (!appState.editingLinearElement) {\n      return ret;\n    }\n\n    const { elementId } = appState.editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n\n    if (!element) {\n      return ret;\n    }\n\n    if (event.altKey) {\n      if (!appState.editingLinearElement.lastUncommittedPoint) {\n        mutateElement(element, {\n          points: [\n            ...element.points,\n            LinearElementEditor.createPointAt(\n              element,\n              scenePointerX,\n              scenePointerY,\n            ),\n          ],\n        });\n      }\n      history.resumeRecording();\n      setState({\n        editingLinearElement: {\n          ...appState.editingLinearElement,\n          activePointIndex: element.points.length - 1,\n          lastUncommittedPoint: null,\n        },\n      });\n      ret.didAddPoint = true;\n      return ret;\n    }\n\n    const clickedPointIndex = LinearElementEditor.getPointIndexUnderCursor(\n      element,\n      appState.zoom,\n      scenePointerX,\n      scenePointerY,\n    );\n\n    // if we clicked on a point, set the element as hitElement otherwise\n    //  it would get deselected if the point is outside the hitbox area\n    if (clickedPointIndex > -1) {\n      ret.hitElement = element;\n    }\n\n    setState({\n      editingLinearElement: {\n        ...appState.editingLinearElement,\n        activePointIndex: clickedPointIndex > -1 ? clickedPointIndex : null,\n      },\n    });\n    return ret;\n  }\n\n  static handlePointerMove(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n    editingLinearElement: LinearElementEditor,\n  ): LinearElementEditor {\n    const { elementId, lastUncommittedPoint } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    const { points } = element;\n    const lastPoint = points[points.length - 1];\n\n    if (!event.altKey) {\n      if (lastPoint === lastUncommittedPoint) {\n        LinearElementEditor.movePoint(element, points.length - 1, \"delete\");\n      }\n      return editingLinearElement;\n    }\n\n    const newPoint = LinearElementEditor.createPointAt(\n      element,\n      scenePointerX,\n      scenePointerY,\n    );\n\n    if (lastPoint === lastUncommittedPoint) {\n      LinearElementEditor.movePoint(\n        element,\n        element.points.length - 1,\n        newPoint,\n      );\n    } else {\n      LinearElementEditor.movePoint(element, \"new\", newPoint);\n    }\n\n    return {\n      ...editingLinearElement,\n      lastUncommittedPoint: element.points[element.points.length - 1],\n    };\n  }\n\n  static getPointsGlobalCoordinates(\n    element: NonDeleted<ExcalidrawLinearElement>,\n  ) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    return element.points.map((point) => {\n      let { x, y } = element;\n      [x, y] = rotate(x + point[0], y + point[1], cx, cy, element.angle);\n      return [x, y];\n    });\n  }\n\n  static getPointIndexUnderCursor(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    zoom: AppState[\"zoom\"],\n    x: number,\n    y: number,\n  ) {\n    const pointHandles = this.getPointsGlobalCoordinates(element);\n    let idx = pointHandles.length;\n    // loop from right to left because points on the right are rendered over\n    //  points on the left, thus should take precedence when clicking, if they\n    //  overlap\n    while (--idx > -1) {\n      const point = pointHandles[idx];\n      if (\n        distance2d(x, y, point[0], point[1]) * zoom <\n        // +1px to account for outline stroke\n        this.POINT_HANDLE_SIZE / 2 + 1\n      ) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n\n  static createPointAt(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n  ): Point {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const [rotatedX, rotatedY] = rotate(\n      scenePointerX,\n      scenePointerY,\n      cx,\n      cy,\n      -element.angle,\n    );\n\n    return [rotatedX - element.x, rotatedY - element.y];\n  }\n\n  // element-mutating methods\n  // ---------------------------------------------------------------------------\n\n  /**\n   * Normalizes line points so that the start point is at [0,0]. This is\n   *  expected in various parts of the codebase.\n   */\n  static normalizePoints(element: NonDeleted<ExcalidrawLinearElement>) {\n    const { points } = element;\n\n    const offsetX = points[0][0];\n    const offsetY = points[0][1];\n\n    mutateElement(element, {\n      points: points.map((point, _idx) => {\n        return [point[0] - offsetX, point[1] - offsetY] as const;\n      }),\n      x: element.x + offsetX,\n      y: element.y + offsetY,\n    });\n  }\n\n  static movePoint(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    pointIndex: number | \"new\",\n    targetPosition: Point | \"delete\",\n  ) {\n    const { points } = element;\n\n    // in case we're moving start point, instead of modifying its position\n    //  which would break the invariant of it being at [0,0], we move\n    //  all the other points in the opposite direction by delta to\n    //  offset it. We do the same with actual element.x/y position, so\n    //  this hacks are completely transparent to the user.\n    let offsetX = 0;\n    let offsetY = 0;\n\n    let nextPoints: (readonly [number, number])[];\n    if (targetPosition === \"delete\") {\n      // remove point\n      if (pointIndex === \"new\") {\n        throw new Error(\"invalid args in movePoint\");\n      }\n      nextPoints = points.slice();\n      nextPoints.splice(pointIndex, 1);\n      if (pointIndex === 0) {\n        // if deleting first point, make the next to be [0,0] and recalculate\n        //  positions of the rest with respect to it\n        offsetX = nextPoints[0][0];\n        offsetY = nextPoints[0][1];\n        nextPoints = nextPoints.map((point, idx) => {\n          if (idx === 0) {\n            return [0, 0];\n          }\n          return [point[0] - offsetX, point[1] - offsetY];\n        });\n      }\n    } else if (pointIndex === \"new\") {\n      nextPoints = [...points, targetPosition];\n    } else {\n      const deltaX = targetPosition[0] - points[pointIndex][0];\n      const deltaY = targetPosition[1] - points[pointIndex][1];\n      nextPoints = points.map((point, idx) => {\n        if (idx === pointIndex) {\n          if (idx === 0) {\n            offsetX = deltaX;\n            offsetY = deltaY;\n            return point;\n          }\n          offsetX = 0;\n          offsetY = 0;\n\n          return [point[0] + deltaX, point[1] + deltaY] as const;\n        }\n        return offsetX || offsetY\n          ? ([point[0] - offsetX, point[1] - offsetY] as const)\n          : point;\n      });\n    }\n\n    const nextCoords = getElementPointsCoords(element, nextPoints);\n    const prevCoords = getElementPointsCoords(element, points);\n    const nextCenterX = (nextCoords[0] + nextCoords[2]) / 2;\n    const nextCenterY = (nextCoords[1] + nextCoords[3]) / 2;\n    const prevCenterX = (prevCoords[0] + prevCoords[2]) / 2;\n    const prevCenterY = (prevCoords[1] + prevCoords[3]) / 2;\n    const dX = prevCenterX - nextCenterX;\n    const dY = prevCenterY - nextCenterY;\n    const rotated = rotate(offsetX, offsetY, dX, dY, element.angle);\n\n    mutateElement(element, {\n      points: nextPoints,\n      x: element.x + rotated[0],\n      y: element.y + rotated[1],\n    });\n  }\n}\n","import { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport oc from \"open-color\";\n\nimport { FlooredNumber, AppState } from \"../types\";\nimport {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  ExcalidrawLinearElement,\n  NonDeleted,\n  GroupId,\n} from \"../element/types\";\nimport {\n  getElementAbsoluteCoords,\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n  getElementBounds,\n  getCommonBounds,\n} from \"../element\";\n\nimport { roundRect } from \"./roundRect\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  getScrollBars,\n  SCROLLBAR_COLOR,\n  SCROLLBAR_WIDTH,\n} from \"../scene/scrollbars\";\nimport { getSelectedElements } from \"../scene/selection\";\n\nimport { renderElement, renderElementToSvg } from \"./renderElement\";\nimport { getClientColors } from \"../clients\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  isSelectedViaGroup,\n  getSelectedGroupIds,\n  getElementsInGroup,\n} from \"../groups\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nconst strokeRectWithRotation = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n  fill?: boolean,\n) => {\n  context.translate(cx, cy);\n  context.rotate(angle);\n  if (fill) {\n    context.fillRect(x - cx, y - cy, width, height);\n  }\n  context.strokeRect(x - cx, y - cy, width, height);\n  context.rotate(-angle);\n  context.translate(-cx, -cy);\n};\n\nconst strokeCircle = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) => {\n  context.beginPath();\n  context.arc(x + width / 2, y + height / 2, width / 2, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n};\n\nconst strokeGrid = (\n  context: CanvasRenderingContext2D,\n  gridSize: number,\n  offsetX: number,\n  offsetY: number,\n  width: number,\n  height: number,\n) => {\n  const origStrokeStyle = context.strokeStyle;\n  context.strokeStyle = \"rgba(0,0,0,0.1)\";\n  context.beginPath();\n  for (let x = offsetX; x < offsetX + width + gridSize * 2; x += gridSize) {\n    context.moveTo(x, offsetY - gridSize);\n    context.lineTo(x, offsetY + height + gridSize * 2);\n  }\n  for (let y = offsetY; y < offsetY + height + gridSize * 2; y += gridSize) {\n    context.moveTo(offsetX - gridSize, y);\n    context.lineTo(offsetX + width + gridSize * 2, y);\n  }\n  context.stroke();\n  context.strokeStyle = origStrokeStyle;\n};\n\nconst renderLinearPointHandles = (\n  context: CanvasRenderingContext2D,\n  appState: AppState,\n  sceneState: SceneState,\n  element: NonDeleted<ExcalidrawLinearElement>,\n) => {\n  context.translate(sceneState.scrollX, sceneState.scrollY);\n  const origStrokeStyle = context.strokeStyle;\n  const lineWidth = context.lineWidth;\n  context.lineWidth = 1 / sceneState.zoom;\n\n  LinearElementEditor.getPointsGlobalCoordinates(element).forEach(\n    (point, idx) => {\n      context.strokeStyle = \"red\";\n      context.setLineDash([]);\n      context.fillStyle =\n        appState.editingLinearElement?.activePointIndex === idx\n          ? \"rgba(255, 127, 127, 0.9)\"\n          : \"rgba(255, 255, 255, 0.9)\";\n      const { POINT_HANDLE_SIZE } = LinearElementEditor;\n      strokeCircle(\n        context,\n        point[0] - POINT_HANDLE_SIZE / 2 / sceneState.zoom,\n        point[1] - POINT_HANDLE_SIZE / 2 / sceneState.zoom,\n        POINT_HANDLE_SIZE / sceneState.zoom,\n        POINT_HANDLE_SIZE / sceneState.zoom,\n      );\n    },\n  );\n  context.setLineDash([]);\n  context.lineWidth = lineWidth;\n  context.translate(-sceneState.scrollX, -sceneState.scrollY);\n  context.strokeStyle = origStrokeStyle;\n};\n\nexport const renderScene = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  selectionElement: NonDeletedExcalidrawElement | null,\n  scale: number,\n  rc: RoughCanvas,\n  canvas: HTMLCanvasElement,\n  sceneState: SceneState,\n  // extra options, currently passed by export helper\n  {\n    renderScrollbars = true,\n    renderSelection = true,\n    // Whether to employ render optimizations to improve performance.\n    // Should not be turned on for export operations and similar, because it\n    //  doesn't guarantee pixel-perfect output.\n    renderOptimizations = false,\n    renderGrid = true,\n  }: {\n    renderScrollbars?: boolean;\n    renderSelection?: boolean;\n    renderOptimizations?: boolean;\n    renderGrid?: boolean;\n  } = {},\n) => {\n  if (!canvas) {\n    return { atLeastOneVisibleElement: false };\n  }\n\n  const context = canvas.getContext(\"2d\")!;\n  context.scale(scale, scale);\n\n  // When doing calculations based on canvas width we should used normalized one\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  // Paint background\n  if (typeof sceneState.viewBackgroundColor === \"string\") {\n    const hasTransparence =\n      sceneState.viewBackgroundColor === \"transparent\" ||\n      sceneState.viewBackgroundColor.length === 5 || // #RGBA\n      sceneState.viewBackgroundColor.length === 9 || // #RRGGBBA\n      /(hsla|rgba)\\(/.test(sceneState.viewBackgroundColor);\n    if (hasTransparence) {\n      context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    }\n    const fillStyle = context.fillStyle;\n    context.fillStyle = sceneState.viewBackgroundColor;\n    context.fillRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    context.fillStyle = fillStyle;\n  } else {\n    context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n  }\n\n  // Apply zoom\n  const zoomTranslationX = (-normalizedCanvasWidth * (sceneState.zoom - 1)) / 2;\n  const zoomTranslationY =\n    (-normalizedCanvasHeight * (sceneState.zoom - 1)) / 2;\n  context.translate(zoomTranslationX, zoomTranslationY);\n  context.scale(sceneState.zoom, sceneState.zoom);\n\n  // Grid\n  if (renderGrid && appState.gridSize) {\n    strokeGrid(\n      context,\n      appState.gridSize,\n      -Math.ceil(zoomTranslationX / sceneState.zoom / appState.gridSize) *\n        appState.gridSize +\n        (sceneState.scrollX % appState.gridSize),\n      -Math.ceil(zoomTranslationY / sceneState.zoom / appState.gridSize) *\n        appState.gridSize +\n        (sceneState.scrollY % appState.gridSize),\n      normalizedCanvasWidth / sceneState.zoom,\n      normalizedCanvasHeight / sceneState.zoom,\n    );\n  }\n\n  // Paint visible elements\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(\n      element,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    ),\n  );\n\n  visibleElements.forEach((element) => {\n    renderElement(element, rc, context, renderOptimizations, sceneState);\n    if (\n      isLinearElement(element) &&\n      appState.editingLinearElement &&\n      appState.editingLinearElement.elementId === element.id\n    ) {\n      renderLinearPointHandles(context, appState, sceneState, element);\n    }\n  });\n\n  // Paint selection element\n  if (selectionElement) {\n    renderElement(\n      selectionElement,\n      rc,\n      context,\n      renderOptimizations,\n      sceneState,\n    );\n  }\n\n  // Paint selected elements\n  if (\n    renderSelection &&\n    !appState.multiElement &&\n    !appState.editingLinearElement\n  ) {\n    context.translate(sceneState.scrollX, sceneState.scrollY);\n\n    const selections = elements.reduce((acc, element) => {\n      const selectionColors = [];\n      // local user\n      if (\n        appState.selectedElementIds[element.id] &&\n        !isSelectedViaGroup(appState, element)\n      ) {\n        selectionColors.push(oc.black);\n      }\n      // remote users\n      if (sceneState.remoteSelectedElementIds[element.id]) {\n        selectionColors.push(\n          ...sceneState.remoteSelectedElementIds[element.id].map((socketId) => {\n            const { background } = getClientColors(socketId);\n            return background;\n          }),\n        );\n      }\n      if (selectionColors.length) {\n        const [\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n        ] = getElementAbsoluteCoords(element);\n        acc.push({\n          angle: element.angle,\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n          selectionColors,\n        });\n      }\n      return acc;\n    }, [] as { angle: number; elementX1: number; elementY1: number; elementX2: number; elementY2: number; selectionColors: string[] }[]);\n\n    function addSelectionForGroupId(groupId: GroupId) {\n      const groupElements = getElementsInGroup(elements, groupId);\n      const [elementX1, elementY1, elementX2, elementY2] = getCommonBounds(\n        groupElements,\n      );\n      selections.push({\n        angle: 0,\n        elementX1,\n        elementX2,\n        elementY1,\n        elementY2,\n        selectionColors: [oc.black],\n      });\n    }\n\n    for (const groupId of getSelectedGroupIds(appState)) {\n      // TODO: support multiplayer selected group IDs\n      addSelectionForGroupId(groupId);\n    }\n\n    if (appState.editingGroupId) {\n      addSelectionForGroupId(appState.editingGroupId);\n    }\n\n    selections.forEach(\n      ({\n        angle,\n        elementX1,\n        elementY1,\n        elementX2,\n        elementY2,\n        selectionColors,\n      }) => {\n        const elementWidth = elementX2 - elementX1;\n        const elementHeight = elementY2 - elementY1;\n\n        const initialLineDash = context.getLineDash();\n        const lineWidth = context.lineWidth;\n        const lineDashOffset = context.lineDashOffset;\n        const strokeStyle = context.strokeStyle;\n\n        const dashedLinePadding = 4 / sceneState.zoom;\n        const dashWidth = 8 / sceneState.zoom;\n        const spaceWidth = 4 / sceneState.zoom;\n\n        context.lineWidth = 1 / sceneState.zoom;\n\n        const count = selectionColors.length;\n        for (var i = 0; i < count; ++i) {\n          context.strokeStyle = selectionColors[i];\n          context.setLineDash([\n            dashWidth,\n            spaceWidth + (dashWidth + spaceWidth) * (count - 1),\n          ]);\n          context.lineDashOffset = (dashWidth + spaceWidth) * i;\n          strokeRectWithRotation(\n            context,\n            elementX1 - dashedLinePadding,\n            elementY1 - dashedLinePadding,\n            elementWidth + dashedLinePadding * 2,\n            elementHeight + dashedLinePadding * 2,\n            elementX1 + elementWidth / 2,\n            elementY1 + elementHeight / 2,\n            angle,\n          );\n        }\n        context.lineDashOffset = lineDashOffset;\n        context.strokeStyle = strokeStyle;\n        context.lineWidth = lineWidth;\n        context.setLineDash(initialLineDash);\n      },\n    );\n    context.translate(-sceneState.scrollX, -sceneState.scrollY);\n\n    const locallySelectedElements = getSelectedElements(elements, appState);\n\n    // Paint resize handlers\n    if (locallySelectedElements.length === 1) {\n      context.translate(sceneState.scrollX, sceneState.scrollY);\n      context.fillStyle = oc.white;\n      const handlers = handlerRectangles(\n        locallySelectedElements[0],\n        sceneState.zoom,\n      );\n      Object.keys(handlers).forEach((key) => {\n        const handler = handlers[key as HandlerRectanglesRet];\n        if (handler !== undefined) {\n          const lineWidth = context.lineWidth;\n          context.lineWidth = 1 / sceneState.zoom;\n          if (key === \"rotation\") {\n            strokeCircle(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n            );\n          } else {\n            strokeRectWithRotation(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n              handler[0] + handler[2] / 2,\n              handler[1] + handler[3] / 2,\n              locallySelectedElements[0].angle,\n              true, // fill before stroke\n            );\n          }\n          context.lineWidth = lineWidth;\n        }\n      });\n      context.translate(-sceneState.scrollX, -sceneState.scrollY);\n    } else if (locallySelectedElements.length > 1) {\n      const dashedLinePadding = 4 / sceneState.zoom;\n      context.translate(sceneState.scrollX, sceneState.scrollY);\n      context.fillStyle = oc.white;\n      const [x1, y1, x2, y2] = getCommonBounds(locallySelectedElements);\n      const initialLineDash = context.getLineDash();\n      context.setLineDash([2 / sceneState.zoom]);\n      const lineWidth = context.lineWidth;\n      context.lineWidth = 1 / sceneState.zoom;\n      strokeRectWithRotation(\n        context,\n        x1 - dashedLinePadding,\n        y1 - dashedLinePadding,\n        x2 - x1 + dashedLinePadding * 2,\n        y2 - y1 + dashedLinePadding * 2,\n        (x1 + x2) / 2,\n        (y1 + y2) / 2,\n        0,\n      );\n      context.lineWidth = lineWidth;\n      context.setLineDash(initialLineDash);\n      const handlers = handlerRectanglesFromCoords(\n        [x1, y1, x2, y2],\n        0,\n        sceneState.zoom,\n        undefined,\n        OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n      );\n      Object.keys(handlers).forEach((key) => {\n        const handler = handlers[key as HandlerRectanglesRet];\n        if (handler !== undefined) {\n          const lineWidth = context.lineWidth;\n          context.lineWidth = 1 / sceneState.zoom;\n          strokeRectWithRotation(\n            context,\n            handler[0],\n            handler[1],\n            handler[2],\n            handler[3],\n            handler[0] + handler[2] / 2,\n            handler[1] + handler[3] / 2,\n            0,\n            true, // fill before stroke\n          );\n          context.lineWidth = lineWidth;\n        }\n      });\n      context.translate(-sceneState.scrollX, -sceneState.scrollY);\n    }\n  }\n\n  // Reset zoom\n  context.scale(1 / sceneState.zoom, 1 / sceneState.zoom);\n  context.translate(-zoomTranslationX, -zoomTranslationY);\n\n  // Paint remote pointers\n  for (const clientId in sceneState.remotePointerViewportCoords) {\n    let { x, y } = sceneState.remotePointerViewportCoords[clientId];\n    const username = sceneState.remotePointerUsernames[clientId];\n\n    const width = 9;\n    const height = 14;\n\n    const isOutOfBounds =\n      x < 0 ||\n      x > normalizedCanvasWidth - width ||\n      y < 0 ||\n      y > normalizedCanvasHeight - height;\n\n    x = Math.max(x, 0);\n    x = Math.min(x, normalizedCanvasWidth - width);\n    y = Math.max(y, 0);\n    y = Math.min(y, normalizedCanvasHeight - height);\n\n    const { background, stroke } = getClientColors(clientId);\n\n    const strokeStyle = context.strokeStyle;\n    const fillStyle = context.fillStyle;\n    const globalAlpha = context.globalAlpha;\n    context.strokeStyle = stroke;\n    context.fillStyle = background;\n    if (isOutOfBounds) {\n      context.globalAlpha = 0.2;\n    }\n\n    if (\n      sceneState.remotePointerButton &&\n      sceneState.remotePointerButton[clientId] === \"down\"\n    ) {\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 3;\n      context.strokeStyle = \"#ffffff88\";\n      context.stroke();\n      context.closePath();\n\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 1;\n      context.strokeStyle = stroke;\n      context.stroke();\n      context.closePath();\n    }\n\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x + 1, y + 14);\n    context.lineTo(x + 4, y + 9);\n    context.lineTo(x + 9, y + 10);\n    context.lineTo(x, y);\n    context.fill();\n    context.stroke();\n\n    if (!isOutOfBounds && username) {\n      const offsetX = x + width;\n      const offsetY = y + height;\n      const paddingHorizontal = 4;\n      const paddingVertical = 4;\n      const measure = context.measureText(username);\n      const measureHeight =\n        measure.actualBoundingBoxDescent + measure.actualBoundingBoxAscent;\n\n      // Border\n      context.fillStyle = stroke;\n      context.globalAlpha = globalAlpha;\n      context.fillRect(\n        offsetX - 1,\n        offsetY - 1,\n        measure.width + 2 * paddingHorizontal + 2,\n        measureHeight + 2 * paddingVertical + 2,\n      );\n      // Background\n      context.fillStyle = background;\n      context.fillRect(\n        offsetX,\n        offsetY,\n        measure.width + 2 * paddingHorizontal,\n        measureHeight + 2 * paddingVertical,\n      );\n      context.fillStyle = oc.white;\n      context.fillText(\n        username,\n        offsetX + paddingHorizontal,\n        offsetY + paddingVertical + measure.actualBoundingBoxAscent,\n      );\n    }\n\n    context.strokeStyle = strokeStyle;\n    context.fillStyle = fillStyle;\n    context.globalAlpha = globalAlpha;\n    context.closePath();\n  }\n\n  // Paint scrollbars\n  let scrollBars;\n  if (renderScrollbars) {\n    scrollBars = getScrollBars(\n      elements,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    );\n\n    const fillStyle = context.fillStyle;\n    const strokeStyle = context.strokeStyle;\n    context.fillStyle = SCROLLBAR_COLOR;\n    context.strokeStyle = \"rgba(255,255,255,0.8)\";\n    [scrollBars.horizontal, scrollBars.vertical].forEach((scrollBar) => {\n      if (scrollBar) {\n        roundRect(\n          context,\n          scrollBar.x,\n          scrollBar.y,\n          scrollBar.width,\n          scrollBar.height,\n          SCROLLBAR_WIDTH / 2,\n        );\n      }\n    });\n    context.fillStyle = fillStyle;\n    context.strokeStyle = strokeStyle;\n  }\n\n  context.scale(1 / scale, 1 / scale);\n\n  return { atLeastOneVisibleElement: visibleElements.length > 0, scrollBars };\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  return (\n    x2 + scrollX - viewportWidthDiff / 2 >= 0 &&\n    x1 + scrollX - viewportWidthDiff / 2 <= viewportWidthWithZoom &&\n    y2 + scrollY - viewportHeightDiff / 2 >= 0 &&\n    y1 + scrollY - viewportHeightDiff / 2 <= viewportHeightWithZoom\n  );\n};\n\n// This should be only called for exporting purposes\nexport const renderSceneToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  {\n    offsetX = 0,\n    offsetY = 0,\n  }: {\n    offsetX?: number;\n    offsetY?: number;\n  } = {},\n) => {\n  if (!svgRoot) {\n    return;\n  }\n  // render elements\n  elements.forEach((element) => {\n    if (!element.isDeleted) {\n      renderElementToSvg(\n        element,\n        rsvg,\n        svgRoot,\n        element.x + offsetX,\n        element.y + offsetY,\n      );\n    }\n  });\n};\n","import rough from \"roughjs/bin/rough\";\nimport oc from \"open-color\";\nimport { newTextElement } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element/bounds\";\nimport { renderScene, renderSceneToSvg } from \"../renderer/renderScene\";\nimport { distance, SVG_NS } from \"../utils\";\nimport { normalizeScroll } from \"./scroll\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\nimport { DEFAULT_FONT_FAMILY, DEFAULT_VERTICAL_ALIGN } from \"../constants\";\n\nexport const SVG_EXPORT_TAG = `<!-- svg-source:excalidraw -->`;\n\nexport const exportToCanvas = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    scale?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n  createCanvas: (width: number, height: number) => any = (width, height) => {\n    const tempCanvas = document.createElement(\"canvas\");\n    tempCanvas.width = width * scale;\n    tempCanvas.height = height * scale;\n    return tempCanvas;\n  },\n) => {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate smallest area to fit the contents in\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  const tempCanvas: any = createCanvas(width, height);\n\n  renderScene(\n    sceneElements,\n    appState,\n    null,\n    scale,\n    rough.canvas(tempCanvas),\n    tempCanvas,\n    {\n      viewBackgroundColor: exportBackground ? viewBackgroundColor : null,\n      scrollX: normalizeScroll(-minX + exportPadding),\n      scrollY: normalizeScroll(-minY + exportPadding),\n      zoom: 1,\n      remotePointerViewportCoords: {},\n      remoteSelectedElementIds: {},\n      shouldCacheIgnoreZoom: false,\n      remotePointerUsernames: {},\n    },\n    {\n      renderScrollbars: false,\n      renderSelection: false,\n      renderOptimizations: false,\n      renderGrid: false,\n    },\n  );\n\n  return tempCanvas;\n};\n\nexport const exportToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n): SVGSVGElement => {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate canvas dimensions\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  // initialze SVG root\n  const svgRoot = document.createElementNS(SVG_NS, \"svg\");\n  svgRoot.setAttribute(\"version\", \"1.1\");\n  svgRoot.setAttribute(\"xmlns\", SVG_NS);\n  svgRoot.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n  svgRoot.innerHTML = `\n  ${SVG_EXPORT_TAG}\n  <defs>\n    <style>\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"https://excalidraw.com/FG_Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"https://excalidraw.com/Cascadia.woff2\");\n      }\n    </style>\n  </defs>\n  `;\n\n  // render backgroiund rect\n  if (exportBackground && viewBackgroundColor) {\n    const rect = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"width\", `${width}`);\n    rect.setAttribute(\"height\", `${height}`);\n    rect.setAttribute(\"fill\", viewBackgroundColor);\n    svgRoot.appendChild(rect);\n  }\n\n  const rsvg = rough.svg(svgRoot);\n  renderSceneToSvg(sceneElements, rsvg, svgRoot, {\n    offsetX: -minX + exportPadding,\n    offsetY: -minY + exportPadding,\n  });\n\n  return svgRoot;\n};\n\nconst getWatermarkElement = (maxX: number, maxY: number) => {\n  return newTextElement({\n    text: t(\"labels.madeWithExcalidraw\"),\n    fontSize: 16,\n    fontFamily: DEFAULT_FONT_FAMILY,\n    textAlign: \"right\",\n    verticalAlign: DEFAULT_VERTICAL_ALIGN,\n    x: maxX,\n    y: maxY + 16,\n    strokeColor: oc.gray[5],\n    backgroundColor: \"transparent\",\n    fillStyle: \"hachure\",\n    strokeWidth: 1,\n    strokeStyle: \"solid\",\n    roughness: 1,\n    opacity: 100,\n  });\n};\n","import { ExcalidrawElement } from \"./element/types\";\nimport { newElement, newTextElement } from \"./element\";\nimport { AppState } from \"./types\";\nimport { t } from \"./i18n\";\nimport { DEFAULT_VERTICAL_ALIGN } from \"./constants\";\n\ninterface Spreadsheet {\n  yAxisLabel: string | null;\n  labels: string[] | null;\n  values: number[];\n}\n\ntype ParseSpreadsheetResult =\n  | {\n      type: \"not a spreadsheet\";\n    }\n  | { type: \"spreadsheet\"; spreadsheet: Spreadsheet }\n  | {\n      type: \"malformed spreadsheet\";\n      error: string;\n    };\n\nfunction tryParseNumber(s: string): number | null {\n  const match = /^[$€£¥₩]?([0-9]+(\\.[0-9]+)?)$/.exec(s);\n  if (!match) {\n    return null;\n  }\n  return parseFloat(match[1]);\n}\n\nfunction isNumericColumn(lines: string[][], columnIndex: number) {\n  return lines\n    .slice(1)\n    .every((line) => tryParseNumber(line[columnIndex]) !== null);\n}\n\nfunction tryParseCells(cells: string[][]): ParseSpreadsheetResult {\n  const numCols = cells[0].length;\n\n  if (numCols > 2) {\n    return { type: \"malformed spreadsheet\", error: t(\"charts.tooManyColumns\") };\n  }\n\n  if (numCols === 1) {\n    if (!isNumericColumn(cells, 0)) {\n      return { type: \"not a spreadsheet\" };\n    }\n\n    const hasHeader = tryParseNumber(cells[0][0]) === null;\n    const values = (hasHeader ? cells.slice(1) : cells).map((line) =>\n      tryParseNumber(line[0]),\n    );\n\n    if (values.length < 2) {\n      return { type: \"not a spreadsheet\" };\n    }\n\n    return {\n      type: \"spreadsheet\",\n      spreadsheet: {\n        yAxisLabel: hasHeader ? cells[0][0] : null,\n        labels: null,\n        values: values as number[],\n      },\n    };\n  }\n\n  const valueColumnIndex = isNumericColumn(cells, 0) ? 0 : 1;\n\n  if (!isNumericColumn(cells, valueColumnIndex)) {\n    return {\n      type: \"malformed spreadsheet\",\n      error: t(\"charts.noNumericColumn\"),\n    };\n  }\n\n  const labelColumnIndex = (valueColumnIndex + 1) % 2;\n  const hasHeader = tryParseNumber(cells[0][valueColumnIndex]) === null;\n  const rows = hasHeader ? cells.slice(1) : cells;\n\n  if (rows.length < 2) {\n    return { type: \"not a spreadsheet\" };\n  }\n\n  return {\n    type: \"spreadsheet\",\n    spreadsheet: {\n      yAxisLabel: hasHeader ? cells[0][valueColumnIndex] : null,\n      labels: rows.map((row) => row[labelColumnIndex]),\n      values: rows.map((row) => tryParseNumber(row[valueColumnIndex])!),\n    },\n  };\n}\n\nfunction transposeCells(cells: string[][]) {\n  const nextCells: string[][] = [];\n  for (let col = 0; col < cells[0].length; col++) {\n    const nextCellRow: string[] = [];\n    for (let row = 0; row < cells.length; row++) {\n      nextCellRow.push(cells[row][col]);\n    }\n    nextCells.push(nextCellRow);\n  }\n\n  return nextCells;\n}\n\nexport function tryParseSpreadsheet(text: string): ParseSpreadsheetResult {\n  // copy/paste from excel, in-browser excel, and google sheets is tsv\n  // for now we only accept 2 columns with an optional header\n  const lines = text\n    .trim()\n    .split(\"\\n\")\n    .map((line) => line.trim().split(\"\\t\"));\n\n  if (lines.length === 0) {\n    return { type: \"not a spreadsheet\" };\n  }\n\n  const numColsFirstLine = lines[0].length;\n  const isASpreadsheet = lines.every(\n    (line) => line.length === numColsFirstLine,\n  );\n\n  if (!isASpreadsheet) {\n    return { type: \"not a spreadsheet\" };\n  }\n\n  const result = tryParseCells(lines);\n  if (result.type !== \"spreadsheet\") {\n    const transposedResults = tryParseCells(transposeCells(lines));\n    if (transposedResults.type === \"spreadsheet\") {\n      return transposedResults;\n    }\n  }\n\n  return result;\n}\n\nconst BAR_WIDTH = 32;\nconst BAR_SPACING = 12;\nconst BAR_HEIGHT = 192;\nconst LABEL_SPACING = 3 * BAR_SPACING;\nconst Y_AXIS_LABEL_SPACING = LABEL_SPACING;\nconst ANGLE = 5.87;\n\nexport function renderSpreadsheet(\n  appState: AppState,\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ExcalidrawElement[] {\n  const max = Math.max(...spreadsheet.values);\n  const min = Math.min(0, ...spreadsheet.values);\n  const range = max - min;\n\n  const minYLabel = newTextElement({\n    x: x,\n    y: y + BAR_HEIGHT,\n    strokeColor: appState.currentItemStrokeColor,\n    backgroundColor: appState.currentItemBackgroundColor,\n    fillStyle: appState.currentItemFillStyle,\n    strokeWidth: appState.currentItemStrokeWidth,\n    strokeStyle: appState.currentItemStrokeStyle,\n    roughness: appState.currentItemRoughness,\n    opacity: appState.currentItemOpacity,\n    text: min.toLocaleString(),\n    fontSize: 16,\n    fontFamily: appState.currentItemFontFamily,\n    textAlign: appState.currentItemTextAlign,\n    verticalAlign: DEFAULT_VERTICAL_ALIGN,\n  });\n\n  const maxYLabel = newTextElement({\n    x: x,\n    y: y,\n    strokeColor: appState.currentItemStrokeColor,\n    backgroundColor: appState.currentItemBackgroundColor,\n    fillStyle: appState.currentItemFillStyle,\n    strokeWidth: appState.currentItemStrokeWidth,\n    strokeStyle: appState.currentItemStrokeStyle,\n    roughness: appState.currentItemRoughness,\n    opacity: appState.currentItemOpacity,\n    text: max.toLocaleString(),\n    fontSize: 16,\n    fontFamily: appState.currentItemFontFamily,\n    textAlign: appState.currentItemTextAlign,\n    verticalAlign: DEFAULT_VERTICAL_ALIGN,\n  });\n\n  const bars = spreadsheet.values.map((value, i) => {\n    const valueBarHeight = value - min;\n    const percentBarHeight = valueBarHeight / range;\n    const barHeight = percentBarHeight * BAR_HEIGHT;\n    const barX = i * (BAR_WIDTH + BAR_SPACING) + LABEL_SPACING;\n    const barY = BAR_HEIGHT - barHeight;\n    return newElement({\n      type: \"rectangle\",\n      x: barX + x,\n      y: barY + y,\n      width: BAR_WIDTH,\n      height: barHeight,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: appState.currentItemStrokeStyle,\n      roughness: appState.currentItemRoughness,\n      opacity: appState.currentItemOpacity,\n    });\n  });\n\n  const xLabels =\n    spreadsheet.labels?.map((label, i) => {\n      const labelX =\n        i * (BAR_WIDTH + BAR_SPACING) + LABEL_SPACING + BAR_SPACING;\n      const labelY = BAR_HEIGHT + BAR_SPACING;\n      return newTextElement({\n        text: label.length > 8 ? `${label.slice(0, 5)}...` : label,\n        x: x + labelX,\n        y: y + labelY,\n        strokeColor: appState.currentItemStrokeColor,\n        backgroundColor: appState.currentItemBackgroundColor,\n        fillStyle: appState.currentItemFillStyle,\n        strokeWidth: appState.currentItemStrokeWidth,\n        strokeStyle: appState.currentItemStrokeStyle,\n        roughness: appState.currentItemRoughness,\n        opacity: appState.currentItemOpacity,\n        fontSize: 16,\n        fontFamily: appState.currentItemFontFamily,\n        textAlign: \"center\",\n        verticalAlign: DEFAULT_VERTICAL_ALIGN,\n        width: BAR_WIDTH,\n        angle: ANGLE,\n      });\n    }) || [];\n\n  const yAxisLabel = spreadsheet.yAxisLabel\n    ? newTextElement({\n        text: spreadsheet.yAxisLabel,\n        x: x - Y_AXIS_LABEL_SPACING,\n        y: y + BAR_HEIGHT / 2 - 10,\n        strokeColor: appState.currentItemStrokeColor,\n        backgroundColor: appState.currentItemBackgroundColor,\n        fillStyle: appState.currentItemFillStyle,\n        strokeWidth: appState.currentItemStrokeWidth,\n        strokeStyle: appState.currentItemStrokeStyle,\n        roughness: appState.currentItemRoughness,\n        opacity: appState.currentItemOpacity,\n        fontSize: 20,\n        fontFamily: appState.currentItemFontFamily,\n        textAlign: \"center\",\n        verticalAlign: DEFAULT_VERTICAL_ALIGN,\n        width: BAR_WIDTH,\n        angle: ANGLE,\n      })\n    : null;\n\n  return [...bars, yAxisLabel, minYLabel, maxYLabel, ...xLabels].filter(\n    (element) => element !== null,\n  ) as ExcalidrawElement[];\n}\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"./element/types\";\nimport { getSelectedElements } from \"./scene\";\nimport { AppState } from \"./types\";\nimport { SVG_EXPORT_TAG } from \"./scene/export\";\nimport { tryParseSpreadsheet, renderSpreadsheet } from \"./charts\";\n\nlet CLIPBOARD = \"\";\nlet PREFER_APP_CLIPBOARD = false;\n\nexport const probablySupportsClipboardReadText =\n  \"clipboard\" in navigator && \"readText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardWriteText =\n  \"clipboard\" in navigator && \"writeText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardBlob =\n  \"clipboard\" in navigator &&\n  \"write\" in navigator.clipboard &&\n  \"ClipboardItem\" in window &&\n  \"toBlob\" in HTMLCanvasElement.prototype;\n\nexport const copyToAppClipboard = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  CLIPBOARD = JSON.stringify(getSelectedElements(elements, appState));\n  try {\n    // when copying to in-app clipboard, clear system clipboard so that if\n    //  system clip contains text on paste we know it was copied *after* user\n    //  copied elements, and thus we should prefer the text content.\n    await copyTextToSystemClipboard(null);\n    PREFER_APP_CLIPBOARD = false;\n  } catch {\n    // if clearing system clipboard didn't work, we should prefer in-app\n    //  clipboard even if there's text in system clipboard on paste, because\n    //  we can't be sure of the order of copy operations\n    PREFER_APP_CLIPBOARD = true;\n  }\n};\n\nexport const getAppClipboard = (): {\n  elements?: readonly ExcalidrawElement[];\n} => {\n  if (!CLIPBOARD) {\n    return {};\n  }\n\n  try {\n    const clipboardElements = JSON.parse(CLIPBOARD);\n\n    if (\n      Array.isArray(clipboardElements) &&\n      clipboardElements.length > 0 &&\n      clipboardElements[0].type // need to implement a better check here...\n    ) {\n      return { elements: clipboardElements };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return {};\n};\n\nexport const getClipboardContent = async (\n  appState: AppState,\n  cursorX: number,\n  cursorY: number,\n  event: ClipboardEvent | null,\n): Promise<{\n  text?: string;\n  elements?: readonly ExcalidrawElement[];\n  error?: string;\n}> => {\n  try {\n    const text = event\n      ? event.clipboardData?.getData(\"text/plain\").trim()\n      : probablySupportsClipboardReadText &&\n        (await navigator.clipboard.readText());\n\n    if (text && !PREFER_APP_CLIPBOARD && !text.includes(SVG_EXPORT_TAG)) {\n      const result = tryParseSpreadsheet(text);\n      if (result.type === \"spreadsheet\") {\n        return {\n          elements: renderSpreadsheet(\n            appState,\n            result.spreadsheet,\n            cursorX,\n            cursorY,\n          ),\n        };\n      } else if (result.type === \"malformed spreadsheet\") {\n        return { error: result.error };\n      }\n      return { text };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return getAppClipboard();\n};\n\nexport const copyCanvasToClipboardAsPng = async (canvas: HTMLCanvasElement) =>\n  new Promise((resolve, reject) => {\n    try {\n      canvas.toBlob(async (blob: any) => {\n        try {\n          await navigator.clipboard.write([\n            new window.ClipboardItem({ \"image/png\": blob }),\n          ]);\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n\nexport const copyCanvasToClipboardAsSvg = async (svgroot: SVGSVGElement) => {\n  try {\n    await navigator.clipboard.writeText(svgroot.outerHTML);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const copyTextToSystemClipboard = async (text: string | null) => {\n  let copied = false;\n  if (probablySupportsClipboardWriteText) {\n    try {\n      // NOTE: doesn't work on FF on non-HTTPS domains, or when document\n      //  not focused\n      await navigator.clipboard.writeText(text || \"\");\n      copied = true;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Note that execCommand doesn't allow copying empty strings, so if we're\n  //  clearing clipboard using this API, we must copy at least an empty char\n  if (!copied && !copyTextViaExecCommand(text || \" \")) {\n    throw new Error(\"couldn't copy\");\n  }\n};\n\n// adapted from https://github.com/zenorocha/clipboard.js/blob/ce79f170aa655c408b6aab33c9472e8e4fa52e19/src/clipboard-action.js#L48\nconst copyTextViaExecCommand = (text: string) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const textarea = document.createElement(\"textarea\");\n\n  textarea.style.border = \"0\";\n  textarea.style.padding = \"0\";\n  textarea.style.margin = \"0\";\n  textarea.style.position = \"absolute\";\n  textarea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\";\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  textarea.style.top = `${yPosition}px`;\n  // Prevent zooming on iOS\n  textarea.style.fontSize = \"12pt\";\n\n  textarea.setAttribute(\"readonly\", \"\");\n  textarea.value = text;\n\n  document.body.appendChild(textarea);\n\n  let success = false;\n\n  try {\n    textarea.select();\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    success = document.execCommand(\"copy\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  textarea.remove();\n\n  return success;\n};\n","import {\n  ExcalidrawElement,\n  FontFamily,\n  ExcalidrawSelectionElement,\n} from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { DataState } from \"./types\";\nimport { isInvisiblySmallElement, getNormalizedDimensions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { randomId } from \"../random\";\nimport {\n  FONT_FAMILY,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n  DEFAULT_VERTICAL_ALIGN,\n} from \"../constants\";\n\nconst getFontFamilyByName = (fontFamilyName: string): FontFamily => {\n  for (const [id, fontFamilyString] of Object.entries(FONT_FAMILY)) {\n    if (fontFamilyString.includes(fontFamilyName)) {\n      return parseInt(id) as FontFamily;\n    }\n  }\n  return DEFAULT_FONT_FAMILY;\n};\n\nfunction migrateElementWithProperties<T extends ExcalidrawElement>(\n  element: T,\n  extra: Omit<T, keyof ExcalidrawElement>,\n): T {\n  const base: Pick<T, keyof ExcalidrawElement> = {\n    type: element.type,\n    // all elements must have version > 0 so getDrawingVersion() will pick up\n    //  newly added elements\n    version: element.version || 1,\n    versionNonce: element.versionNonce ?? 0,\n    isDeleted: false,\n    id: element.id || randomId(),\n    fillStyle: element.fillStyle || \"hachure\",\n    strokeWidth: element.strokeWidth || 1,\n    strokeStyle: element.strokeStyle ?? \"solid\",\n    roughness: element.roughness ?? 1,\n    opacity: element.opacity == null ? 100 : element.opacity,\n    angle: element.angle || 0,\n    x: element.x || 0,\n    y: element.y || 0,\n    strokeColor: element.strokeColor,\n    backgroundColor: element.backgroundColor,\n    width: element.width || 0,\n    height: element.height || 0,\n    seed: element.seed ?? 1,\n    groupIds: element.groupIds || [],\n  };\n\n  return {\n    ...base,\n    ...getNormalizedDimensions(base),\n    ...extra,\n  } as T;\n}\n\nconst migrateElement = (\n  element: Exclude<ExcalidrawElement, ExcalidrawSelectionElement>,\n): typeof element => {\n  switch (element.type) {\n    case \"text\":\n      let fontSize = element.fontSize;\n      let fontFamily = element.fontFamily;\n      if (\"font\" in element) {\n        const [fontPx, _fontFamily]: [\n          string,\n          string,\n        ] = (element as any).font.split(\" \");\n        fontSize = parseInt(fontPx, 10);\n        fontFamily = getFontFamilyByName(_fontFamily);\n      }\n      return migrateElementWithProperties(element, {\n        fontSize,\n        fontFamily,\n        text: element.text ?? \"\",\n        baseline: element.baseline,\n        textAlign: element.textAlign || DEFAULT_TEXT_ALIGN,\n        verticalAlign: element.verticalAlign || DEFAULT_VERTICAL_ALIGN,\n      });\n    case \"draw\":\n    case \"line\":\n    case \"arrow\": {\n      return migrateElementWithProperties(element, {\n        points:\n          // migrate old arrow model to new one\n          !Array.isArray(element.points) || element.points.length < 2\n            ? [\n                [0, 0],\n                [element.width, element.height],\n              ]\n            : element.points,\n      });\n    }\n    // generic elements\n    case \"ellipse\":\n    case \"rectangle\":\n    case \"diamond\":\n      return migrateElementWithProperties(element, {});\n\n    // don't use default case so as to catch a missing an element type case\n    //  (we also don't want to throw, but instead return void so we\n    //   filter out these unsupported elements from the restored array)\n  }\n};\n\nexport const restore = (\n  savedElements: readonly ExcalidrawElement[],\n  savedState: AppState | null,\n  opts?: { scrollToContent: boolean },\n): DataState => {\n  const elements = savedElements.reduce((elements, element) => {\n    // filtering out selection, which is legacy, no longer kept in elements,\n    //  and causing issues if retained\n    if (element.type !== \"selection\" && !isInvisiblySmallElement(element)) {\n      const migratedElement = migrateElement(element);\n      if (migratedElement) {\n        elements.push(migratedElement);\n      }\n    }\n    return elements;\n  }, [] as ExcalidrawElement[]);\n\n  if (opts?.scrollToContent && savedState) {\n    savedState = {\n      ...savedState,\n      ...calculateScrollCenter(elements, savedState, null),\n    };\n  }\n\n  return {\n    elements: elements,\n    appState: savedState,\n  };\n};\n","import { getDefaultAppState } from \"../appState\";\nimport { restore } from \"./restore\";\nimport { t } from \"../i18n\";\n\nexport const loadFromBlob = async (blob: any) => {\n  const updateAppState = (contents: string) => {\n    const defaultAppState = getDefaultAppState();\n    let elements = [];\n    let appState = defaultAppState;\n    try {\n      const data = JSON.parse(contents);\n      if (data.type !== \"excalidraw\") {\n        throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n      }\n      elements = data.elements || [];\n      appState = { ...defaultAppState, ...data.appState };\n    } catch {\n      throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n    }\n    return { elements, appState };\n  };\n\n  if (blob.handle) {\n    (window as any).handle = blob.handle;\n  }\n  let contents;\n  if (\"text\" in Blob) {\n    contents = await blob.text();\n  } else {\n    contents = await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsText(blob, \"utf8\");\n      reader.onloadend = () => {\n        if (reader.readyState === FileReader.DONE) {\n          resolve(reader.result as string);\n        }\n      };\n    });\n  }\n\n  const { elements, appState } = updateAppState(contents);\n  return restore(elements, appState, { scrollToContent: true });\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { cleanAppStateForExport } from \"../appState\";\n\nimport { fileOpen, fileSave } from \"browser-nativefs\";\nimport { loadFromBlob } from \"./blob\";\n\nexport const serializeAsJSON = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n): string =>\n  JSON.stringify(\n    {\n      type: \"excalidraw\",\n      version: 2,\n      source: window.location.origin,\n      elements: elements.filter((element) => !element.isDeleted),\n      appState: cleanAppStateForExport(appState),\n    },\n    null,\n    2,\n  );\n\nexport const saveAsJSON = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  fileHandle: any,\n) => {\n  const serialized = serializeAsJSON(elements, appState);\n  const blob = new Blob([serialized], {\n    type: \"application/json\",\n  });\n  const name = `${appState.name}.excalidraw`;\n  (window as any).handle = await fileSave(\n    blob,\n    {\n      fileName: name,\n      description: \"Excalidraw file\",\n      extensions: [\"excalidraw\"],\n    },\n    fileHandle || null,\n  );\n};\n\nexport const loadFromJSON = async () => {\n  const blob = await fileOpen({\n    description: \"Excalidraw files\",\n    extensions: [\"json\", \"excalidraw\"],\n    mimeTypes: [\"application/json\"],\n  });\n  return loadFromBlob(blob);\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { clearAppStateForLocalStorage } from \"../appState\";\nimport { restore } from \"./restore\";\n\nconst LOCAL_STORAGE_KEY = \"excalidraw\";\nconst LOCAL_STORAGE_KEY_STATE = \"excalidraw-state\";\nconst LOCAL_STORAGE_KEY_COLLAB = \"excalidraw-collab\";\n\nexport const saveUsernameToLocalStorage = (username: string) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_COLLAB,\n      JSON.stringify({ username }),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const restoreUsernameFromLocalStorage = (): string | null => {\n  try {\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY_COLLAB);\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n};\n\nexport const saveToLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY,\n      JSON.stringify(elements.filter((element) => !element.isDeleted)),\n    );\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const restoreFromLocalStorage = () => {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(LOCAL_STORAGE_KEY);\n    savedState = localStorage.getItem(LOCAL_STORAGE_KEY_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements = [];\n  if (savedElements) {\n    try {\n      elements = JSON.parse(savedElements);\n    } catch {\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = JSON.parse(savedState) as AppState;\n      // If we're retrieving from local storage, we should not be collaborating\n      appState.isCollaborating = false;\n      appState.collaborators = new Map();\n    } catch {\n      // Do nothing because appState is already null\n    }\n  }\n  return restore(elements, appState);\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getDefaultAppState } from \"../appState\";\n\nimport { AppState } from \"../types\";\nimport { exportToCanvas, exportToSvg } from \"../scene/export\";\nimport { fileSave } from \"browser-nativefs\";\n\nimport { t } from \"../i18n\";\nimport {\n  copyCanvasToClipboardAsPng,\n  copyCanvasToClipboardAsSvg,\n} from \"../clipboard\";\nimport { serializeAsJSON } from \"./json\";\n\nimport { ExportType } from \"../scene/types\";\nimport { restore } from \"./restore\";\nimport { restoreFromLocalStorage } from \"./localStorage\";\n\nexport { loadFromBlob } from \"./blob\";\nexport { saveAsJSON, loadFromJSON } from \"./json\";\nexport { saveToLocalStorage } from \"./localStorage\";\n\nconst BACKEND_GET = process.env.REACT_APP_BACKEND_V1_GET_URL;\n\nconst BACKEND_V2_POST = process.env.REACT_APP_BACKEND_V2_POST_URL;\nconst BACKEND_V2_GET = process.env.REACT_APP_BACKEND_V2_GET_URL;\n\nexport const SOCKET_SERVER = process.env.REACT_APP_SOCKET_SERVER_URL;\n\nexport type EncryptedData = {\n  data: ArrayBuffer;\n  iv: Uint8Array;\n};\n\nexport type SocketUpdateDataSource = {\n  SCENE_INIT: {\n    type: \"SCENE_INIT\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  SCENE_UPDATE: {\n    type: \"SCENE_UPDATE\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  MOUSE_LOCATION: {\n    type: \"MOUSE_LOCATION\";\n    payload: {\n      socketID: string;\n      pointerCoords: { x: number; y: number };\n      button: \"down\" | \"up\";\n      selectedElementIds: AppState[\"selectedElementIds\"];\n      username: string;\n    };\n  };\n};\n\nexport type SocketUpdateDataIncoming =\n  | SocketUpdateDataSource[keyof SocketUpdateDataSource]\n  | {\n      type: \"INVALID_RESPONSE\";\n    };\n\n// TODO: Defined globally, since file handles aren't yet serializable.\n// Once `FileSystemFileHandle` can be serialized, make this\n// part of `AppState`.\n(window as any).handle = null;\n\nconst byteToHex = (byte: number): string => `0${byte.toString(16)}`.slice(-2);\n\nconst generateRandomID = async () => {\n  const arr = new Uint8Array(10);\n  window.crypto.getRandomValues(arr);\n  return Array.from(arr, byteToHex).join(\"\");\n};\n\nconst generateEncryptionKey = async () => {\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  return (await window.crypto.subtle.exportKey(\"jwk\", key)).k;\n};\n\nconst createIV = () => {\n  const arr = new Uint8Array(12);\n  return window.crypto.getRandomValues(arr);\n};\n\nexport const getCollaborationLinkData = (link: string) => {\n  if (link.length === 0) {\n    return;\n  }\n  const hash = new URL(link).hash;\n  return hash.match(/^#room=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/);\n};\n\nexport const generateCollaborationLink = async () => {\n  const id = await generateRandomID();\n  const key = await generateEncryptionKey();\n  return `${window.location.origin}${window.location.pathname}#room=${id},${key}`;\n};\n\nconst getImportedKey = (key: string, usage: KeyUsage) =>\n  window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      alg: \"A128GCM\",\n      ext: true,\n      k: key,\n      key_ops: [\"encrypt\", \"decrypt\"],\n      kty: \"oct\",\n    },\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    false, // extractable\n    [usage],\n  );\n\nexport const encryptAESGEM = async (\n  data: Uint8Array,\n  key: string,\n): Promise<EncryptedData> => {\n  const importedKey = await getImportedKey(key, \"encrypt\");\n  const iv = createIV();\n  return {\n    data: await window.crypto.subtle.encrypt(\n      {\n        name: \"AES-GCM\",\n        iv,\n      },\n      importedKey,\n      data,\n    ),\n    iv,\n  };\n};\n\nexport const decryptAESGEM = async (\n  data: ArrayBuffer,\n  key: string,\n  iv: Uint8Array,\n): Promise<SocketUpdateDataIncoming> => {\n  try {\n    const importedKey = await getImportedKey(key, \"decrypt\");\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: iv,\n      },\n      importedKey,\n      data,\n    );\n\n    const decodedData = new TextDecoder(\"utf-8\").decode(\n      new Uint8Array(decrypted) as any,\n    );\n    return JSON.parse(decodedData);\n  } catch (error) {\n    window.alert(t(\"alerts.decryptFailed\"));\n    console.error(error);\n  }\n  return {\n    type: \"INVALID_RESPONSE\",\n  };\n};\n\nexport const exportToBackend = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const json = serializeAsJSON(elements, appState);\n  const encoded = new TextEncoder().encode(json);\n\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  // The iv is set to 0. We are never going to reuse the same key so we don't\n  // need to have an iv. (I hope that's correct...)\n  const iv = new Uint8Array(12);\n  // We use symmetric encryption. AES-GCM is the recommended algorithm and\n  // includes checks that the ciphertext has not been modified by an attacker.\n  const encrypted = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv,\n    },\n    key,\n    encoded,\n  );\n  // We use jwk encoding to be able to extract just the base64 encoded key.\n  // We will hardcode the rest of the attributes when importing back the key.\n  const exportedKey = await window.crypto.subtle.exportKey(\"jwk\", key);\n\n  try {\n    const response = await fetch(BACKEND_V2_POST, {\n      method: \"POST\",\n      body: encrypted,\n    });\n    const json = await response.json();\n    if (json.id) {\n      const url = new URL(window.location.href);\n      // We need to store the key (and less importantly the id) as hash instead\n      // of queryParam in order to never send it to the server\n      url.hash = `json=${json.id},${exportedKey.k!}`;\n      const urlString = url.toString();\n\n      window.prompt(`🔒${t(\"alerts.uploadedSecurly\")}`, urlString);\n    } else {\n      window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n    }\n  } catch (error) {\n    console.error(error);\n    window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n  }\n};\n\nexport const importFromBackend = async (\n  id: string | null,\n  privateKey: string | undefined,\n) => {\n  let elements: readonly ExcalidrawElement[] = [];\n  let appState: AppState = getDefaultAppState();\n\n  try {\n    const response = await fetch(\n      privateKey ? `${BACKEND_V2_GET}${id}` : `${BACKEND_GET}${id}.json`,\n    );\n    if (!response.ok) {\n      window.alert(t(\"alerts.importBackendFailed\"));\n      return restore(elements, appState, { scrollToContent: true });\n    }\n    let data;\n    if (privateKey) {\n      const buffer = await response.arrayBuffer();\n      const key = await getImportedKey(privateKey, \"decrypt\");\n      const iv = new Uint8Array(12);\n      const decrypted = await window.crypto.subtle.decrypt(\n        {\n          name: \"AES-GCM\",\n          iv: iv,\n        },\n        key,\n        buffer,\n      );\n      // We need to convert the decrypted array buffer to a string\n      const string = new window.TextDecoder(\"utf-8\").decode(\n        new Uint8Array(decrypted) as any,\n      );\n      data = JSON.parse(string);\n    } else {\n      // Legacy format\n      data = await response.json();\n    }\n\n    elements = data.elements || elements;\n    appState = { ...appState, ...data.appState };\n  } catch (error) {\n    window.alert(t(\"alerts.importBackendFailed\"));\n    console.error(error);\n  } finally {\n    return restore(elements, appState, { scrollToContent: true });\n  }\n};\n\nexport const exportCanvas = async (\n  type: ExportType,\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    name,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    name: string;\n    scale?: number;\n    shouldAddWatermark: boolean;\n  },\n) => {\n  if (elements.length === 0) {\n    return window.alert(t(\"alerts.cannotExportEmptyCanvas\"));\n  }\n  if (type === \"svg\" || type === \"clipboard-svg\") {\n    const tempSvg = exportToSvg(elements, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      shouldAddWatermark,\n    });\n    if (type === \"svg\") {\n      await fileSave(new Blob([tempSvg.outerHTML], { type: \"image/svg+xml\" }), {\n        fileName: `${name}.svg`,\n      });\n      return;\n    } else if (type === \"clipboard-svg\") {\n      copyCanvasToClipboardAsSvg(tempSvg);\n      return;\n    }\n  }\n\n  const tempCanvas = exportToCanvas(elements, appState, {\n    exportBackground,\n    viewBackgroundColor,\n    exportPadding,\n    scale,\n    shouldAddWatermark,\n  });\n  tempCanvas.style.display = \"none\";\n  document.body.appendChild(tempCanvas);\n\n  if (type === \"png\") {\n    const fileName = `${name}.png`;\n    tempCanvas.toBlob(async (blob: any) => {\n      if (blob) {\n        await fileSave(blob, {\n          fileName: fileName,\n        });\n      }\n    });\n  } else if (type === \"clipboard\") {\n    try {\n      copyCanvasToClipboardAsPng(tempCanvas);\n    } catch {\n      window.alert(t(\"alerts.couldNotCopyToClipboard\"));\n    }\n  } else if (type === \"backend\") {\n    const appState = getDefaultAppState();\n    if (exportBackground) {\n      appState.viewBackgroundColor = viewBackgroundColor;\n    }\n    exportToBackend(elements, appState);\n  }\n\n  // clean up the DOM\n  if (tempCanvas !== canvas) {\n    tempCanvas.remove();\n  }\n};\n\nexport const loadScene = async (id: string | null, privateKey?: string) => {\n  let data;\n  if (id != null) {\n    // the private key is used to decrypt the content from the server, take\n    // extra care not to leak it\n    data = await importFromBackend(id, privateKey);\n    window.history.replaceState({}, \"Excalidraw\", window.location.origin);\n  } else {\n    data = restoreFromLocalStorage();\n  }\n\n  return {\n    elements: data.elements,\n    appState: data.appState && { ...data.appState },\n    commitToHistory: false,\n  };\n};\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\n\nimport \"./ContextMenu.scss\";\n\ntype ContextMenuOption = {\n  label: string;\n  action(): void;\n};\n\ntype Props = {\n  options: ContextMenuOption[];\n  onCloseRequest?(): void;\n  top: number;\n  left: number;\n};\n\nconst ContextMenu = ({ options, onCloseRequest, top, left }: Props) => (\n  <Popover\n    onCloseRequest={onCloseRequest}\n    top={top}\n    left={left}\n    fitInViewport={true}\n  >\n    <ul\n      className=\"context-menu\"\n      onContextMenu={(event) => event.preventDefault()}\n    >\n      {options.map((option, idx) => (\n        <li key={idx} onClick={onCloseRequest}>\n          <ContextMenuOption {...option} />\n        </li>\n      ))}\n    </ul>\n  </Popover>\n);\n\nconst ContextMenuOption = ({ label, action }: ContextMenuOption) => (\n  <button className=\"context-menu-option\" onClick={action}>\n    {label}\n  </button>\n);\n\nlet contextMenuNode: HTMLDivElement;\nconst getContextMenuNode = (): HTMLDivElement => {\n  if (contextMenuNode) {\n    return contextMenuNode;\n  }\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  return (contextMenuNode = div);\n};\n\ntype ContextMenuParams = {\n  options: (ContextMenuOption | false | null | undefined)[];\n  top: number;\n  left: number;\n};\n\nconst handleClose = () => {\n  unmountComponentAtNode(getContextMenuNode());\n};\n\nexport default {\n  push(params: ContextMenuParams) {\n    const options = Array.of<ContextMenuOption>();\n    params.options.forEach((option) => {\n      if (option) {\n        options.push(option);\n      }\n    });\n    if (options.length) {\n      render(\n        <ContextMenu\n          top={params.top}\n          left={params.left}\n          options={options}\n          onCloseRequest={handleClose}\n        />,\n        getContextMenuNode(),\n      );\n    }\n  },\n};\n","import { encryptAESGEM } from \"../data\";\n\nimport { SocketUpdateData } from \"../types\";\nimport { BROADCAST, SCENE } from \"../constants\";\nimport App from \"./App\";\n\nclass Portal {\n  app: App;\n  socket: SocketIOClient.Socket | null = null;\n  socketInitialized: boolean = false; // we don't want the socket to emit any updates until it is fully initialized\n  roomID: string | null = null;\n  roomKey: string | null = null;\n\n  constructor(app: App) {\n    this.app = app;\n  }\n\n  open(socket: SocketIOClient.Socket, id: string, key: string) {\n    this.socket = socket;\n    this.roomID = id;\n    this.roomKey = key;\n\n    // Initialize socket listeners (moving from App)\n    this.socket.on(\"init-room\", () => {\n      if (this.socket) {\n        this.socket.emit(\"join-room\", this.roomID);\n\n        this.app.restoreUserName();\n      }\n    });\n    this.socket.on(\"new-user\", async (_socketID: string) => {\n      this.app.broadcastScene(SCENE.INIT, /* syncAll */ true);\n    });\n    this.socket.on(\"room-user-change\", (clients: string[]) => {\n      this.app.setCollaborators(clients);\n    });\n  }\n\n  close() {\n    if (!this.socket) {\n      return;\n    }\n    this.socket.close();\n    this.socket = null;\n    this.roomID = null;\n    this.roomKey = null;\n  }\n\n  isOpen() {\n    return !!(\n      this.socketInitialized &&\n      this.socket &&\n      this.roomID &&\n      this.roomKey\n    );\n  }\n\n  async _broadcastSocketData(\n    data: SocketUpdateData,\n    volatile: boolean = false,\n  ) {\n    if (this.isOpen()) {\n      const json = JSON.stringify(data);\n      const encoded = new TextEncoder().encode(json);\n      const encrypted = await encryptAESGEM(encoded, this.roomKey!);\n      this.socket!.emit(\n        volatile ? BROADCAST.SERVER_VOLATILE : BROADCAST.SERVER,\n        this.roomID,\n        encrypted.data,\n        encrypted.iv,\n      );\n    }\n  }\n}\nexport default Portal;\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// We inline font-awesome icons in order to save on js size rather than including the font awesome react library\nexport const SHAPES = [\n  {\n    icon: (\n      // fa-mouse-pointer\n      <svg viewBox=\"0 0 320 512\" className=\"\">\n        <path d=\"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\" />\n      </svg>\n    ),\n    value: \"selection\",\n    key: \"s\",\n  },\n  {\n    icon: (\n      // fa-square\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\" />\n      </svg>\n    ),\n    value: \"rectangle\",\n    key: \"r\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 223.646 223.646\">\n        <path d=\"M111.823 0L16.622 111.823 111.823 223.646 207.025 111.823z\" />\n      </svg>\n    ),\n    value: \"diamond\",\n    key: \"d\",\n  },\n  {\n    icon: (\n      // fa-circle\n      <svg viewBox=\"0 0 512 512\">\n        <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />\n      </svg>\n    ),\n    value: \"ellipse\",\n    key: \"e\",\n  },\n  {\n    icon: (\n      // fa-long-arrow-alt-right\n      <svg viewBox=\"0 0 448 512\" className=\"rtl-mirror\">\n        <path d=\"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\" />\n      </svg>\n    ),\n    value: \"arrow\",\n    key: \"a\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 6 6\">\n        <line\n          x1=\"0\"\n          y1=\"3\"\n          x2=\"6\"\n          y2=\"3\"\n          stroke={oc.black}\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    ),\n    value: \"line\",\n    key: \"l\",\n  },\n  {\n    icon: (\n      // fa-pencil\n      <svg viewBox=\"0 0 512 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n        ></path>\n      </svg>\n    ),\n    value: \"draw\",\n    key: \"x\",\n  },\n  {\n    icon: (\n      // fa-font\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M432 416h-23.41L277.88 53.69A32 32 0 0 0 247.58 32h-47.16a32 32 0 0 0-30.3 21.69L39.41 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-19.58l23.3-64h152.56l23.3 64H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM176.85 272L224 142.51 271.15 272z\" />\n      </svg>\n    ),\n    value: \"text\",\n    key: \"t\",\n  },\n] as const;\n\nexport const shapesShortcutKeys = SHAPES.map((shape, index) => [\n  shape.key,\n  (index + 1).toString(),\n]).flat(1);\n\nexport const findShapeByKey = (key: string) =>\n  SHAPES.find((shape, index) => {\n    return shape.key === key.toLowerCase() || key === (index + 1).toString();\n  })?.value || \"selection\";\n","import { AppState } from \"./types\";\nimport { ExcalidrawElement } from \"./element/types\";\nimport { isLinearElement } from \"./element/typeChecks\";\nimport { deepCopyElement } from \"./element/newElement\";\n\nexport interface HistoryEntry {\n  appState: ReturnType<typeof clearAppStatePropertiesForHistory>;\n  elements: ExcalidrawElement[];\n}\n\ninterface DehydratedExcalidrawElement {\n  id: string;\n  versionNonce: number;\n}\n\ninterface DehydratedHistoryEntry {\n  appState: string;\n  elements: DehydratedExcalidrawElement[];\n}\n\nconst clearAppStatePropertiesForHistory = (appState: AppState) => {\n  return {\n    selectedElementIds: appState.selectedElementIds,\n    viewBackgroundColor: appState.viewBackgroundColor,\n    editingLinearElement: appState.editingLinearElement,\n    editingGroupId: appState.editingGroupId,\n    name: appState.name,\n  };\n};\n\nexport class SceneHistory {\n  private elementCache = new Map<string, Map<number, ExcalidrawElement>>();\n  private recording: boolean = true;\n  private stateHistory: DehydratedHistoryEntry[] = [];\n  private redoStack: DehydratedHistoryEntry[] = [];\n  private lastEntry: HistoryEntry | null = null;\n\n  private hydrateHistoryEntry({\n    appState,\n    elements,\n  }: DehydratedHistoryEntry): HistoryEntry {\n    return {\n      appState: JSON.parse(appState),\n      elements: elements.map((dehydratedExcalidrawElement) => {\n        const element = this.elementCache\n          .get(dehydratedExcalidrawElement.id)\n          ?.get(dehydratedExcalidrawElement.versionNonce);\n        if (!element) {\n          throw new Error(\n            `Element not found: ${dehydratedExcalidrawElement.id}:${dehydratedExcalidrawElement.versionNonce}`,\n          );\n        }\n        return element;\n      }),\n    };\n  }\n\n  private dehydrateHistoryEntry({\n    appState,\n    elements,\n  }: HistoryEntry): DehydratedHistoryEntry {\n    return {\n      appState: JSON.stringify(appState),\n      elements: elements.map((element: ExcalidrawElement) => {\n        if (!this.elementCache.has(element.id)) {\n          this.elementCache.set(element.id, new Map());\n        }\n        const versions = this.elementCache.get(element.id)!;\n        if (!versions.has(element.versionNonce)) {\n          versions.set(element.versionNonce, deepCopyElement(element));\n        }\n        return {\n          id: element.id,\n          versionNonce: element.versionNonce,\n        };\n      }),\n    };\n  }\n\n  getSnapshotForTest() {\n    return {\n      recording: this.recording,\n      stateHistory: this.stateHistory.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n      redoStack: this.redoStack.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n    };\n  }\n\n  clear() {\n    this.stateHistory.length = 0;\n    this.redoStack.length = 0;\n    this.lastEntry = null;\n    this.elementCache.clear();\n  }\n\n  private generateEntry = (\n    appState: AppState,\n    elements: readonly ExcalidrawElement[],\n  ): DehydratedHistoryEntry =>\n    this.dehydrateHistoryEntry({\n      appState: clearAppStatePropertiesForHistory(appState),\n      elements: elements.reduce((elements, element) => {\n        if (\n          isLinearElement(element) &&\n          appState.multiElement &&\n          appState.multiElement.id === element.id\n        ) {\n          // don't store multi-point arrow if still has only one point\n          if (\n            appState.multiElement &&\n            appState.multiElement.id === element.id &&\n            element.points.length < 2\n          ) {\n            return elements;\n          }\n\n          elements.push({\n            ...element,\n            // don't store last point if not committed\n            points:\n              element.lastCommittedPoint !==\n              element.points[element.points.length - 1]\n                ? element.points.slice(0, -1)\n                : element.points,\n          });\n        } else {\n          elements.push(element);\n        }\n        return elements;\n      }, [] as Mutable<typeof elements>),\n    });\n\n  shouldCreateEntry(nextEntry: HistoryEntry): boolean {\n    const { lastEntry } = this;\n\n    if (!lastEntry) {\n      return true;\n    }\n\n    if (nextEntry.elements.length !== lastEntry.elements.length) {\n      return true;\n    }\n\n    // loop from right to left as changes are likelier to happen on new elements\n    for (let i = nextEntry.elements.length - 1; i > -1; i--) {\n      const prev = nextEntry.elements[i];\n      const next = lastEntry.elements[i];\n      if (\n        !prev ||\n        !next ||\n        prev.id !== next.id ||\n        prev.versionNonce !== next.versionNonce\n      ) {\n        return true;\n      }\n    }\n\n    // note: this is safe because entry's appState is guaranteed no excess props\n    let key: keyof typeof nextEntry.appState;\n    for (key in nextEntry.appState) {\n      if (key === \"editingLinearElement\") {\n        if (\n          nextEntry.appState[key]?.elementId ===\n          lastEntry.appState[key]?.elementId\n        ) {\n          continue;\n        }\n      }\n      if (key === \"selectedElementIds\") {\n        continue;\n      }\n      if (nextEntry.appState[key] !== lastEntry.appState[key]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  pushEntry(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    const newEntryDehydrated = this.generateEntry(appState, elements);\n    const newEntry: HistoryEntry = this.hydrateHistoryEntry(newEntryDehydrated);\n\n    if (newEntry) {\n      if (!this.shouldCreateEntry(newEntry)) {\n        return;\n      }\n\n      this.stateHistory.push(newEntryDehydrated);\n      this.lastEntry = newEntry;\n      // As a new entry was pushed, we invalidate the redo stack\n      this.clearRedoStack();\n    }\n  }\n\n  clearRedoStack() {\n    this.redoStack.splice(0, this.redoStack.length);\n  }\n\n  redoOnce(): HistoryEntry | null {\n    if (this.redoStack.length === 0) {\n      return null;\n    }\n\n    const entryToRestore = this.redoStack.pop();\n\n    if (entryToRestore !== undefined) {\n      this.stateHistory.push(entryToRestore);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  undoOnce(): HistoryEntry | null {\n    if (this.stateHistory.length === 1) {\n      return null;\n    }\n\n    const currentEntry = this.stateHistory.pop();\n\n    const entryToRestore = this.stateHistory[this.stateHistory.length - 1];\n\n    if (currentEntry !== undefined) {\n      this.redoStack.push(currentEntry);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  /**\n   * Updates history's `lastEntry` to latest app state. This is necessary\n   *  when doing undo/redo which itself doesn't commit to history, but updates\n   *  app state in a way that would break `shouldCreateEntry` which relies on\n   *  `lastEntry` to reflect last comittable history state.\n   * We can't update `lastEntry` from within history when calling undo/redo\n   *  because the action potentially mutates appState/elements before storing\n   *  it.\n   */\n  setCurrentState(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    this.lastEntry = this.hydrateHistoryEntry(\n      this.generateEntry(appState, elements),\n    );\n  }\n\n  // Suspicious that this is called so many places. Seems error-prone.\n  resumeRecording() {\n    this.recording = true;\n  }\n\n  record(state: AppState, elements: readonly ExcalidrawElement[]) {\n    if (this.recording) {\n      this.pushEntry(state, elements);\n      this.recording = false;\n    }\n  }\n}\n\nexport const createHistory: () => { history: SceneHistory } = () => {\n  const history = new SceneHistory();\n  return { history };\n};\n","import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.css\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\ntype Props = {\n  top?: number;\n  left?: number;\n  children?: React.ReactNode;\n  onCloseRequest?(event: PointerEvent): void;\n  fitInViewport?: boolean;\n};\n\nexport const Popover = ({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false,\n}: Props) => {\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  // ensure the popover doesn't overflow the viewport\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current) {\n      const element = popoverRef.current;\n      const { x, y, width, height } = element.getBoundingClientRect();\n\n      const viewportWidth = window.innerWidth;\n      if (x + width > viewportWidth) {\n        element.style.left = `${viewportWidth - width}px`;\n      }\n      const viewportHeight = window.innerHeight;\n      if (y + height > viewportHeight) {\n        element.style.top = `${viewportHeight - height}px`;\n      }\n    }\n  }, [fitInViewport]);\n\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = (event: PointerEvent) => {\n        if (!popoverRef.current?.contains(event.target as Node)) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n\n  return (\n    <div className=\"popover\" style={{ top: top, left: left }} ref={popoverRef}>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Action,\n  ActionsManagerInterface,\n  UpdaterFn,\n  ActionFilterFn,\n  ActionName,\n} from \"./types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\nimport { globalSceneState } from \"../scene\";\n\nexport class ActionManager implements ActionsManagerInterface {\n  actions = {} as ActionsManagerInterface[\"actions\"];\n\n  updater: UpdaterFn;\n\n  getAppState: () => AppState;\n\n  getElementsIncludingDeleted: () => readonly ExcalidrawElement[];\n\n  constructor(\n    updater: UpdaterFn,\n    getAppState: () => AppState,\n    getElementsIncludingDeleted: () => ReturnType<\n      typeof globalSceneState[\"getElementsIncludingDeleted\"]\n    >,\n  ) {\n    this.updater = updater;\n    this.getAppState = getAppState;\n    this.getElementsIncludingDeleted = getElementsIncludingDeleted;\n  }\n\n  registerAction(action: Action) {\n    this.actions[action.name] = action;\n  }\n\n  registerAll(actions: readonly Action[]) {\n    actions.forEach((action) => this.registerAction(action));\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const data = Object.values(this.actions)\n      .sort((a, b) => (b.keyPriority || 0) - (a.keyPriority || 0))\n      .filter(\n        (action) =>\n          action.keyTest &&\n          action.keyTest(\n            event,\n            this.getAppState(),\n            this.getElementsIncludingDeleted(),\n          ),\n      );\n\n    if (data.length === 0) {\n      return false;\n    }\n\n    event.preventDefault();\n    this.updater(\n      data[0].perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n    return true;\n  }\n\n  executeAction(action: Action) {\n    this.updater(\n      action.perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n  }\n\n  getContextMenuItems(actionFilter: ActionFilterFn = (action) => action) {\n    return Object.values(this.actions)\n      .filter(actionFilter)\n      .filter((action) => \"contextItemLabel\" in action)\n      .sort(\n        (a, b) =>\n          (a.contextMenuOrder !== undefined ? a.contextMenuOrder : 999) -\n          (b.contextMenuOrder !== undefined ? b.contextMenuOrder : 999),\n      )\n      .map((action) => ({\n        label: action.contextItemLabel ? t(action.contextItemLabel) : \"\",\n        action: () => {\n          this.updater(\n            action.perform(\n              this.getElementsIncludingDeleted(),\n              this.getAppState(),\n              null,\n            ),\n          );\n        },\n      }));\n  }\n\n  // Id is an attribute that we can use to pass in data like keys.\n  // This is needed for dynamically generated action components\n  // like the user list. We can use this key to extract more\n  // data from app state. This is an alternative to generic prop hell!\n  renderAction = (name: ActionName, id?: string) => {\n    if (this.actions[name] && \"PanelComponent\" in this.actions[name]) {\n      const action = this.actions[name];\n      const PanelComponent = action.PanelComponent!;\n      const updateData = (formState?: any) => {\n        this.updater(\n          action.perform(\n            this.getElementsIncludingDeleted(),\n            this.getAppState(),\n            formState,\n          ),\n        );\n      };\n\n      return (\n        <PanelComponent\n          elements={this.getElementsIncludingDeleted()}\n          appState={this.getAppState()}\n          updateData={updateData}\n          id={id}\n        />\n      );\n    }\n\n    return null;\n  };\n}\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype ToolIconSize = \"s\" | \"m\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolIconSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  hidden?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  className?: string;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n\n      checked: boolean;\n      onChange?(): void;\n    });\n\nconst DEFAULT_SIZE: ToolIconSize = \"m\";\n\nexport const ToolButton = React.forwardRef((props: ToolButtonProps, ref) => {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return (\n      <button\n        className={`ToolIcon_type_button ${\n          !props.hidden ? \"ToolIcon\" : \"\"\n        } ${sizeCn}${props.selected ? \" ToolIcon--selected\" : \"\"} ${\n          props.className\n        } ${\n          props.visible && !props.hidden\n            ? \"ToolIcon_type_button--show\"\n            : \"ToolIcon_type_button--hide\"\n        }`}\n        hidden={props.hidden}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type=\"button\"\n        onClick={props.onClick}\n        ref={innerRef}\n      >\n        <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n          {props.icon || props.label}\n        </div>\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">{props[\"aria-label\"]}</div>\n        )}\n        {props.children}\n      </button>\n    );\n  }\n\n  return (\n    <label className=\"ToolIcon\" title={props.title}>\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        data-testid={props[\"data-testid\"]}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n\nToolButton.defaultProps = {\n  visible: true,\n  className: \"\",\n};\n","//\n// All icons are imported from https://fontawesome.com/icons?d=gallery\n// Icons are under the license https://fontawesome.com/license\n//\n\nimport React from \"react\";\n\nimport oc from \"open-color\";\n\nconst ACTIVE_ELEMENT_COLOR = oc.orange[4];\ntype Opts = { width?: number; height?: number; mirror?: true } & React.SVGProps<\n  SVGSVGElement\n>;\n\nconst createIcon = (d: string | React.ReactNode, opts: number | Opts = 512) => {\n  const { width = 512, height = width, mirror, style } =\n    typeof opts === \"number\" ? ({ width: opts } as Opts) : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      className={mirror && \"rtl-mirror\"}\n      style={style}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nexport const link = createIcon(\n  \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\",\n  { mirror: true },\n);\n\nexport const save = createIcon(\n  \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\",\n  { width: 448, height: 512 },\n);\n\nexport const saveAs = createIcon(\n  \"M252 54L203 8a28 27 0 00-20-8H28C12 0 0 12 0 27v195c0 15 12 26 28 26h204c15 0 28-11 28-26V73a28 27 0 00-8-19zM130 213c-21 0-37-16-37-36 0-19 16-35 37-35 20 0 37 16 37 35 0 20-17 36-37 36zm56-169v56c0 4-4 6-7 6H44c-4 0-7-2-7-6V42c0-4 3-7 7-7h133l4 2 3 2a7 7 0 012 5z M296 201l87 95-188 205-78 9c-10 1-19-8-18-20l9-84zm141-14l-41-44a31 31 0 00-46 0l-38 41 87 95 38-42c13-14 13-36 0-50z\",\n  { width: 448, height: 512 },\n);\n\nexport const load = createIcon(\n  \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const clipboard = createIcon(\n  \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\",\n  { width: 384, height: 512 },\n);\n\nexport const trash = createIcon(\n  \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\",\n  { width: 448, height: 512 },\n);\n\nexport const palette = createIcon(\n  \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\",\n);\n\nexport const exportFile = createIcon(\n  \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const zoomIn = createIcon(\n  \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const zoomOut = createIcon(\n  \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const done = createIcon(\n  \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\",\n  { mirror: true },\n);\n\nexport const menu = createIcon(\n  \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\",\n);\n\nexport const undo = createIcon(\n  \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\",\n  { mirror: true },\n);\n\nexport const redo = createIcon(\n  \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\",\n  { mirror: true },\n);\n\n// Icon imported form Storybook\n// Storybook is licensed under MIT https://github.com/storybookjs/storybook/blob/next/LICENSE\nexport const resetZoom = createIcon(\n  <path\n    stroke=\"currentColor\"\n    strokeWidth=\"40\"\n    fill=\"currentColor\"\n    d=\"M148 560a318 318 0 0 0 522 110 316 316 0 0 0 0-450 316 316 0 0 0-450 0c-11 11-21 22-30 34v4h47c25 0 46 21 46 46s-21 45-46 45H90c-13 0-25-6-33-14-9-9-14-20-14-33V156c0-25 20-45 45-45s45 20 45 45v32l1 1a401 401 0 0 1 623 509l212 212a42 42 0 0 1-59 59L698 757A401 401 0 0 1 65 570a42 42 0 0 1 83-10z\"\n  />,\n  { width: 1024 },\n);\n\nexport const bringForward = createIcon(\n  <>\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H16v8H8v4.444C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendBackward = createIcon(\n  <>\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H9.556C8.696 8 8 8.697 8 9.556v10.888C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const bringToFront = createIcon(\n  <>\n    <path\n      d=\"M13 21a1 1 0 001 1h7a1 1 0 001-1v-7a1 1 0 00-1-1h-3v5h-5v3zM11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h3V6h5V3z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendToBack = createIcon(\n  <>\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h8V3zM22 14a1 1 0 00-1-1h-7a1 1 0 00-1 1v7a1 1 0 001 1h8v-8z\"\n      stroke={oc.black}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const users = createIcon(\n  \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\",\n  { width: 640, height: 512, mirror: true },\n);\n\nexport const start = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\",\n);\n\nexport const stop = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\",\n);\n\nexport const close = createIcon(\n  \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\",\n  { width: 352, height: 512 },\n);\n\nexport const back = createIcon(\n  \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\",\n  { width: 320, height: 512, style: { marginLeft: \"-0.2rem\" }, mirror: true },\n);\n\nexport const clone = createIcon(\n  \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\",\n  { mirror: true },\n);\n\n// modified https://feathericons.com/?query=shield\nexport const shield = createIcon(\n  \"M11.553 22.894a.998.998 0 00.894 0s3.037-1.516 5.465-4.097C19.616 16.987 21 14.663 21 12V5a1 1 0 00-.649-.936l-8-3a.998.998 0 00-.702 0l-8 3A1 1 0 003 5v7c0 2.663 1.384 4.987 3.088 6.797 2.428 2.581 5.465 4.097 5.465 4.097zm-1.303-8.481l6.644-6.644a.856.856 0 111.212 1.212l-7.25 7.25a.856.856 0 01-1.212 0l-3.75-3.75a.856.856 0 111.212-1.212l3.144 3.144z\",\n  { width: 24 },\n);\n","import { Action } from \"./types\";\n\nexport let actions: readonly Action[] = [];\n\nexport const register = (action: Action): Action => {\n  actions = actions.concat(action);\n  return action;\n};\n","import { isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport React from \"react\";\nimport { trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getElementsInGroup } from \"../groups\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\nconst deleteSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return {\n    elements: elements.map((el) => {\n      if (appState.selectedElementIds[el.id]) {\n        return newElementWith(el, { isDeleted: true });\n      }\n      return el;\n    }),\n    appState: {\n      ...appState,\n      selectedElementIds: {},\n    },\n  };\n};\n\nfunction handleGroupEditingState(\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n): AppState {\n  if (appState.editingGroupId) {\n    const siblingElements = getElementsInGroup(\n      getNonDeletedElements(elements),\n      appState.editingGroupId!,\n    );\n    if (siblingElements.length) {\n      return {\n        ...appState,\n        selectedElementIds: { [siblingElements[0].id]: true },\n      };\n    }\n  }\n  return appState;\n}\n\nexport const actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  perform: (elements, appState) => {\n    if (\n      appState.editingLinearElement?.activePointIndex != null &&\n      appState.editingLinearElement?.activePointIndex > -1\n    ) {\n      const { elementId } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n      if (element) {\n        // case: deleting last point\n        if (element.points.length < 2) {\n          const nextElements = elements.filter((el) => el.id !== element.id);\n          const nextAppState = handleGroupEditingState(appState, nextElements);\n\n          return {\n            elements: nextElements,\n            appState: {\n              ...nextAppState,\n              editingLinearElement: null,\n            },\n            commitToHistory: false,\n          };\n        }\n\n        LinearElementEditor.movePoint(\n          element,\n          appState.editingLinearElement.activePointIndex,\n          \"delete\",\n        );\n\n        return {\n          elements: elements,\n          appState: {\n            ...appState,\n            editingLinearElement: {\n              ...appState.editingLinearElement,\n              activePointIndex:\n                appState.editingLinearElement.activePointIndex > 0\n                  ? appState.editingLinearElement.activePointIndex - 1\n                  : 0,\n            },\n          },\n          commitToHistory: true,\n        };\n      }\n    }\n\n    let {\n      elements: nextElements,\n      appState: nextAppState,\n    } = deleteSelectedElements(elements, appState);\n\n    nextAppState = handleGroupEditingState(nextAppState, nextElements);\n\n    return {\n      elements: nextElements,\n      appState: {\n        ...nextAppState,\n        elementType: \"selection\",\n        multiElement: null,\n      },\n      commitToHistory: isSomeElementSelected(\n        getNonDeletedElements(elements),\n        appState,\n      ),\n    };\n  },\n  contextItemLabel: \"labels.delete\",\n  contextMenuOrder: 3,\n  keyTest: (event) => event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"labels.delete\")}\n      aria-label={t(\"labels.delete\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","const swap = <T>(elements: T[], indexA: number, indexB: number) => {\n  const element = elements[indexA];\n  elements[indexA] = elements[indexB];\n  elements[indexB] = element;\n};\n\nexport const moveOneLeft = <T>(elements: T[], indicesToMove: number[]) => {\n  indicesToMove.sort((a: number, b: number) => a - b);\n  let isSorted = true;\n  // We go from left to right to avoid overriding the wrong elements\n  indicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === i;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index - 1, index);\n  });\n\n  return elements;\n};\n\nexport const moveOneRight = <T>(elements: T[], indicesToMove: number[]) => {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n  let isSorted = true;\n\n  // We go from right to left to avoid overriding the wrong elements\n  reversedIndicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === elements.length - i - 1;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index + 1, index);\n  });\n  return elements;\n};\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [c, f, a, b, d, e, g]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the right.\n//\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//          -> ->\n//\n// which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//\n// Now, we need to move all the elements from marker 1 to the beginning by two (not one)\n// slots to the right, which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//  ---|--^  ^\n//     ------|\n//\n// which gives us\n//\n//        |1       |0\n// [_, _, a, b, d, e, g]\n//\n// At this point, we can fill back the leftmost elements with the array we saved at\n// the beginning\n//\n//        |1       |0\n// [c, f, a, b, d, e, g]\n//\n// And we are done!\nexport const moveAllLeft = <T>(elements: T[], indicesToMove: number[]) => {\n  indicesToMove.sort((a: number, b: number) => a - b);\n\n  // Copy the elements to move\n  const leftMostElements = indicesToMove.map((index) => elements[index]);\n\n  const reversedIndicesToMove = indicesToMove\n    // We go from right to left to avoid overriding elements.\n    .reverse()\n    // We add 0 for the final marker\n    .concat([0]);\n\n  reversedIndicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the right (i - 1) to the current one (index)\n    for (let pos = reversedIndicesToMove[i - 1] - 1; pos >= index; --pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos + i] = elements[pos];\n    }\n  });\n\n  // The final step\n  leftMostElements.forEach((element, i) => {\n    elements[i] = element;\n  });\n\n  return elements;\n};\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [a, b, d, e, g, c, f]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the left.\n//\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//          <- <-\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//\n// Now, we need to move all the elements from marker 1 to the end by two (not one)\n// slots to the left, which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//              ^------\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, g, _, _]\n//\n// At this point, we can fill back the rightmost elements with the array we saved at\n// the beginning\n//\n//        |0       |1\n// [a, b, d, e, g, c, f]\n//\n// And we are done!\nexport const moveAllRight = <T>(elements: T[], indicesToMove: number[]) => {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n\n  // Copy the elements to move\n  const rightMostElements = reversedIndicesToMove.map(\n    (index) => elements[index],\n  );\n\n  indicesToMove = reversedIndicesToMove\n    // We go from left to right to avoid overriding elements.\n    .reverse()\n    // We last element index for the final marker\n    .concat([elements.length]);\n\n  indicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the left (i - 1) to the current one (index)\n    for (let pos = indicesToMove[i - 1] + 1; pos < index; ++pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos - i] = elements[pos];\n    }\n  });\n\n  // The final step\n  rightMostElements.forEach((element, i) => {\n    elements[elements.length - i - 1] = element;\n  });\n\n  return elements;\n};\n","import React from \"react\";\nimport {\n  moveOneLeft,\n  moveOneRight,\n  moveAllLeft,\n  moveAllRight,\n} from \"../zindex\";\nimport { KEYS, isDarwin } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport {\n  sendBackward,\n  bringToFront,\n  sendToBack,\n  bringForward,\n} from \"../components/icons\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\n\nconst getElementIndices = (\n  direction: \"left\" | \"right\",\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const selectedIndices: number[] = [];\n  let deletedIndicesCache: number[] = [];\n\n  const cb = (element: ExcalidrawElement, index: number) => {\n    if (element.isDeleted) {\n      // we want to build an array of deleted elements that are preceeding\n      //  a selected element so that we move them together\n      deletedIndicesCache.push(index);\n    } else {\n      if (appState.selectedElementIds[element.id]) {\n        selectedIndices.push(...deletedIndicesCache, index);\n      }\n      // always empty cache of deleted elements after either pushing a group\n      //  of selected/deleted elements, of after encountering non-deleted elem\n      deletedIndicesCache = [];\n    }\n  };\n\n  // sending back → select contiguous deleted elements that are to the left of\n  //  selected element(s)\n  if (direction === \"left\") {\n    let i = -1;\n    const len = elements.length;\n    while (++i < len) {\n      cb(elements[i], i);\n    }\n    // moving to front → loop from right to left so that we don't need to\n    //  backtrack when gathering deleted elements\n  } else {\n    let i = elements.length;\n    while (--i > -1) {\n      cb(elements[i], i);\n    }\n  }\n  // sort in case we were gathering indexes from right to left\n  return selectedIndices.sort();\n};\n\nconst moveElements = (\n  func: typeof moveOneLeft,\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const _elements = elements.slice();\n  const direction =\n    func === moveOneLeft || func === moveAllLeft ? \"left\" : \"right\";\n  const indices = getElementIndices(direction, _elements, appState);\n  return func(_elements, indices);\n};\n\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendBackward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketLeft\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendBackward\")} — ${getShortcutKey(\"CtrlOrCmd+[\")}`}\n    >\n      {sendBackward}\n    </button>\n  ),\n});\n\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringForward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketRight\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.bringForward\")} — ${getShortcutKey(\"CtrlOrCmd+]\")}`}\n    >\n      {bringForward}\n    </button>\n  ),\n});\n\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendToBack\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketLeft\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketLeft\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendToBack\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+[\")\n      }`}\n    >\n      {sendToBack}\n    </button>\n  ),\n});\n\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringToFront\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketRight\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketRight\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={(event) => updateData(null)}\n      title={`${t(\"labels.bringToFront\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+]\")\n      }`}\n    >\n      {bringToFront}\n    </button>\n  ),\n});\n","import React from \"react\";\n\nexport const ButtonSelect = <T extends Object>({\n  options,\n  value,\n  onChange,\n  group,\n}: {\n  options: { value: T; text: string }[];\n  value: T | null;\n  onChange: (value: T) => void;\n  group: string;\n}) => (\n  <div className=\"buttonList\">\n    {options.map((option) => (\n      <label\n        key={option.text}\n        className={value === option.value ? \"active\" : \"\"}\n      >\n        <input\n          type=\"radio\"\n          name={group}\n          onChange={() => onChange(option.value)}\n          checked={value === option.value ? true : false}\n        />\n        {option.text}\n      </label>\n    ))}\n  </div>\n);\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { selectGroupsForSelectedElements } from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    return {\n      appState: selectGroupsForSelectedElements(\n        {\n          ...appState,\n          editingGroupId: null,\n          selectedElementIds: elements.reduce((map, element) => {\n            if (!element.isDeleted) {\n              map[element.id] = true;\n            }\n            return map;\n          }, {} as any),\n        },\n        getNonDeletedElements(elements),\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"a\",\n});\n","import React from \"react\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { duplicateElement, getNonDeletedElements } from \"../element\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { clone } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\n\nexport const actionDuplicateSelection = register({\n  name: \"duplicateSelection\",\n  perform: (elements, appState) => {\n    const groupIdMap = new Map();\n    return {\n      appState,\n      elements: elements.reduce(\n        (acc: Array<ExcalidrawElement>, element: ExcalidrawElement) => {\n          if (appState.selectedElementIds[element.id]) {\n            const newElement = duplicateElement(\n              appState.editingGroupId,\n              groupIdMap,\n              element,\n              {\n                x: element.x + 10,\n                y: element.y + 10,\n              },\n            );\n            appState.selectedElementIds[newElement.id] = true;\n            delete appState.selectedElementIds[element.id];\n            return acc.concat([element, newElement]);\n          }\n          return acc.concat(element);\n        },\n        [],\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.duplicateSelection\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"d\",\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={clone}\n      title={`${t(\"labels.duplicateSelection\")} — ${getShortcutKey(\n        \"CtrlOrCmd+D\",\n      )}`}\n      aria-label={t(\"labels.duplicateSelection\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./ColorPicker.scss\";\nimport { KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\n\nconst isValidColor = (color: string) => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nconst getColor = (color: string): string | null => {\n  if (color === \"transparent\") {\n    return color;\n  }\n\n  return isValidColor(color)\n    ? color\n    : isValidColor(`#${color}`)\n    ? `#${color}`\n    : null;\n};\n\n// This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\nconst keyBindings = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n].flat();\n\nconst Picker = ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n}: {\n  colors: string[];\n  color: string | null;\n  onChange: (color: string) => void;\n  onClose: () => void;\n  label: string;\n  showInput: boolean;\n}) => {\n  const firstItem = React.useRef<HTMLButtonElement>();\n  const activeItem = React.useRef<HTMLButtonElement>();\n  const gallery = React.useRef<HTMLDivElement>();\n  const colorInput = React.useRef<HTMLInputElement>();\n\n  React.useEffect(() => {\n    // After the component is first mounted\n    // focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.TAB) {\n      const { activeElement } = document;\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          colorInput.current?.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (activeElement === colorInput.current) {\n          firstItem.current?.focus();\n          event.preventDefault();\n        }\n      }\n    } else if (\n      event.key === KEYS.ARROW_RIGHT ||\n      event.key === KEYS.ARROW_LEFT ||\n      event.key === KEYS.ARROW_UP ||\n      event.key === KEYS.ARROW_DOWN\n    ) {\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        gallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = gallery!.current!.children.length - (showInput ? 1 : 0);\n        const nextIndex =\n          event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT)\n            ? (index + 1) % length\n            : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT)\n            ? (length + index - 1) % length\n            : event.key === KEYS.ARROW_DOWN\n            ? (index + 5) % length\n            : event.key === KEYS.ARROW_UP\n            ? (length + index - 5) % length\n            : index;\n        (gallery!.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (\n      keyBindings.includes(event.key.toLowerCase()) &&\n      !isWritableElement(event.target)\n    ) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      (gallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return (\n    <div\n      className=\"color-picker\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={t(\"labels.colorPicker\")}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"color-picker-triangle color-picker-triangle-shadow\"></div>\n      <div className=\"color-picker-triangle\"></div>\n      <div\n        className=\"color-picker-content\"\n        ref={(el) => {\n          if (el) {\n            gallery.current = el;\n          }\n        }}\n      >\n        {colors.map((_color, i) => (\n          <button\n            className=\"color-picker-swatch\"\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(_color);\n            }}\n            title={`${_color} — ${keyBindings[i].toUpperCase()}`}\n            aria-label={_color}\n            aria-keyshortcuts={keyBindings[i]}\n            style={{ color: _color }}\n            key={_color}\n            ref={(el) => {\n              if (el && i === 0) {\n                firstItem.current = el;\n              }\n              if (el && _color === color) {\n                activeItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(_color);\n            }}\n          >\n            {_color === \"transparent\" ? (\n              <div className=\"color-picker-transparent\"></div>\n            ) : undefined}\n            <span className=\"color-picker-keybinding\">{keyBindings[i]}</span>\n          </button>\n        ))}\n        {showInput && (\n          <ColorInput\n            color={color}\n            label={label}\n            onChange={(color) => {\n              onChange(color);\n            }}\n            ref={colorInput}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ColorInput = React.forwardRef(\n  (\n    {\n      color,\n      onChange,\n      label,\n    }: {\n      color: string | null;\n      onChange: (color: string) => void;\n      label: string;\n    },\n    ref,\n  ) => {\n    const [innerValue, setInnerValue] = React.useState(color);\n    const inputRef = React.useRef(null);\n\n    React.useEffect(() => {\n      setInnerValue(color);\n    }, [color]);\n\n    React.useImperativeHandle(ref, () => inputRef.current);\n\n    const changeColor = React.useCallback(\n      (inputValue: string) => {\n        const value = inputValue.toLowerCase();\n        const color = getColor(value);\n        if (color) {\n          onChange(color);\n        }\n        setInnerValue(value);\n      },\n      [onChange],\n    );\n\n    return (\n      <label className=\"color-input-container\">\n        <div className=\"color-picker-hash\">#</div>\n        <input\n          spellCheck={false}\n          className=\"color-picker-input\"\n          aria-label={label}\n          onChange={(event) => changeColor(event.target.value)}\n          value={(innerValue || \"\").replace(/^#/, \"\")}\n          onBlur={() => setInnerValue(color)}\n          ref={inputRef}\n        />\n      </label>\n    );\n  },\n);\n\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label,\n}: {\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  color: string | null;\n  onChange: (color: string) => void;\n  label: string;\n}) => {\n  const [isActive, setActive] = React.useState(false);\n  const pickerButton = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <div>\n      <div className=\"color-picker-control-container\">\n        <button\n          className=\"color-picker-label-swatch\"\n          aria-label={label}\n          style={\n            color\n              ? ({ \"--swatch-color\": color } as React.CSSProperties)\n              : undefined\n          }\n          onClick={() => setActive(!isActive)}\n          ref={pickerButton}\n        />\n        <ColorInput\n          color={color}\n          label={label}\n          onChange={(color) => {\n            onChange(color);\n          }}\n        />\n      </div>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <Popover\n            onCloseRequest={(event) =>\n              event.target !== pickerButton.current && setActive(false)\n            }\n          >\n            <Picker\n              colors={colors[type]}\n              color={color || null}\n              onChange={(changedColor) => {\n                onChange(changedColor);\n              }}\n              onClose={() => {\n                setActive(false);\n                pickerButton.current?.focus();\n              }}\n              label={label}\n              showInput={false}\n            />\n          </Popover>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  TextAlign,\n  FontFamily,\n} from \"../element/types\";\nimport {\n  getCommonAttributeOfSelectedElements,\n  isSomeElementSelected,\n} from \"../scene\";\nimport { ButtonSelect } from \"../components/ButtonSelect\";\nimport {\n  isTextElement,\n  redrawTextBoundingBox,\n  getNonDeletedElements,\n} from \"../element\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { AppState } from \"../../src/types\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_FAMILY } from \"../constants\";\n\nconst changeProperty = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  callback: (element: ExcalidrawElement) => ExcalidrawElement,\n) => {\n  return elements.map((element) => {\n    if (\n      appState.selectedElementIds[element.id] ||\n      element.id === appState.editingElement?.id\n    ) {\n      return callback(element);\n    }\n    return element;\n  });\n};\n\nconst getFormValue = function <T>(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n  defaultValue?: T,\n): T | null {\n  const editingElement = appState.editingElement;\n  const nonDeletedElements = getNonDeletedElements(elements);\n  return (\n    (editingElement && getAttribute(editingElement)) ??\n    (isSomeElementSelected(nonDeletedElements, appState)\n      ? getCommonAttributeOfSelectedElements(\n          nonDeletedElements,\n          appState,\n          getAttribute,\n        )\n      : defaultValue) ??\n    null\n  );\n};\n\nexport const actionChangeStrokeColor = register({\n  name: \"changeStrokeColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.stroke\")}</h3>\n      <ColorPicker\n        type=\"elementStroke\"\n        label={t(\"labels.stroke\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeColor,\n          appState.currentItemStrokeColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeBackgroundColor = register({\n  name: \"changeBackgroundColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          backgroundColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.background\")}</h3>\n      <ColorPicker\n        type=\"elementBackground\"\n        label={t(\"labels.background\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.backgroundColor,\n          appState.currentItemBackgroundColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeFillStyle = register({\n  name: \"changeFillStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          fillStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemFillStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fill\")}</legend>\n      <ButtonSelect\n        options={[\n          { value: \"hachure\", text: t(\"labels.hachure\") },\n          { value: \"cross-hatch\", text: t(\"labels.crossHatch\") },\n          { value: \"solid\", text: t(\"labels.solid\") },\n        ]}\n        group=\"fill\"\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.fillStyle,\n          appState.currentItemFillStyle,\n        )}\n        onChange={(value) => {\n          updateData(value);\n        }}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeWidth = register({\n  name: \"changeStrokeWidth\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeWidth: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeWidth: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeWidth\")}</legend>\n      <ButtonSelect\n        group=\"stroke-width\"\n        options={[\n          { value: 1, text: t(\"labels.thin\") },\n          { value: 2, text: t(\"labels.bold\") },\n          { value: 4, text: t(\"labels.extraBold\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeWidth,\n          appState.currentItemStrokeWidth,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSloppiness = register({\n  name: \"changeSloppiness\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          roughness: value,\n        }),\n      ),\n      appState: { ...appState, currentItemRoughness: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.sloppiness\")}</legend>\n      <ButtonSelect\n        group=\"sloppiness\"\n        options={[\n          { value: 0, text: t(\"labels.architect\") },\n          { value: 1, text: t(\"labels.artist\") },\n          { value: 2, text: t(\"labels.cartoonist\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.roughness,\n          appState.currentItemRoughness,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeStyle = register({\n  name: \"changeStrokeStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeStyle\")}</legend>\n      <ButtonSelect\n        group=\"strokeStyle\"\n        options={[\n          { value: \"solid\", text: t(\"labels.strokeStyle_solid\") },\n          { value: \"dashed\", text: t(\"labels.strokeStyle_dashed\") },\n          { value: \"dotted\", text: t(\"labels.strokeStyle_dotted\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeStyle,\n          appState.currentItemStrokeStyle,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeOpacity = register({\n  name: \"changeOpacity\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          opacity: value,\n        }),\n      ),\n      appState: { ...appState, currentItemOpacity: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <label className=\"control-label\">\n      {t(\"labels.opacity\")}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"10\"\n        onChange={(event) => updateData(+event.target.value)}\n        onWheel={(event) => {\n          event.stopPropagation();\n          const target = event.target as HTMLInputElement;\n          const STEP = 10;\n          const MAX = 100;\n          const MIN = 0;\n          const value = +target.value;\n\n          if (event.deltaY < 0 && value < MAX) {\n            updateData(value + STEP);\n          } else if (event.deltaY > 0 && value > MIN) {\n            updateData(value - STEP);\n          }\n        }}\n        value={\n          getFormValue(\n            elements,\n            appState,\n            (element) => element.opacity,\n            appState.currentItemOpacity,\n          ) ?? undefined\n        }\n      />\n    </label>\n  ),\n});\n\nexport const actionChangeFontSize = register({\n  name: \"changeFontSize\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontSize: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontSize: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontSize\")}</legend>\n      <ButtonSelect\n        group=\"font-size\"\n        options={[\n          { value: 16, text: t(\"labels.small\") },\n          { value: 20, text: t(\"labels.medium\") },\n          { value: 28, text: t(\"labels.large\") },\n          { value: 36, text: t(\"labels.veryLarge\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.fontSize,\n          appState.currentItemFontSize || DEFAULT_FONT_SIZE,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeFontFamily = register({\n  name: \"changeFontFamily\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontFamily: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontFamily: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const options: { value: FontFamily; text: string }[] = [\n      { value: 1, text: t(\"labels.handDrawn\") },\n      { value: 2, text: t(\"labels.normal\") },\n      { value: 3, text: t(\"labels.code\") },\n    ];\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fontFamily\")}</legend>\n        <ButtonSelect<FontFamily | false>\n          group=\"font-family\"\n          options={options}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => isTextElement(element) && element.fontFamily,\n            appState.currentItemFontFamily || DEFAULT_FONT_FAMILY,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeTextAlign = register({\n  name: \"changeTextAlign\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            textAlign: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemTextAlign: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.textAlign\")}</legend>\n      <ButtonSelect<TextAlign | false>\n        group=\"text-align\"\n        options={[\n          { value: \"left\", text: t(\"labels.left\") },\n          { value: \"center\", text: t(\"labels.center\") },\n          { value: \"right\", text: t(\"labels.right\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.textAlign,\n          appState.currentItemTextAlign,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n","import React from \"react\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { getDefaultAppState } from \"../appState\";\nimport { trash, zoomIn, zoomOut, resetZoom } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { getNormalizedZoom, normalizeScroll } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { AppState, FlooredNumber } from \"../types\";\nimport { getCommonBounds } from \"../element\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, viewBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={(color) => updateData(color)}\n        />\n      </div>\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState: AppState) => {\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        username: appState.username,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"buttons.clearReset\")}\n      aria-label={t(\"buttons.clearReset\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          // TODO: Make this part of `AppState`.\n          (window as any).handle = null;\n          updateData(null);\n        }\n      }}\n    />\n  ),\n});\n\nconst ZOOM_STEP = 0.1;\n\nconst KEY_CODES = {\n  MINUS: \"Minus\",\n  EQUAL: \"Equal\",\n  ONE: \"Digit1\",\n  ZERO: \"Digit0\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_ZERO: \"Numpad0\",\n};\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom + ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.EQUAL || event.code === KEY_CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom - ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.MINUS || event.code === KEY_CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: 1,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={resetZoom}\n      title={t(\"buttons.resetZoom\")}\n      aria-label={t(\"buttons.resetZoom\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.ZERO || event.code === KEY_CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nconst calculateZoom = (\n  commonBounds: number[],\n  currentZoom: number,\n  {\n    scrollX,\n    scrollY,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n  },\n): number => {\n  const { innerWidth, innerHeight } = window;\n  const [x, y] = commonBounds;\n  const zoomX = -innerWidth / (2 * scrollX + 2 * x - innerWidth);\n  const zoomY = -innerHeight / (2 * scrollY + 2 * y - innerHeight);\n  const margin = 0.01;\n  let newZoom;\n\n  if (zoomX < zoomY) {\n    newZoom = zoomX - margin;\n  } else if (zoomY <= zoomX) {\n    newZoom = zoomY - margin;\n  } else {\n    newZoom = currentZoom;\n  }\n\n  if (newZoom <= 0.1) {\n    return 0.1;\n  }\n  if (newZoom >= 1) {\n    return 1;\n  }\n\n  return newZoom;\n};\n\nexport const actionZoomToFit = register({\n  name: \"zoomToFit\",\n  perform: (elements, appState) => {\n    const nonDeletedElements = elements.filter((element) => !element.isDeleted);\n    const commonBounds = getCommonBounds(nonDeletedElements);\n    const [x1, y1, x2, y2] = commonBounds;\n    const centerX = (x1 + x2) / 2;\n    const centerY = (y1 + y2) / 2;\n    const scrollX = normalizeScroll(window.innerWidth / 2 - centerX);\n    const scrollY = normalizeScroll(window.innerHeight / 2 - centerY);\n    const zoom = calculateZoom(commonBounds, appState.zoom, {\n      scrollX,\n      scrollY,\n    });\n\n    return {\n      appState: {\n        ...appState,\n        scrollX,\n        scrollY,\n        zoom,\n      },\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) =>\n    event.code === KEY_CODES.ONE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n","import { KEYS } from \"../keys\";\nimport { isInvisiblySmallElement } from \"../element\";\nimport { resetCursor } from \"../utils\";\nimport React from \"react\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { done } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { isPathALoop } from \"../math\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\nexport const actionFinalize = register({\n  name: \"finalize\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      const { elementId } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n\n      if (element) {\n        return {\n          elements:\n            element.points.length < 2 || isInvisiblySmallElement(element)\n              ? elements.filter((el) => el.id !== element.id)\n              : undefined,\n          appState: {\n            ...appState,\n            editingLinearElement: null,\n          },\n          commitToHistory: true,\n        };\n      }\n    }\n\n    let newElements = elements;\n    if (window.document.activeElement instanceof HTMLElement) {\n      window.document.activeElement.blur();\n    }\n\n    const multiPointElement = appState.multiElement\n      ? appState.multiElement\n      : appState.editingElement?.type === \"draw\"\n      ? appState.editingElement\n      : null;\n\n    if (multiPointElement) {\n      // pen and mouse have hover\n      if (\n        multiPointElement.type !== \"draw\" &&\n        appState.lastPointerDownWith !== \"touch\"\n      ) {\n        const { points, lastCommittedPoint } = multiPointElement;\n        if (\n          !lastCommittedPoint ||\n          points[points.length - 1] !== lastCommittedPoint\n        ) {\n          mutateElement(multiPointElement, {\n            points: multiPointElement.points.slice(0, -1),\n          });\n        }\n      }\n      if (isInvisiblySmallElement(multiPointElement)) {\n        newElements = newElements.slice(0, -1);\n      }\n\n      // If the multi point line closes the loop,\n      // set the last point to first point.\n      // This ensures that loop remains closed at different scales.\n      if (\n        multiPointElement.type === \"line\" ||\n        multiPointElement.type === \"draw\"\n      ) {\n        if (isPathALoop(multiPointElement.points)) {\n          const linePoints = multiPointElement.points;\n          const firstPoint = linePoints[0];\n          mutateElement(multiPointElement, {\n            points: linePoints.map((point, i) =>\n              i === linePoints.length - 1\n                ? ([firstPoint[0], firstPoint[1]] as const)\n                : point,\n            ),\n          });\n        }\n      }\n\n      if (!appState.elementLocked) {\n        appState.selectedElementIds[multiPointElement.id] = true;\n      }\n    }\n    if (!appState.elementLocked || !multiPointElement) {\n      resetCursor();\n    }\n    return {\n      elements: newElements,\n      appState: {\n        ...appState,\n        elementType:\n          appState.elementLocked && multiPointElement\n            ? appState.elementType\n            : \"selection\",\n        draggingElement: null,\n        multiElement: null,\n        editingElement: null,\n        selectedElementIds:\n          multiPointElement && !appState.elementLocked\n            ? {\n                ...appState.selectedElementIds,\n                [multiPointElement.id]: true,\n              }\n            : appState.selectedElementIds,\n      },\n      commitToHistory: appState.elementType === \"draw\",\n    };\n  },\n  keyTest: (event, appState) =>\n    (event.key === KEYS.ESCAPE &&\n      (appState.editingLinearElement !== null ||\n        (!appState.draggingElement && appState.multiElement === null))) ||\n    ((event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) &&\n      appState.multiElement !== null),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={done}\n      title={t(\"buttons.done\")}\n      aria-label={t(\"buttons.done\")}\n      onClick={updateData}\n      visible={appState.multiElement != null}\n    />\n  ),\n});\n","import \"./TextInput.scss\";\n\nimport React, { Component } from \"react\";\nimport { selectNode, removeSelection } from \"../utils\";\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n};\n\nexport class ProjectName extends Component<Props> {\n  private handleFocus = (event: React.FocusEvent<HTMLElement>) => {\n    selectNode(event.currentTarget);\n  };\n\n  private handleBlur = (event: React.FocusEvent<HTMLElement>) => {\n    const value = event.currentTarget.innerText.trim();\n    if (value !== this.props.value) {\n      this.props.onChange(value);\n    }\n    removeSelection();\n  };\n\n  private handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      if (event.nativeEvent.isComposing || event.keyCode === 229) {\n        return;\n      }\n      event.currentTarget.blur();\n    }\n  };\n  private makeEditable = (editable: HTMLSpanElement | null) => {\n    if (!editable) {\n      return;\n    }\n    try {\n      editable.contentEditable = \"plaintext-only\";\n    } catch {\n      editable.contentEditable = \"true\";\n    }\n  };\n\n  public render() {\n    return (\n      <span\n        suppressContentEditableWarning\n        ref={this.makeEditable}\n        data-type=\"wysiwyg\"\n        className=\"TextInput\"\n        role=\"textbox\"\n        aria-label={this.props.label}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        onFocus={this.handleFocus}\n      >\n        {this.props.value}\n      </span>\n    );\n  }\n}\n","import {\n  isTextElement,\n  isExcalidrawElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport {\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n} from \"../constants\";\n\nlet copiedStyles: string = \"{}\";\n\nexport const actionCopyStyles = register({\n  name: \"copyStyles\",\n  perform: (elements, appState) => {\n    const element = elements.find((el) => appState.selectedElementIds[el.id]);\n    if (element) {\n      copiedStyles = JSON.stringify(element);\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.copyStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"C\",\n  contextMenuOrder: 0,\n});\n\nexport const actionPasteStyles = register({\n  name: \"pasteStyles\",\n  perform: (elements, appState) => {\n    const pastedElement = JSON.parse(copiedStyles);\n    if (!isExcalidrawElement(pastedElement)) {\n      return { elements, commitToHistory: false };\n    }\n    return {\n      elements: elements.map((element) => {\n        if (appState.selectedElementIds[element.id]) {\n          const newElement = newElementWith(element, {\n            backgroundColor: pastedElement?.backgroundColor,\n            strokeWidth: pastedElement?.strokeWidth,\n            strokeColor: pastedElement?.strokeColor,\n            strokeStyle: pastedElement?.strokeStyle,\n            fillStyle: pastedElement?.fillStyle,\n            opacity: pastedElement?.opacity,\n            roughness: pastedElement?.roughness,\n          });\n          if (isTextElement(newElement)) {\n            mutateElement(newElement, {\n              fontSize: pastedElement?.fontSize || DEFAULT_FONT_SIZE,\n              fontFamily: pastedElement?.fontFamily || DEFAULT_FONT_FAMILY,\n              textAlign: pastedElement?.textAlign || DEFAULT_TEXT_ALIGN,\n            });\n            redrawTextBoundingBox(newElement);\n          }\n          return newElement;\n        }\n        return element;\n      }),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.pasteStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"V\",\n  contextMenuOrder: 1,\n});\n","import React from \"react\";\nimport { ProjectName } from \"../components/ProjectName\";\nimport { saveAsJSON, loadFromJSON } from \"../data\";\nimport { load, save, saveAs } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { KEYS } from \"../keys\";\n\nexport const actionChangeProjectName = register({\n  name: \"changeProjectName\",\n  perform: (_elements, appState, value) => {\n    return { appState: { ...appState, name: value }, commitToHistory: false };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <ProjectName\n      label={t(\"labels.fileTitle\")}\n      value={appState.name || \"Unnamed\"}\n      onChange={(name: string) => updateData(name)}\n    />\n  ),\n});\n\nexport const actionChangeExportBackground = register({\n  name: \"changeExportBackground\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportBackground: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.exportBackground}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.withBackground\")}\n    </label>\n  ),\n});\n\nexport const actionChangeShouldAddWatermark = register({\n  name: \"changeShouldAddWatermark\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, shouldAddWatermark: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.shouldAddWatermark}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.addWatermark\")}\n    </label>\n  ),\n});\n\nexport const actionSaveScene = register({\n  name: \"saveScene\",\n  perform: (elements, appState, value) => {\n    saveAsJSON(elements, appState, (window as any).handle).catch((error) =>\n      console.error(error),\n    );\n    return { commitToHistory: false };\n  },\n  keyTest: (event) => {\n    return event.key === \"s\" && event[KEYS.CTRL_OR_CMD] && !event.shiftKey;\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={save}\n      title={t(\"buttons.save\")}\n      aria-label={t(\"buttons.save\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => updateData(null)}\n    />\n  ),\n});\n\nexport const actionSaveAsScene = register({\n  name: \"saveAsScene\",\n  perform: (elements, appState, value) => {\n    saveAsJSON(elements, appState, null).catch((error) => console.error(error));\n    return { commitToHistory: false };\n  },\n  keyTest: (event) => {\n    return event.key === \"s\" && event.shiftKey && event[KEYS.CTRL_OR_CMD];\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={saveAs}\n      title={t(\"buttons.saveAs\")}\n      aria-label={t(\"buttons.saveAs\")}\n      showAriaLabel={useIsMobile()}\n      hidden={!(\"chooseFileSystemEntries\" in window)}\n      onClick={() => updateData(null)}\n    />\n  ),\n});\n\nexport const actionLoadScene = register({\n  name: \"loadScene\",\n  perform: (\n    elements,\n    appState,\n    { elements: loadedElements, appState: loadedAppState, error },\n  ) => {\n    return {\n      elements: loadedElements,\n      appState: {\n        ...loadedAppState,\n        errorMessage: error,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={load}\n      title={t(\"buttons.load\")}\n      aria-label={t(\"buttons.load\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        loadFromJSON()\n          .then(({ elements, appState }) => {\n            updateData({ elements: elements, appState: appState });\n          })\n          .catch((error) => {\n            // if user cancels, ignore the error\n            if (error.name === \"AbortError\") {\n              return;\n            }\n            updateData({ error: error.message });\n          });\n      }}\n    />\n  ),\n});\n","import React from \"react\";\n\ntype HelpIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  onClick?(): void;\n};\n\nconst ICON = (\n  <svg\n    width=\"30\"\n    height=\"22\"\n    viewBox=\"0 0 512 512\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\" />\n  </svg>\n);\n\nexport const HelpIcon = (props: HelpIconProps) => (\n  <label title={`${props.title} — ?`} className=\"help-icon\">\n    <div onClick={props.onClick}>{ICON}</div>\n  </label>\n);\n","import \"./Avatar.scss\";\n\nimport React from \"react\";\n\ntype AvatarProps = {\n  children: string;\n  className?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  color: string;\n};\n\nexport const Avatar = ({\n  children,\n  className,\n  color,\n  onClick,\n}: AvatarProps) => (\n  <div\n    className={`Avatar ${className}`}\n    style={{ background: color }}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n);\n","import React from \"react\";\nimport { menu, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { allowFullScreen, exitFullScreen, isFullScreen } from \"../utils\";\nimport { KEYS } from \"../keys\";\nimport { HelpIcon } from \"../components/HelpIcon\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={menu}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(\n        appState,\n        getNonDeletedElements(elements),\n      )}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n\nexport const actionFullScreen = register({\n  name: \"toggleFullScreen\",\n  perform: () => {\n    if (!isFullScreen()) {\n      allowFullScreen();\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) => event.keyCode === KEYS.F_KEY_CODE,\n});\n\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        showShortcutsDialog: true,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <HelpIcon title={t(\"shortcutsDialog.title\")} onClick={updateData} />\n  ),\n  keyTest: (event) => event.key === KEYS.QUESTION_MARK,\n});\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getSelectedElements } from \"../scene\";\nimport {\n  getSelectedGroupIds,\n  selectGroup,\n  selectGroupsForSelectedElements,\n  getElementsInGroup,\n  addToGroup,\n  removeFromSelectedGroups,\n  isElementInGroup,\n} from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\nimport { randomId } from \"../random\";\n\nexport const actionGroup = register({\n  name: \"group\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    if (selectedElements.length < 2) {\n      // nothing to group\n      return { appState, elements, commitToHistory: false };\n    }\n    // if everything is already grouped into 1 group, there is nothing to do\n    const selectedGroupIds = getSelectedGroupIds(appState);\n    if (selectedGroupIds.length === 1) {\n      const selectedGroupId = selectedGroupIds[0];\n      const elementIdsInGroup = new Set(\n        getElementsInGroup(elements, selectedGroupId).map(\n          (element) => element.id,\n        ),\n      );\n      const selectedElementIds = new Set(\n        selectedElements.map((element) => element.id),\n      );\n      const combinedSet = new Set([\n        ...Array.from(elementIdsInGroup),\n        ...Array.from(selectedElementIds),\n      ]);\n      if (combinedSet.size === elementIdsInGroup.size) {\n        // no incremental ids in the selected ids\n        return { appState, elements, commitToHistory: false };\n      }\n    }\n    const newGroupId = randomId();\n    const updatedElements = elements.map((element) => {\n      if (!appState.selectedElementIds[element.id]) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: addToGroup(\n          element.groupIds,\n          newGroupId,\n          appState.editingGroupId,\n        ),\n      });\n    });\n    // keep the z order within the group the same, but move them\n    // to the z order of the highest element in the layer stack\n    const elementsInGroup = getElementsInGroup(updatedElements, newGroupId);\n    const lastElementInGroup = elementsInGroup[elementsInGroup.length - 1];\n    const lastGroupElementIndex = updatedElements.lastIndexOf(\n      lastElementInGroup,\n    );\n    const elementsAfterGroup = updatedElements.slice(lastGroupElementIndex + 1);\n    const elementsBeforeGroup = updatedElements\n      .slice(0, lastGroupElementIndex)\n      .filter(\n        (updatedElement) => !isElementInGroup(updatedElement, newGroupId),\n      );\n    const updatedElementsInOrder = [\n      ...elementsBeforeGroup,\n      ...elementsInGroup,\n      ...elementsAfterGroup,\n    ];\n\n    return {\n      appState: selectGroup(\n        newGroupId,\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(updatedElementsInOrder),\n      ),\n      elements: updatedElementsInOrder,\n      commitToHistory: true,\n    };\n  },\n  contextMenuOrder: 4,\n  contextItemLabel: \"labels.group\",\n  keyTest: (event) => {\n    return (\n      !event.shiftKey &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.keyCode === KEYS.G_KEY_CODE\n    );\n  },\n});\n\nexport const actionUngroup = register({\n  name: \"ungroup\",\n  perform: (elements, appState) => {\n    const groupIds = getSelectedGroupIds(appState);\n    if (groupIds.length === 0) {\n      return { appState, elements, commitToHistory: false };\n    }\n    const nextElements = elements.map((element) => {\n      const nextGroupIds = removeFromSelectedGroups(\n        element.groupIds,\n        appState.selectedGroupIds,\n      );\n      if (nextGroupIds.length === element.groupIds.length) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: nextGroupIds,\n      });\n    });\n    return {\n      appState: selectGroupsForSelectedElements(\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(nextElements),\n      ),\n      elements: nextElements,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => {\n    return (\n      event.shiftKey &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.keyCode === KEYS.G_KEY_CODE\n    );\n  },\n  contextMenuOrder: 5,\n  contextItemLabel: \"labels.ungroup\",\n});\n","import { PointerCoords } from \"./types\";\nimport { normalizeScroll } from \"./scene\";\n\nexport const getCenter = (pointers: Map<number, PointerCoords>) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: normalizeScroll(sum(allCoords, (coords) => coords.x) / allCoords.length),\n    y: normalizeScroll(sum(allCoords, (coords) => coords.y) / allCoords.length),\n  };\n};\n\nexport const getDistance = ([a, b]: readonly PointerCoords[]) =>\n  Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = <T>(array: readonly T[], mapper: (item: T) => number): number =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import React from \"react\";\nimport { Avatar } from \"../components/Avatar\";\nimport { register } from \"./register\";\nimport { getClientColors, getClientInitials } from \"../clients\";\nimport { Collaborator } from \"../types\";\nimport { normalizeScroll } from \"../scene\";\n\nexport const actionGoToCollaborator = register({\n  name: \"goToCollaborator\",\n  perform: (_elements, appState, value) => {\n    const point = value as Collaborator[\"pointer\"];\n    if (!point) {\n      return { appState, commitToHistory: false };\n    }\n\n    return {\n      appState: {\n        ...appState,\n        scrollX: normalizeScroll(window.innerWidth / 2 - point.x),\n        scrollY: normalizeScroll(window.innerHeight / 2 - point.y),\n        // Close mobile menu\n        openMenu: appState.openMenu === \"canvas\" ? null : appState.openMenu,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData, id }) => {\n    const clientId = id;\n\n    if (!clientId) {\n      return null;\n    }\n\n    const collaborator = appState.collaborators.get(clientId);\n\n    if (!collaborator) {\n      return null;\n    }\n\n    const { background } = getClientColors(clientId);\n    const shortName = getClientInitials(collaborator.username);\n\n    return (\n      <Avatar\n        color={background}\n        onClick={() => updateData(collaborator.pointer)}\n      >\n        {shortName}\n      </Avatar>\n    );\n  },\n});\n","import { Action, ActionResult } from \"./types\";\nimport React from \"react\";\nimport { undo, redo } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { SceneHistory, HistoryEntry } from \"../history\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { KEYS } from \"../keys\";\nimport { getElementMap } from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\n\nconst writeData = (\n  prevElements: readonly ExcalidrawElement[],\n  appState: AppState,\n  updater: () => HistoryEntry | null,\n): ActionResult => {\n  const commitToHistory = false;\n  if (\n    !appState.multiElement &&\n    !appState.resizingElement &&\n    !appState.editingElement &&\n    !appState.draggingElement\n  ) {\n    const data = updater();\n    if (data === null) {\n      return { commitToHistory };\n    }\n\n    const prevElementMap = getElementMap(prevElements);\n    const nextElements = data.elements;\n    const nextElementMap = getElementMap(nextElements);\n\n    const elements = nextElements\n      .map((nextElement) =>\n        newElementWith(\n          prevElementMap[nextElement.id] || nextElement,\n          nextElement,\n        ),\n      )\n      .concat(\n        prevElements\n          .filter(\n            (prevElement) => !nextElementMap.hasOwnProperty(prevElement.id),\n          )\n          .map((prevElement) =>\n            newElementWith(prevElement, { isDeleted: true }),\n          ),\n      );\n\n    return {\n      elements,\n      appState: { ...appState, ...data.appState },\n      commitToHistory,\n      syncHistory: true,\n    };\n  }\n  return { commitToHistory };\n};\n\nconst testUndo = (shift: boolean) => (event: KeyboardEvent) =>\n  event[KEYS.CTRL_OR_CMD] && /z/i.test(event.key) && event.shiftKey === shift;\n\ntype ActionCreator = (history: SceneHistory) => Action;\n\nexport const createUndoAction: ActionCreator = (history) => ({\n  name: \"undo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.undoOnce()),\n  keyTest: testUndo(false),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={undo}\n      aria-label={t(\"buttons.undo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n\nexport const createRedoAction: ActionCreator = (history) => ({\n  name: \"redo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.redoOnce()),\n  keyTest: testUndo(true),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={redo}\n      aria-label={t(\"buttons.redo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n","import \"./Island.scss\";\n\nimport React from \"react\";\n\ntype IslandProps = {\n  children: React.ReactNode;\n  padding?: number;\n  className?: string | boolean;\n  style?: object;\n};\n\nexport const Island = React.forwardRef<HTMLDivElement, IslandProps>(\n  ({ children, padding, className, style }, ref) => (\n    <div\n      className={`${className ?? \"\"} Island`}\n      style={{ \"--padding\": padding, ...style } as React.CSSProperties}\n      ref={ref}\n    >\n      {children}\n    </div>\n  ),\n);\n","import \"./Stack.css\";\n\nimport React from \"react\";\n\ntype StackProps = {\n  children: React.ReactNode;\n  gap?: number;\n  align?: \"start\" | \"center\" | \"end\" | \"baseline\";\n  justifyContent?: \"center\" | \"space-around\" | \"space-between\";\n  className?: string | boolean;\n};\n\nconst RowStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={`Stack Stack_horizontal ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          alignItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n};\n\nconst ColStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={`Stack Stack_vertical ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          justifyItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default {\n  Row: RowStack,\n  Col: ColStack,\n};\n","import \"./FixedSideContainer.css\";\n\nimport React from \"react\";\n\ntype FixedSideContainerProps = {\n  children: React.ReactNode;\n  side: \"top\" | \"left\" | \"right\";\n  className?: string;\n};\n\nexport const FixedSideContainer = ({\n  children,\n  side,\n  className,\n}: FixedSideContainerProps) => (\n  <div\n    className={`FixedSideContainer FixedSideContainer_side_${side} ${className}`}\n  >\n    {children}\n  </div>\n);\n","import \"./UserList.css\";\n\nimport React from \"react\";\n\ntype UserListProps = {\n  children: React.ReactNode;\n  className?: string;\n  mobile?: boolean;\n};\n\nexport const UserList = ({ children, className, mobile }: UserListProps) => {\n  let compClassName = \"UserList\";\n\n  if (className) {\n    compClassName += ` ${className}`;\n  }\n\n  if (mobile) {\n    compClassName += \" UserList_mobile\";\n  }\n\n  return <div className={compClassName}>{children}</div>;\n};\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype LockIconSize = \"s\" | \"m\";\n\ntype LockIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  checked: boolean;\n  onChange?(): void;\n  size?: LockIconSize;\n  zenModeEnabled?: boolean;\n};\n\nconst DEFAULT_SIZE: LockIconSize = \"m\";\n\nconst ICONS = {\n  CHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\" />\n    </svg>\n  ),\n  UNCHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"unlocked-icon rtl-mirror\"\n    >\n      <path d=\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\" />\n    </svg>\n  ),\n};\n\nexport const LockIcon = (props: LockIconProps) => {\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  return (\n    <label\n      className={`ToolIcon ToolIcon__lock ToolIcon_type_floating ${sizeCn} zen-mode-visibility ${\n        props.zenModeEnabled && \"zen-mode-visibility--hidden\"\n      }`}\n      title={`${props.title} — Q`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.checked ? ICONS.CHECKED : ICONS.UNCHECKED}\n      </div>\n    </label>\n  );\n};\n","import \"./Modal.scss\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { KEYS } from \"../keys\";\n\nexport const Modal = (props: {\n  className?: string;\n  children: React.ReactNode;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  labelledBy: string;\n}) => {\n  const modalRoot = useBodyRoot();\n\n  const handleKeydown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      props.onCloseRequest();\n    }\n  };\n  return createPortal(\n    <div\n      className={`Modal ${props.className ?? \"\"}`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onKeyDown={handleKeydown}\n      aria-labelledby={props.labelledBy}\n    >\n      <div className=\"Modal__background\" onClick={props.onCloseRequest}></div>\n      <div\n        className=\"Modal__content\"\n        style={\n          {\n            \"--max-width\": `${props.maxWidth}px`,\n            maxHeight: \"100%\",\n            overflowY: \"scroll\",\n          } as any\n        }\n      >\n        {props.children}\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nconst useBodyRoot = () => {\n  const createDiv = () => {\n    const div = document.createElement(\"div\");\n    document.body.appendChild(div);\n    return div;\n  };\n  const [div] = useState(createDiv);\n  useEffect(() => {\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n  return div;\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { Modal } from \"./Modal\";\nimport { Island } from \"./Island\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { back, close } from \"./icons\";\nimport { KEYS } from \"../keys\";\n\nimport \"./Dialog.scss\";\n\nexport const Dialog = (props: {\n  children: React.ReactNode;\n  className?: string;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  title: React.ReactNode;\n}) => {\n  const islandRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const focusableElements = queryFocusableElements();\n\n    if (focusableElements.length > 0) {\n      // If there's an element other than close, focus it.\n      (focusableElements[1] || focusableElements[0]).focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!islandRef.current) {\n      return;\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements();\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    };\n\n    const node = islandRef.current;\n    node.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => node.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  const queryFocusableElements = () => {\n    const focusableElements = islandRef.current?.querySelectorAll<HTMLElement>(\n      \"button, a, input, select, textarea, div[tabindex]\",\n    );\n\n    return focusableElements ? Array.from(focusableElements) : [];\n  };\n\n  return (\n    <Modal\n      className={`${props.className ?? \"\"} Dialog`}\n      labelledBy=\"dialog-title\"\n      maxWidth={props.maxWidth}\n      onCloseRequest={props.onCloseRequest}\n    >\n      <Island padding={4} ref={islandRef}>\n        <h2 id=\"dialog-title\" className=\"Dialog__title\">\n          <span className=\"Dialog__titleContent\">{props.title}</span>\n          <button\n            className=\"Modal__close\"\n            onClick={props.onCloseRequest}\n            aria-label={t(\"buttons.close\")}\n          >\n            {useIsMobile() ? back : close}\n          </button>\n        </h2>\n        {props.children}\n      </Island>\n    </Modal>\n  );\n};\n","import \"./ExportDialog.scss\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nimport { ToolButton } from \"./ToolButton\";\nimport { clipboard, exportFile, link } from \"./icons\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { exportToCanvas } from \"../scene/export\";\nimport { ActionsManagerInterface } from \"../actions/types\";\nimport Stack from \"./Stack\";\nimport { t } from \"../i18n\";\n\nimport { probablySupportsClipboardBlob } from \"../clipboard\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport useIsMobile from \"../is-mobile\";\nimport { Dialog } from \"./Dialog\";\n\nconst scales = [1, 2, 3];\nconst defaultScale = scales.includes(devicePixelRatio) ? devicePixelRatio : 1;\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst ExportModal = ({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n  onCloseRequest: () => void;\n}) => {\n  const someElementIsSelected = isSomeElementSelected(elements, appState);\n  const [scale, setScale] = useState(defaultScale);\n  const [exportSelected, setExportSelected] = useState(someElementIsSelected);\n  const previewRef = useRef<HTMLDivElement>(null);\n  const {\n    exportBackground,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  } = appState;\n\n  const exportedElements = exportSelected\n    ? getSelectedElements(elements, appState)\n    : elements;\n\n  useEffect(() => {\n    setExportSelected(someElementIsSelected);\n  }, [someElementIsSelected]);\n\n  useEffect(() => {\n    const previewNode = previewRef.current;\n    const canvas = exportToCanvas(exportedElements, appState, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      scale,\n      shouldAddWatermark,\n    });\n    previewNode?.appendChild(canvas);\n    return () => {\n      previewNode?.removeChild(canvas);\n    };\n  }, [\n    appState,\n    exportedElements,\n    exportBackground,\n    exportPadding,\n    viewBackgroundColor,\n    scale,\n    shouldAddWatermark,\n  ]);\n\n  return (\n    <div className=\"ExportDialog\">\n      <div className=\"ExportDialog__preview\" ref={previewRef}></div>\n      <Stack.Col gap={2} align=\"center\">\n        <div className=\"ExportDialog__actions\">\n          <Stack.Row gap={2}>\n            <ToolButton\n              type=\"button\"\n              label=\"PNG\"\n              title={t(\"buttons.exportToPng\")}\n              aria-label={t(\"buttons.exportToPng\")}\n              onClick={() => onExportToPng(exportedElements, scale)}\n            />\n            <ToolButton\n              type=\"button\"\n              label=\"SVG\"\n              title={t(\"buttons.exportToSvg\")}\n              aria-label={t(\"buttons.exportToSvg\")}\n              onClick={() => onExportToSvg(exportedElements, scale)}\n            />\n            {probablySupportsClipboardBlob && (\n              <ToolButton\n                type=\"button\"\n                icon={clipboard}\n                title={t(\"buttons.copyPngToClipboard\")}\n                aria-label={t(\"buttons.copyPngToClipboard\")}\n                onClick={() => onExportToClipboard(exportedElements, scale)}\n              />\n            )}\n            <ToolButton\n              type=\"button\"\n              icon={link}\n              title={t(\"buttons.getShareableLink\")}\n              aria-label={t(\"buttons.getShareableLink\")}\n              onClick={() => onExportToBackend(exportedElements)}\n            />\n          </Stack.Row>\n          <div className=\"ExportDialog__name\">\n            {actionManager.renderAction(\"changeProjectName\")}\n          </div>\n          <Stack.Row gap={2}>\n            {scales.map((s) => (\n              <ToolButton\n                key={s}\n                size=\"s\"\n                type=\"radio\"\n                icon={`x${s}`}\n                name=\"export-canvas-scale\"\n                aria-label={`Scale ${s} x`}\n                id=\"export-canvas-scale\"\n                checked={s === scale}\n                onChange={() => setScale(s)}\n              />\n            ))}\n          </Stack.Row>\n        </div>\n        {actionManager.renderAction(\"changeExportBackground\")}\n        {someElementIsSelected && (\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={exportSelected}\n                onChange={(event) =>\n                  setExportSelected(event.currentTarget.checked)\n                }\n              />{\" \"}\n              {t(\"labels.onlySelected\")}\n            </label>\n          </div>\n        )}\n        {actionManager.renderAction(\"changeShouldAddWatermark\")}\n      </Stack.Col>\n    </div>\n  );\n};\n\nexport const ExportDialog = ({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  return (\n    <>\n      <ToolButton\n        onClick={() => setModalIsShown(true)}\n        icon={exportFile}\n        type=\"button\"\n        aria-label={t(\"buttons.export\")}\n        showAriaLabel={useIsMobile()}\n        title={t(\"buttons.export\")}\n        ref={triggerButton}\n      />\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"buttons.export\")}\n        >\n          <ExportModal\n            elements={elements}\n            appState={appState}\n            exportPadding={exportPadding}\n            actionManager={actionManager}\n            onExportToPng={onExportToPng}\n            onExportToSvg={onExportToSvg}\n            onExportToClipboard={onExportToClipboard}\n            onExportToBackend={onExportToBackend}\n            onCloseRequest={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport * as i18n from \"../i18n\";\n\nexport const LanguageList = ({\n  onChange,\n  languages = i18n.languages,\n  currentLanguage = i18n.getLanguage().lng,\n  floating,\n}: {\n  languages?: { lng: string; label: string }[];\n  onChange: (value: string) => void;\n  currentLanguage?: string;\n  floating?: boolean;\n}) => (\n  <React.Fragment>\n    <select\n      className={`dropdown-select dropdown-select__language${\n        floating ? \" dropdown-select--floating\" : \"\"\n      }`}\n      onChange={({ target }) => onChange(target.value)}\n      value={currentLanguage}\n      aria-label={i18n.t(\"buttons.selectLanguage\")}\n    >\n      {languages.map((language) => (\n        <option key={language.lng} value={language.lng}>\n          {language.label}\n        </option>\n      ))}\n    </select>\n  </React.Fragment>\n);\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getSelectedElements } from \"../scene\";\n\nimport \"./HintViewer.scss\";\nimport { AppState } from \"../types\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { getShortcutKey } from \"../utils\";\n\ninterface Hint {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n}\n\nconst getHints = ({ appState, elements }: Hint) => {\n  const { elementType, isResizing, isRotating, lastPointerDownWith } = appState;\n  const multiMode = appState.multiElement !== null;\n  if (elementType === \"arrow\" || elementType === \"line\") {\n    if (!multiMode) {\n      return t(\"hints.linearElement\");\n    }\n    return t(\"hints.linearElementMulti\");\n  }\n\n  if (elementType === \"draw\") {\n    return t(\"hints.freeDraw\");\n  }\n\n  const selectedElements = getSelectedElements(elements, appState);\n  if (\n    isResizing &&\n    lastPointerDownWith === \"mouse\" &&\n    selectedElements.length === 1\n  ) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length > 2) {\n      return null;\n    }\n    return t(\"hints.resize\");\n  }\n\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n\n  if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n    if (appState.editingLinearElement) {\n      return appState.editingLinearElement.activePointIndex\n        ? t(\"hints.lineEditor_pointSelected\")\n        : t(\"hints.lineEditor_nothingSelected\");\n    }\n    return t(\"hints.lineEditor_info\");\n  }\n\n  return null;\n};\n\nexport const HintViewer = ({ appState, elements }: Hint) => {\n  let hint = getHints({\n    appState,\n    elements,\n  });\n  if (!hint) {\n    return null;\n  }\n\n  hint = getShortcutKey(hint);\n\n  return (\n    <div className=\"HintViewer\">\n      <span>{hint}</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { hasBackground, hasStroke, hasText, getTargetElement } from \"../scene\";\nimport { t } from \"../i18n\";\nimport { SHAPES } from \"../shapes\";\nimport { ToolButton } from \"./ToolButton\";\nimport { capitalizeString, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport useIsMobile from \"../is-mobile\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const SelectedShapeActions = ({\n  appState,\n  elements,\n  renderAction,\n  elementType,\n}: {\n  appState: AppState;\n  elements: readonly ExcalidrawElement[];\n  renderAction: ActionManager[\"renderAction\"];\n  elementType: ExcalidrawElement[\"type\"];\n}) => {\n  const targetElements = getTargetElement(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  const isEditing = Boolean(appState.editingElement);\n  const isMobile = useIsMobile();\n\n  return (\n    <div className=\"panelColumn\">\n      {renderAction(\"changeStrokeColor\")}\n      {(hasBackground(elementType) ||\n        targetElements.some((element) => hasBackground(element.type))) && (\n        <>\n          {renderAction(\"changeBackgroundColor\")}\n\n          {renderAction(\"changeFillStyle\")}\n        </>\n      )}\n\n      {(hasStroke(elementType) ||\n        targetElements.some((element) => hasStroke(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeWidth\")}\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(hasText(elementType) ||\n        targetElements.some((element) => hasText(element.type))) && (\n        <>\n          {renderAction(\"changeFontSize\")}\n\n          {renderAction(\"changeFontFamily\")}\n\n          {renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringToFront\")}\n          {renderAction(\"bringForward\")}\n        </div>\n      </fieldset>\n      {!isMobile && !isEditing && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {renderAction(\"duplicateSelection\")}\n            {renderAction(\"deleteSelectedElements\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nexport const ShapesSwitcher = ({\n  elementType,\n  setAppState,\n}: {\n  elementType: ExcalidrawElement[\"type\"];\n  setAppState: any;\n}) => (\n  <>\n    {SHAPES.map(({ value, icon, key }, index) => {\n      const label = t(`toolBar.${value}`);\n      const shortcut = `${capitalizeString(key)} ${t(\"shortcutsDialog.or\")} ${\n        index + 1\n      }`;\n      return (\n        <ToolButton\n          key={value}\n          type=\"radio\"\n          icon={icon}\n          checked={elementType === value}\n          name=\"editor-current-shape\"\n          title={`${capitalizeString(label)} — ${shortcut}`}\n          keyBindingLabel={`${index + 1}`}\n          aria-label={capitalizeString(label)}\n          aria-keyshortcuts={`${key} ${index + 1}`}\n          data-testid={value}\n          onChange={() => {\n            setAppState({\n              elementType: value,\n              multiElement: null,\n              selectedElementIds: {},\n            });\n            setCursorForShape(value);\n            setAppState({});\n          }}\n        ></ToolButton>\n      );\n    })}\n  </>\n);\n\nexport const ZoomActions = ({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: number;\n}) => (\n  <Stack.Col gap={1}>\n    <Stack.Row gap={1} align=\"center\">\n      {renderAction(\"zoomIn\")}\n      {renderAction(\"zoomOut\")}\n      {renderAction(\"resetZoom\")}\n      <div style={{ marginInlineStart: 4 }}>{(zoom * 100).toFixed(0)}%</div>\n    </Stack.Row>\n  </Stack.Col>\n);\n","import React from \"react\";\nimport { t } from \"../i18n\";\n\ninterface SectionProps extends React.HTMLProps<HTMLElement> {\n  heading: string;\n  children: React.ReactNode | ((header: React.ReactNode) => React.ReactNode);\n}\n\nexport const Section = ({ heading, children, ...props }: SectionProps) => {\n  const header = (\n    <h2 className=\"visually-hidden\" id={`${heading}-title`}>\n      {t(`headings.${heading}`)}\n    </h2>\n  );\n  return (\n    <section {...props} aria-labelledby={`${heading}-title`}>\n      {typeof children === \"function\" ? (\n        children(header)\n      ) : (\n        <>\n          {header}\n          {children}\n        </>\n      )}\n    </section>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { ToolButton } from \"./ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { users, clipboard, start, stop } from \"./icons\";\n\nimport \"./RoomDialog.scss\";\nimport { copyTextToSystemClipboard } from \"../clipboard\";\nimport { Dialog } from \"./Dialog\";\nimport { AppState } from \"../types\";\n\nconst RoomModal = ({\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n  onPressingEnter,\n}: {\n  activeRoomLink: string;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n  onPressingEnter: () => void;\n}) => {\n  const roomLinkInput = useRef<HTMLInputElement>(null);\n\n  const copyRoomLink = () => {\n    copyTextToSystemClipboard(activeRoomLink);\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  };\n  const selectInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).select();\n    }\n  };\n\n  return (\n    <div className=\"RoomDialog-modal\">\n      {!activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_intro\")}</p>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-startSession\"\n              type=\"button\"\n              icon={start}\n              title={t(\"roomDialog.button_startSession\")}\n              aria-label={t(\"roomDialog.button_startSession\")}\n              showAriaLabel={true}\n              onClick={onRoomCreate}\n            />\n          </div>\n        </>\n      )}\n      {activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_inProgressIntro\")}</p>\n          <p>{t(\"roomDialog.desc_shareLink\")}</p>\n          <div className=\"RoomDialog-linkContainer\">\n            <ToolButton\n              type=\"button\"\n              icon={clipboard}\n              title={t(\"labels.copy\")}\n              aria-label={t(\"labels.copy\")}\n              onClick={copyRoomLink}\n            />\n            <input\n              value={activeRoomLink}\n              readOnly={true}\n              className=\"RoomDialog-link\"\n              ref={roomLinkInput}\n              onPointerDown={selectInput}\n            />\n          </div>\n          <div className=\"RoomDialog-usernameContainer\">\n            <label className=\"RoomDialog-usernameLabel\" htmlFor=\"username\">\n              {t(\"labels.yourName\")}\n            </label>\n            <input\n              id=\"username\"\n              value={username || \"\"}\n              className=\"RoomDialog-username TextInput\"\n              onChange={(event) => onUsernameChange(event.target.value)}\n              onKeyPress={(event) => event.key === \"Enter\" && onPressingEnter()}\n            />\n          </div>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <p>\n            <span role=\"img\" aria-hidden=\"true\">\n              ⚠️\n            </span>{\" \"}\n            {t(\"roomDialog.desc_persistenceWarning\")}\n          </p>\n          <p>{t(\"roomDialog.desc_exitSession\")}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-stopSession\"\n              type=\"button\"\n              icon={stop}\n              title={t(\"roomDialog.button_stopSession\")}\n              aria-label={t(\"roomDialog.button_stopSession\")}\n              showAriaLabel={true}\n              onClick={onRoomDestroy}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const RoomDialog = ({\n  isCollaborating,\n  collaboratorCount,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n}: {\n  isCollaborating: AppState[\"isCollaborating\"];\n  collaboratorCount: number;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const [activeRoomLink, setActiveRoomLink] = useState(\"\");\n\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    setActiveRoomLink(isCollaborating ? window.location.href : \"\");\n  }, [isCollaborating]);\n\n  return (\n    <>\n      <ToolButton\n        className={`RoomDialog-modalButton ${\n          isCollaborating ? \"is-collaborating\" : \"\"\n        }`}\n        onClick={() => setModalIsShown(true)}\n        icon={users}\n        type=\"button\"\n        title={t(\"buttons.roomDialog\")}\n        aria-label={t(\"buttons.roomDialog\")}\n        showAriaLabel={useIsMobile()}\n        ref={triggerButton}\n      >\n        {collaboratorCount > 0 && (\n          <div className=\"RoomDialog-modalButton-collaborators\">\n            {collaboratorCount}\n          </div>\n        )}\n      </ToolButton>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"labels.createRoom\")}\n        >\n          <RoomModal\n            activeRoomLink={activeRoomLink}\n            username={username}\n            onUsernameChange={onUsernameChange}\n            onRoomCreate={onRoomCreate}\n            onRoomDestroy={onRoomDestroy}\n            onPressingEnter={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t, setLanguage } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { LanguageList } from \"./LanguageList\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockIcon } from \"./LockIcon\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { UserList } from \"./UserList\";\n\ntype MobileMenuProps = {\n  appState: AppState;\n  actionManager: ActionManager;\n  exportButton: React.ReactNode;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n  canvas: HTMLCanvasElement | null;\n};\n\nexport const MobileMenu = ({\n  appState,\n  elements,\n  actionManager,\n  exportButton,\n  setAppState,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n  canvas,\n}: MobileMenuProps) => (\n  <>\n    {appState.isLoading && <LoadingMessage />}\n    <FixedSideContainer side=\"top\">\n      <Section heading=\"shapes\">\n        {(heading) => (\n          <Stack.Col gap={4} align=\"center\">\n            <Stack.Row gap={1}>\n              <Island padding={1}>\n                {heading}\n                <Stack.Row gap={1}>\n                  <ShapesSwitcher\n                    elementType={appState.elementType}\n                    setAppState={setAppState}\n                  />\n                </Stack.Row>\n              </Island>\n              <LockIcon\n                checked={appState.elementLocked}\n                onChange={onLockToggle}\n                title={t(\"toolBar.lock\")}\n              />\n            </Stack.Row>\n          </Stack.Col>\n        )}\n      </Section>\n      <HintViewer appState={appState} elements={elements} />\n    </FixedSideContainer>\n    <div\n      className=\"App-bottom-bar\"\n      style={{\n        marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n      }}\n    >\n      <Island padding={3}>\n        {appState.openMenu === \"canvas\" ? (\n          <Section className=\"App-mobile-menu\" heading=\"canvasActions\">\n            <div className=\"panelColumn\">\n              <Stack.Col gap={4}>\n                {actionManager.renderAction(\"loadScene\")}\n                {actionManager.renderAction(\"saveScene\")}\n                {actionManager.renderAction(\"saveAsScene\")}\n                {exportButton}\n                {actionManager.renderAction(\"clearCanvas\")}\n                <RoomDialog\n                  isCollaborating={appState.isCollaborating}\n                  collaboratorCount={appState.collaborators.size}\n                  username={appState.username}\n                  onUsernameChange={onUsernameChange}\n                  onRoomCreate={onRoomCreate}\n                  onRoomDestroy={onRoomDestroy}\n                />\n                {actionManager.renderAction(\"changeViewBackgroundColor\")}\n                <fieldset>\n                  <legend>{t(\"labels.language\")}</legend>\n                  <LanguageList\n                    onChange={async (lng) => {\n                      await setLanguage(lng);\n                      setAppState({});\n                    }}\n                  />\n                </fieldset>\n                <fieldset>\n                  <legend>{t(\"labels.collaborators\")}</legend>\n                  <UserList mobile>\n                    {Array.from(appState.collaborators)\n                      // Collaborator is either not initialized or is actually the current user.\n                      .filter(([_, client]) => Object.keys(client).length !== 0)\n                      .map(([clientId, client]) => (\n                        <React.Fragment key={clientId}>\n                          {actionManager.renderAction(\n                            \"goToCollaborator\",\n                            clientId,\n                          )}\n                        </React.Fragment>\n                      ))}\n                  </UserList>\n                </fieldset>\n              </Stack.Col>\n            </div>\n          </Section>\n        ) : appState.openMenu === \"shape\" &&\n          showSelectedShapeActions(appState, elements) ? (\n          <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n            <SelectedShapeActions\n              appState={appState}\n              elements={elements}\n              renderAction={actionManager.renderAction}\n              elementType={appState.elementType}\n            />\n          </Section>\n        ) : null}\n        <footer className=\"App-toolbar\">\n          <div className=\"App-toolbar-content\">\n            {actionManager.renderAction(\"toggleCanvasMenu\")}\n            {actionManager.renderAction(\"toggleEditMenu\")}\n            {actionManager.renderAction(\"undo\")}\n            {actionManager.renderAction(\"redo\")}\n            {actionManager.renderAction(\n              appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n            )}\n            {actionManager.renderAction(\"deleteSelectedElements\")}\n          </div>\n          {appState.scrolledOutside && (\n            <button\n              className=\"scroll-back-to-content\"\n              onClick={() => {\n                setAppState({\n                  ...calculateScrollCenter(elements, appState, canvas),\n                });\n              }}\n            >\n              {t(\"buttons.scrollBackToContent\")}\n            </button>\n          )}\n        </footer>\n      </Island>\n    </div>\n  </>\n);\n","import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\n\nexport const ErrorDialog = ({\n  message,\n  onClose,\n}: {\n  message: string;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={500}\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div>{message}</div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport oc from \"open-color\";\nimport { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { Dialog } from \"./Dialog\";\nimport { getShortcutKey } from \"../utils\";\n\nconst Columns = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst Column = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      width: \"49%\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst ShortcutIsland = (props: {\n  caption: string;\n  children: React.ReactNode;\n}) => (\n  <div\n    style={{\n      border: `1px solid ${oc.gray[4]}`,\n      marginBottom: \"16px\",\n    }}\n  >\n    <h3\n      style={{\n        margin: \"0\",\n        padding: \"4px\",\n        backgroundColor: oc.gray[2],\n        textAlign: \"center\",\n      }}\n    >\n      {props.caption}\n    </h3>\n    {props.children}\n  </div>\n);\n\nconst Shortcut = (props: {\n  label: string;\n  shortcuts: string[];\n  isOr: boolean;\n}) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n  return (\n    <div\n      style={{\n        borderTop: `1px solid ${oc.gray[4]}`,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0\",\n          padding: \"4px 8px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            lineHeight: 1.4,\n          }}\n        >\n          {props.label}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"0 0 auto\",\n            justifyContent: \"flex-end\",\n            marginLeft: isRTL ? \"0em\" : \"auto\",\n            marginRight: isRTL ? \"auto\" : \"0em\",\n            minWidth: \"30%\",\n          }}\n        >\n          {props.shortcuts.map((shortcut, index) => (\n            <React.Fragment key={index}>\n              <ShortcutKey>{shortcut}</ShortcutKey>\n              {props.isOr &&\n                index !== props.shortcuts.length - 1 &&\n                t(\"shortcutsDialog.or\")}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShortcut.defaultProps = {\n  isOr: true,\n};\n\nconst ShortcutKey = (props: { children: React.ReactNode }) => (\n  <span\n    style={{\n      wordBreak: \"keep-all\",\n      border: `1px solid ${oc.gray[4]}`,\n      padding: \"2px 8px\",\n      margin: \"auto 4px\",\n      backgroundColor: oc.gray[2],\n      borderRadius: \"2px\",\n      fontSize: \"0.8em\",\n      minHeight: \"26px\",\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      alignItems: \"center\",\n    }}\n    {...props}\n  />\n);\n\nconst Footer = () => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      borderTop: `1px solid ${oc.gray[4]}`,\n      marginTop: 8,\n      paddingTop: 16,\n    }}\n  >\n    <a\n      href=\"https://blog.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.blog\")}\n    </a>\n    <a\n      href=\"https://howto.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.howto\")}\n    </a>\n    <a\n      href=\"https://github.com/excalidraw/excalidraw/issues\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.github\")}\n    </a>\n  </div>\n);\n\nexport const ShortcutsDialog = ({ onClose }: { onClose?: () => void }) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      <Dialog\n        maxWidth={900}\n        onCloseRequest={handleClose}\n        title={t(\"shortcutsDialog.title\")}\n      >\n        <Columns>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.shapes\")}>\n              <Shortcut label={t(\"toolBar.selection\")} shortcuts={[\"S\", \"1\"]} />\n              <Shortcut label={t(\"toolBar.rectangle\")} shortcuts={[\"R\", \"2\"]} />\n              <Shortcut label={t(\"toolBar.diamond\")} shortcuts={[\"D\", \"3\"]} />\n              <Shortcut label={t(\"toolBar.ellipse\")} shortcuts={[\"E\", \"4\"]} />\n              <Shortcut label={t(\"toolBar.arrow\")} shortcuts={[\"A\", \"5\"]} />\n              <Shortcut label={t(\"toolBar.line\")} shortcuts={[\"L\", \"6\"]} />\n              <Shortcut label={t(\"toolBar.draw\")} shortcuts={[\"X\", \"7\"]} />\n              <Shortcut label={t(\"toolBar.text\")} shortcuts={[\"T\", \"8\"]} />\n              <Shortcut\n                label={t(\"shortcutsDialog.textNewLine\")}\n                shortcuts={[\n                  getShortcutKey(\"Enter\"),\n                  getShortcutKey(\"Shift+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.textFinish\")}\n                shortcuts={[\n                  getShortcutKey(\"Esc\"),\n                  getShortcutKey(\"CtrlOrCmd+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedArrow\")}\n                shortcuts={[\n                  \"A\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedLine\")}\n                shortcuts={[\n                  \"L\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut label={t(\"toolBar.lock\")} shortcuts={[\"Q\"]} />\n            </ShortcutIsland>\n            <ShortcutIsland caption={t(\"shortcutsDialog.view\")}>\n              <Shortcut\n                label={t(\"buttons.zoomIn\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd++\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.zoomOut\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+-\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.resetZoom\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+0\")]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.zoomToFit\")}\n                shortcuts={[\"Shift+1\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleFullScreen\")}\n                shortcuts={[\"F\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleZenMode\")}\n                shortcuts={[getShortcutKey(\"Alt+Z\")]}\n              />\n              <Shortcut\n                label={t(\"labels.toggleGridMode\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+'\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.editor\")}>\n              <Shortcut\n                label={t(\"labels.selectAll\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+A\")]}\n              />\n              <Shortcut\n                label={t(\"labels.moveCanvas\")}\n                shortcuts={[\n                  getShortcutKey(`Space+${t(\"shortcutsDialog.drag\")}`),\n                  getShortcutKey(`Wheel+${t(\"shortcutsDialog.drag\")}`),\n                ]}\n                isOr={true}\n              />\n              <Shortcut\n                label={t(\"labels.copy\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.paste\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyAsPng\")}\n                shortcuts={[getShortcutKey(\"Shift+Alt+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.pasteStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.delete\")}\n                shortcuts={[getShortcutKey(\"Del\")]}\n              />\n              <Shortcut\n                label={t(\"labels.sendToBack\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.bringToFront\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.sendBackward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+[\")]}\n              />\n              <Shortcut\n                label={t(\"labels.bringForward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+]\")]}\n              />\n              <Shortcut\n                label={t(\"labels.duplicateSelection\")}\n                shortcuts={[\n                  getShortcutKey(\"CtrlOrCmd+D\"),\n                  getShortcutKey(`Alt+${t(\"shortcutsDialog.drag\")}`),\n                ]}\n              />\n              <Shortcut\n                label={t(\"buttons.undo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Z\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.redo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Z\")]}\n              />\n              <Shortcut\n                label={t(\"labels.group\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+G\")]}\n              />\n              <Shortcut\n                label={t(\"labels.ungroup\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+G\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n        </Columns>\n        <Footer />\n      </Dialog>\n    </>\n  );\n};\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// https://github.com/tholman/github-corners\nexport const GitHubCorner = React.memo(() => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 250 250\"\n    className=\"github-corner rtl-mirror\"\n  >\n    <a\n      href=\"https://github.com/excalidraw/excalidraw\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      aria-label=\"GitHub repository\"\n    >\n      <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill={oc.gray[6]} />\n      <path\n        className=\"octo-arm\"\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n        style={{ transformOrigin: \"130px 106px\" }}\n        fill={oc.white}\n      />\n      <path\n        className=\"octo-body\"\n        d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\"\n        fill={oc.white}\n      />\n    </a>\n  </svg>\n));\n","import \"./Tooltip.scss\";\n\nimport React from \"react\";\n\ntype TooltipProps = {\n  children: React.ReactNode;\n  label: string;\n};\n\nexport const Tooltip = ({ children, label }: TooltipProps) => (\n  <div className=\"Tooltip\">\n    <span className=\"Tooltip__label\">{label}</span>\n    {children}\n  </div>\n);\n","import React from \"react\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { exportCanvas } from \"../data\";\n\nimport { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport { Island } from \"./Island\";\nimport Stack from \"./Stack\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { UserList } from \"./UserList\";\nimport { LockIcon } from \"./LockIcon\";\nimport { ExportDialog, ExportCB } from \"./ExportDialog\";\nimport { LanguageList } from \"./LanguageList\";\nimport { t, languages, setLanguage } from \"../i18n\";\nimport { HintViewer } from \"./HintViewer\";\nimport useIsMobile from \"../is-mobile\";\n\nimport { ExportType } from \"../scene/types\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { ZoomActions, SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ShortcutsDialog } from \"./ShortcutsDialog\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { CLASSES } from \"../constants\";\nimport { shield } from \"./icons\";\nimport { GitHubCorner } from \"./GitHubCorner\";\nimport { Tooltip } from \"./Tooltip\";\n\nimport \"./LayerUI.scss\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  canvas: HTMLCanvasElement | null;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n  zenModeEnabled: boolean;\n  toggleZenMode: () => void;\n  lng: string;\n}\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  setAppState,\n  canvas,\n  elements,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n  zenModeEnabled,\n  toggleZenMode,\n}: LayerUIProps) => {\n  const isMobile = useIsMobile();\n\n  // TODO: Extend tooltip component and use here.\n  const renderEncryptedIcon = () => (\n    <a\n      className={`encrypted-icon tooltip zen-mode-visibility ${\n        zenModeEnabled ? \"zen-mode-visibility--hidden\" : \"\"\n      }`}\n      href=\"https://blog.excalidraw.com/end-to-end-encryption/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <span className=\"tooltip-text\" dir=\"auto\">\n        {t(\"encrypted.tooltip\")}\n      </span>\n      {shield}\n    </a>\n  );\n\n  const renderExportDialog = () => {\n    const createExporter = (type: ExportType): ExportCB => (\n      exportedElements,\n      scale,\n    ) => {\n      if (canvas) {\n        exportCanvas(type, exportedElements, appState, canvas, {\n          exportBackground: appState.exportBackground,\n          name: appState.name,\n          viewBackgroundColor: appState.viewBackgroundColor,\n          scale,\n          shouldAddWatermark: appState.shouldAddWatermark,\n        });\n      }\n    };\n    return (\n      <ExportDialog\n        elements={elements}\n        appState={appState}\n        actionManager={actionManager}\n        onExportToPng={createExporter(\"png\")}\n        onExportToSvg={createExporter(\"svg\")}\n        onExportToClipboard={createExporter(\"clipboard\")}\n        onExportToBackend={(exportedElements) => {\n          if (canvas) {\n            exportCanvas(\n              \"backend\",\n              exportedElements,\n              {\n                ...appState,\n                selectedElementIds: {},\n              },\n              canvas,\n              appState,\n            );\n          }\n        }}\n      />\n    );\n  };\n\n  const renderCanvasActions = () => (\n    <Section\n      heading=\"canvasActions\"\n      className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`}\n    >\n      {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n      <Island padding={4} style={{ zIndex: 1 }}>\n        <Stack.Col gap={4}>\n          <Stack.Row gap={1} justifyContent=\"space-between\">\n            {actionManager.renderAction(\"loadScene\")}\n            {actionManager.renderAction(\"saveScene\")}\n            {actionManager.renderAction(\"saveAsScene\")}\n            {renderExportDialog()}\n            {actionManager.renderAction(\"clearCanvas\")}\n            <RoomDialog\n              isCollaborating={appState.isCollaborating}\n              collaboratorCount={appState.collaborators.size}\n              username={appState.username}\n              onUsernameChange={onUsernameChange}\n              onRoomCreate={onRoomCreate}\n              onRoomDestroy={onRoomDestroy}\n            />\n          </Stack.Row>\n          {actionManager.renderAction(\"changeViewBackgroundColor\")}\n        </Stack.Col>\n      </Island>\n    </Section>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section\n      heading=\"selectedShapeActions\"\n      className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`}\n    >\n      <Island className={CLASSES.SHAPE_ACTIONS_MENU} padding={4}>\n        <SelectedShapeActions\n          appState={appState}\n          elements={elements}\n          renderAction={actionManager.renderAction}\n          elementType={appState.elementType}\n        />\n      </Island>\n    </Section>\n  );\n\n  const renderFixedSideContainer = () => {\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(\n      appState,\n      elements,\n    );\n    return (\n      <FixedSideContainer side=\"top\">\n        <HintViewer appState={appState} elements={elements} />\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col\n            gap={4}\n            className={zenModeEnabled && \"disable-pointerEvents\"}\n          >\n            {renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          <Section heading=\"shapes\">\n            {(heading) => (\n              <Stack.Col gap={4} align=\"start\">\n                <Stack.Row gap={1}>\n                  <Island padding={1} className={zenModeEnabled && \"zen-mode\"}>\n                    {heading}\n                    <Stack.Row gap={1}>\n                      <ShapesSwitcher\n                        elementType={appState.elementType}\n                        setAppState={setAppState}\n                      />\n                    </Stack.Row>\n                  </Island>\n                  <LockIcon\n                    zenModeEnabled={zenModeEnabled}\n                    checked={appState.elementLocked}\n                    onChange={onLockToggle}\n                    title={t(\"toolBar.lock\")}\n                  />\n                </Stack.Row>\n              </Stack.Col>\n            )}\n          </Section>\n          <UserList\n            className={`zen-mode-transition ${\n              zenModeEnabled && \"transition-right\"\n            }`}\n          >\n            {Array.from(appState.collaborators)\n              // Collaborator is either not initialized or is actually the current user.\n              .filter(([_, client]) => Object.keys(client).length !== 0)\n              .map(([clientId, client]) => (\n                <Tooltip\n                  label={client.username || \"Unknown user\"}\n                  key={clientId}\n                >\n                  {actionManager.renderAction(\"goToCollaborator\", clientId)}\n                </Tooltip>\n              ))}\n          </UserList>\n        </div>\n      </FixedSideContainer>\n    );\n  };\n\n  const renderBottomAppMenu = () => {\n    return (\n      <div\n        className={`App-menu App-menu_bottom zen-mode-transition ${\n          zenModeEnabled && \"App-menu_bottom--transition-left\"\n        }`}\n      >\n        <Stack.Col gap={2}>\n          <Section heading=\"canvasActions\">\n            <Island padding={1}>\n              <ZoomActions\n                renderAction={actionManager.renderAction}\n                zoom={appState.zoom}\n              />\n            </Island>\n            {renderEncryptedIcon()}\n          </Section>\n        </Stack.Col>\n      </div>\n    );\n  };\n\n  const renderFooter = () => (\n    <footer role=\"contentinfo\" className=\"layer-ui__wrapper__footer\">\n      <div\n        className={`zen-mode-transition ${\n          zenModeEnabled && \"transition-right disable-pointerEvents\"\n        }`}\n      >\n        <LanguageList\n          onChange={async (lng) => {\n            await setLanguage(lng);\n            setAppState({});\n          }}\n          languages={languages}\n          floating\n        />\n        {actionManager.renderAction(\"toggleShortcuts\")}\n      </div>\n      <button\n        className={`disable-zen-mode ${\n          zenModeEnabled && \"disable-zen-mode--visible\"\n        }`}\n        onClick={toggleZenMode}\n      >\n        {t(\"buttons.exitZenMode\")}\n      </button>\n      {appState.scrolledOutside && (\n        <button\n          className=\"scroll-back-to-content\"\n          onClick={() => {\n            setAppState({\n              ...calculateScrollCenter(elements, appState, canvas),\n            });\n          }}\n        >\n          {t(\"buttons.scrollBackToContent\")}\n        </button>\n      )}\n    </footer>\n  );\n\n  return isMobile ? (\n    <MobileMenu\n      appState={appState}\n      elements={elements}\n      actionManager={actionManager}\n      exportButton={renderExportDialog()}\n      setAppState={setAppState}\n      onUsernameChange={onUsernameChange}\n      onRoomCreate={onRoomCreate}\n      onRoomDestroy={onRoomDestroy}\n      onLockToggle={onLockToggle}\n      canvas={canvas}\n    />\n  ) : (\n    <div className=\"layer-ui__wrapper\">\n      {appState.isLoading && <LoadingMessage />}\n      {appState.errorMessage && (\n        <ErrorDialog\n          message={appState.errorMessage}\n          onClose={() => setAppState({ errorMessage: null })}\n        />\n      )}\n      {appState.showShortcutsDialog && (\n        <ShortcutsDialog\n          onClose={() => setAppState({ showShortcutsDialog: null })}\n        />\n      )}\n      {renderFixedSideContainer()}\n      {renderBottomAppMenu()}\n      {\n        <aside\n          className={`layer-ui__wrapper__github-corner zen-mode-transition ${\n            zenModeEnabled && \"transition-right\"\n          }`}\n        >\n          <GitHubCorner />\n        </aside>\n      }\n      {renderFooter()}\n    </div>\n  );\n};\n\nconst areEqual = (prev: LayerUIProps, next: LayerUIProps) => {\n  const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n    const {\n      draggingElement,\n      resizingElement,\n      multiElement,\n      editingElement,\n      isResizing,\n      cursorX,\n      cursorY,\n      ...ret\n    } = appState;\n    return ret;\n  };\n  const prevAppState = getNecessaryObj(prev.appState);\n  const nextAppState = getNecessaryObj(next.appState);\n\n  const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n\n  return (\n    prev.lng === next.lng &&\n    prev.elements === next.elements &&\n    keys.every((key) => prevAppState[key] === nextAppState[key])\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n","import React from \"react\";\n\nimport rough from \"roughjs/bin/rough\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { simplify, Point } from \"points-on-curve\";\nimport { FlooredNumber, SocketUpdateData } from \"../types\";\n\nimport {\n  newElement,\n  newTextElement,\n  duplicateElement,\n  resizeTest,\n  isInvisiblySmallElement,\n  isTextElement,\n  textWysiwyg,\n  getCommonBounds,\n  getCursorForResizingElement,\n  getPerfectElementSize,\n  getNormalizedDimensions,\n  getElementMap,\n  getDrawingVersion,\n  getSyncableElements,\n  newLinearElement,\n  resizeElements,\n  getElementWithResizeHandler,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n  getResizeHandlerFromCoords,\n  isNonDeletedElement,\n  updateTextElement,\n  dragSelectedElements,\n  getDragOffsetXY,\n  dragNewElement,\n} from \"../element\";\nimport {\n  getElementsWithinSelection,\n  isOverScrollBars,\n  getElementAtPosition,\n  getElementContainingPosition,\n  getNormalizedZoom,\n  getSelectedElements,\n  globalSceneState,\n  isSomeElementSelected,\n  calculateScrollCenter,\n} from \"../scene\";\nimport {\n  decryptAESGEM,\n  saveToLocalStorage,\n  loadScene,\n  loadFromBlob,\n  SOCKET_SERVER,\n  SocketUpdateDataSource,\n  exportCanvas,\n} from \"../data\";\nimport Portal from \"./Portal\";\n\nimport { renderScene } from \"../renderer\";\nimport { AppState, GestureEvent, Gesture } from \"../types\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  NonDeleted,\n} from \"../element/types\";\n\nimport { distance2d, isPathALoop, getGridPoint } from \"../math\";\n\nimport {\n  isWritableElement,\n  isInputLike,\n  isToolIcon,\n  debounce,\n  distance,\n  resetCursor,\n  viewportCoordsToSceneCoords,\n  sceneCoordsToViewportCoords,\n  setCursorForShape,\n} from \"../utils\";\nimport {\n  KEYS,\n  isArrowKey,\n  getResizeCenterPointKey,\n  getResizeWithSidesSameLengthKey,\n  getRotateWithDiscreteAngleKey,\n} from \"../keys\";\n\nimport { findShapeByKey, shapesShortcutKeys } from \"../shapes\";\nimport { createHistory, SceneHistory } from \"../history\";\n\nimport ContextMenu from \"./ContextMenu\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport \"../actions\";\nimport { actions } from \"../actions/register\";\n\nimport { ActionResult } from \"../actions/types\";\nimport { getDefaultAppState } from \"../appState\";\nimport { t, getLanguage } from \"../i18n\";\n\nimport {\n  copyToAppClipboard,\n  getClipboardContent,\n  probablySupportsClipboardBlob,\n  probablySupportsClipboardWriteText,\n} from \"../clipboard\";\nimport { normalizeScroll } from \"../scene\";\nimport { getCenter, getDistance } from \"../gesture\";\nimport { createUndoAction, createRedoAction } from \"../actions/actionHistory\";\n\nimport {\n  CURSOR_TYPE,\n  ELEMENT_SHIFT_TRANSLATE_AMOUNT,\n  ELEMENT_TRANSLATE_AMOUNT,\n  POINTER_BUTTON,\n  DRAGGING_THRESHOLD,\n  TEXT_TO_CENTER_SNAP_THRESHOLD,\n  LINE_CONFIRM_THRESHOLD,\n  SCENE,\n  EVENT,\n  ENV,\n  CANVAS_ONLY_ACTIONS,\n  DEFAULT_VERTICAL_ALIGN,\n  GRID_SIZE,\n} from \"../constants\";\nimport {\n  INITAL_SCENE_UPDATE_TIMEOUT,\n  TAP_TWICE_TIMEOUT,\n  SYNC_FULL_SCENE_INTERVAL_MS,\n  TOUCH_CTX_MENU_TIMEOUT,\n} from \"../time_constants\";\n\nimport LayerUI from \"./LayerUI\";\nimport { ScrollBars, SceneState } from \"../scene/types\";\nimport { generateCollaborationLink, getCollaborationLinkData } from \"../data\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { SceneStateCallbackRemover } from \"../scene/globalScene\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { actionFinalize, actionDeleteSelected } from \"../actions\";\nimport {\n  restoreUsernameFromLocalStorage,\n  saveUsernameToLocalStorage,\n} from \"../data/localStorage\";\n\nimport throttle from \"lodash.throttle\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  getSelectedGroupIds,\n  selectGroupsForSelectedElements,\n  isElementInGroup,\n  getSelectedGroupIdForElement,\n} from \"../groups\";\n\n/**\n * @param func handler taking at most single parameter (event).\n */\nconst withBatchedUpdates = <\n  TFunction extends ((event: any) => void) | (() => void)\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) =>\n  ((event) => {\n    unstable_batchedUpdates(func as TFunction, event);\n  }) as TFunction;\n\nconst { history } = createHistory();\n\nlet didTapTwice: boolean = false;\nlet tappedTwiceTimer = 0;\nlet cursorX = 0;\nlet cursorY = 0;\nlet isHoldingSpace: boolean = false;\nlet isPanning: boolean = false;\nlet isDraggingScrollBar: boolean = false;\nlet currentScrollBars: ScrollBars = { horizontal: null, vertical: null };\nlet touchTimeout = 0;\nlet touchMoving = false;\n\nlet lastPointerUp: ((event: any) => void) | null = null;\nconst gesture: Gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nclass App extends React.Component<any, AppState> {\n  canvas: HTMLCanvasElement | null = null;\n  rc: RoughCanvas | null = null;\n  portal: Portal = new Portal(this);\n  lastBroadcastedOrReceivedSceneVersion: number = -1;\n  broadcastedElementVersions: Map<string, number> = new Map();\n  removeSceneCallback: SceneStateCallbackRemover | null = null;\n  unmounted: boolean = false;\n  actionManager: ActionManager;\n\n  public state: AppState = {\n    ...getDefaultAppState(),\n    isLoading: true,\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.actionManager = new ActionManager(\n      this.syncActionResult,\n      () => this.state,\n      () => globalSceneState.getElementsIncludingDeleted(),\n    );\n    this.actionManager.registerAll(actions);\n\n    this.actionManager.registerAction(createUndoAction(history));\n    this.actionManager.registerAction(createRedoAction(history));\n  }\n\n  public render() {\n    const { zenModeEnabled } = this.state;\n    const canvasDOMWidth = window.innerWidth;\n    const canvasDOMHeight = window.innerHeight;\n\n    const canvasScale = window.devicePixelRatio;\n\n    const canvasWidth = canvasDOMWidth * canvasScale;\n    const canvasHeight = canvasDOMHeight * canvasScale;\n\n    return (\n      <div className=\"excalidraw\">\n        <LayerUI\n          canvas={this.canvas}\n          appState={this.state}\n          setAppState={this.setAppState}\n          actionManager={this.actionManager}\n          elements={globalSceneState.getElements()}\n          onRoomCreate={this.openPortal}\n          onRoomDestroy={this.closePortal}\n          onUsernameChange={(username) => {\n            saveUsernameToLocalStorage(username);\n            this.setState({\n              username,\n            });\n          }}\n          onLockToggle={this.toggleLock}\n          zenModeEnabled={zenModeEnabled}\n          toggleZenMode={this.toggleZenMode}\n          lng={getLanguage().lng}\n        />\n        <main>\n          <canvas\n            id=\"canvas\"\n            style={{\n              width: canvasDOMWidth,\n              height: canvasDOMHeight,\n            }}\n            width={canvasWidth}\n            height={canvasHeight}\n            ref={this.handleCanvasRef}\n            onContextMenu={this.handleCanvasContextMenu}\n            onPointerDown={this.handleCanvasPointerDown}\n            onDoubleClick={this.handleCanvasDoubleClick}\n            onPointerMove={this.handleCanvasPointerMove}\n            onPointerUp={this.removePointer}\n            onPointerCancel={this.removePointer}\n            onTouchMove={this.handleTouchMove}\n            onDrop={this.handleCanvasOnDrop}\n          >\n            {t(\"labels.drawingCanvas\")}\n          </canvas>\n        </main>\n      </div>\n    );\n  }\n\n  private syncActionResult = withBatchedUpdates((res: ActionResult) => {\n    if (this.unmounted) {\n      return;\n    }\n\n    let editingElement: AppState[\"editingElement\"] | null = null;\n    if (res.elements) {\n      res.elements.forEach((element) => {\n        if (\n          this.state.editingElement?.id === element.id &&\n          this.state.editingElement !== element &&\n          isNonDeletedElement(element)\n        ) {\n          editingElement = element;\n        }\n      });\n      globalSceneState.replaceAllElements(res.elements);\n      if (res.commitToHistory) {\n        history.resumeRecording();\n      }\n    }\n\n    if (res.appState || editingElement) {\n      if (res.commitToHistory) {\n        history.resumeRecording();\n      }\n      this.setState(\n        (state) => ({\n          ...res.appState,\n          editingElement:\n            editingElement || res.appState?.editingElement || null,\n          isCollaborating: state.isCollaborating,\n          collaborators: state.collaborators,\n        }),\n        () => {\n          if (res.syncHistory) {\n            history.setCurrentState(\n              this.state,\n              globalSceneState.getElementsIncludingDeleted(),\n            );\n          }\n        },\n      );\n    }\n  });\n\n  // Lifecycle\n\n  private onBlur = withBatchedUpdates(() => {\n    isHoldingSpace = false;\n    this.saveDebounced();\n    this.saveDebounced.flush();\n  });\n\n  private onUnload = () => {\n    this.destroySocketClient();\n    this.onBlur();\n  };\n\n  private disableEvent: EventHandlerNonNull = (event) => {\n    event.preventDefault();\n  };\n\n  private onFontLoaded = () => {\n    globalSceneState.getElementsIncludingDeleted().forEach((element) => {\n      if (isTextElement(element)) {\n        invalidateShapeForElement(element);\n      }\n    });\n    this.onSceneUpdated();\n  };\n\n  private initializeScene = async () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const id = searchParams.get(\"id\");\n    const jsonMatch = window.location.hash.match(\n      /^#json=([0-9]+),([a-zA-Z0-9_-]+)$/,\n    );\n\n    const isCollaborationScene = getCollaborationLinkData(window.location.href);\n\n    if (!isCollaborationScene) {\n      let scene: ResolutionType<typeof loadScene> | undefined;\n      // Backwards compatibility with legacy url format\n      if (id) {\n        scene = await loadScene(id);\n      } else if (jsonMatch) {\n        scene = await loadScene(jsonMatch[1], jsonMatch[2]);\n      } else {\n        scene = await loadScene(null);\n      }\n      if (scene) {\n        this.syncActionResult(scene);\n      }\n    }\n\n    if (this.state.isLoading) {\n      this.setState({ isLoading: false });\n    }\n\n    // run this last else the `isLoading` state\n    if (isCollaborationScene) {\n      this.initializeSocketClient({ showLoadingState: true });\n    }\n  };\n\n  public async componentDidMount() {\n    if (\n      process.env.NODE_ENV === ENV.TEST ||\n      process.env.NODE_ENV === ENV.DEVELOPMENT\n    ) {\n      const setState = this.setState.bind(this);\n      Object.defineProperties(window.h, {\n        state: {\n          configurable: true,\n          get: () => {\n            return this.state;\n          },\n        },\n        setState: {\n          configurable: true,\n          value: (...args: Parameters<typeof setState>) => {\n            return this.setState(...args);\n          },\n        },\n        app: {\n          configurable: true,\n          value: this,\n        },\n      });\n    }\n\n    this.removeSceneCallback = globalSceneState.addCallback(\n      this.onSceneUpdated,\n    );\n\n    this.addEventListeners();\n    this.initializeScene();\n  }\n\n  public componentWillUnmount() {\n    this.unmounted = true;\n    this.removeSceneCallback!();\n    this.removeEventListeners();\n\n    clearTimeout(touchTimeout);\n  }\n\n  private onResize = withBatchedUpdates(() => {\n    globalSceneState\n      .getElementsIncludingDeleted()\n      .forEach((element) => invalidateShapeForElement(element));\n    this.setState({});\n  });\n\n  private removeEventListeners() {\n    document.removeEventListener(EVENT.COPY, this.onCopy);\n    document.removeEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.removeEventListener(EVENT.CUT, this.onCut);\n\n    document.removeEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.removeEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n      false,\n    );\n    document.removeEventListener(EVENT.KEYUP, this.onKeyUp);\n    window.removeEventListener(EVENT.RESIZE, this.onResize, false);\n    window.removeEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.removeEventListener(EVENT.BLUR, this.onBlur, false);\n    window.removeEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.removeEventListener(EVENT.DROP, this.disableEvent, false);\n\n    document.removeEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.removeEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n  }\n\n  private addEventListeners() {\n    document.addEventListener(EVENT.COPY, this.onCopy);\n    document.addEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.addEventListener(EVENT.CUT, this.onCut);\n\n    document.addEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.addEventListener(EVENT.KEYUP, this.onKeyUp, { passive: true });\n    document.addEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n    );\n    window.addEventListener(EVENT.RESIZE, this.onResize, false);\n    window.addEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.addEventListener(EVENT.BLUR, this.onBlur, false);\n    window.addEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.addEventListener(EVENT.DROP, this.disableEvent, false);\n\n    // rerender text elements on font load to fix #637 && #1553\n    document.fonts?.addEventListener?.(\"loadingdone\", this.onFontLoaded);\n\n    // Safari-only desktop pinch zoom\n    document.addEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.addEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n  }\n\n  private beforeUnload = withBatchedUpdates((event: BeforeUnloadEvent) => {\n    if (\n      this.state.isCollaborating &&\n      globalSceneState.getElements().length > 0\n    ) {\n      event.preventDefault();\n      // NOTE: modern browsers no longer allow showing a custom message here\n      event.returnValue = \"\";\n    }\n  });\n\n  queueBroadcastAllElements = throttle(() => {\n    this.broadcastScene(SCENE.UPDATE, /* syncAll */ true);\n  }, SYNC_FULL_SCENE_INTERVAL_MS);\n\n  componentDidUpdate() {\n    if (this.state.isCollaborating && !this.portal.socket) {\n      this.initializeSocketClient({ showLoadingState: true });\n    }\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.selectedElementIds[this.state.editingLinearElement.elementId]\n    ) {\n      // defer so that the commitToHistory flag isn't reset via current update\n      setTimeout(() => {\n        this.actionManager.executeAction(actionFinalize);\n      });\n    }\n\n    const cursorButton: {\n      [id: string]: string | undefined;\n    } = {};\n    const pointerViewportCoords: SceneState[\"remotePointerViewportCoords\"] = {};\n    const remoteSelectedElementIds: SceneState[\"remoteSelectedElementIds\"] = {};\n    const pointerUsernames: { [id: string]: string } = {};\n    this.state.collaborators.forEach((user, socketID) => {\n      if (user.selectedElementIds) {\n        for (const id of Object.keys(user.selectedElementIds)) {\n          if (!(id in remoteSelectedElementIds)) {\n            remoteSelectedElementIds[id] = [];\n          }\n          remoteSelectedElementIds[id].push(socketID);\n        }\n      }\n      if (!user.pointer) {\n        return;\n      }\n      if (user.username) {\n        pointerUsernames[socketID] = user.username;\n      }\n      pointerViewportCoords[socketID] = sceneCoordsToViewportCoords(\n        {\n          sceneX: user.pointer.x,\n          sceneY: user.pointer.y,\n        },\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n      cursorButton[socketID] = user.button;\n    });\n    const elements = globalSceneState.getElements();\n    const { atLeastOneVisibleElement, scrollBars } = renderScene(\n      elements.filter((element) => {\n        // don't render text element that's being currently edited (it's\n        //  rendered on remote only)\n        return (\n          !this.state.editingElement ||\n          this.state.editingElement.type !== \"text\" ||\n          element.id !== this.state.editingElement.id\n        );\n      }),\n      this.state,\n      this.state.selectionElement,\n      window.devicePixelRatio,\n      this.rc!,\n      this.canvas!,\n      {\n        scrollX: this.state.scrollX,\n        scrollY: this.state.scrollY,\n        viewBackgroundColor: this.state.viewBackgroundColor,\n        zoom: this.state.zoom,\n        remotePointerViewportCoords: pointerViewportCoords,\n        remotePointerButton: cursorButton,\n        remoteSelectedElementIds: remoteSelectedElementIds,\n        remotePointerUsernames: pointerUsernames,\n        shouldCacheIgnoreZoom: this.state.shouldCacheIgnoreZoom,\n      },\n      {\n        renderOptimizations: true,\n      },\n    );\n    if (scrollBars) {\n      currentScrollBars = scrollBars;\n    }\n    const scrolledOutside =\n      // hide when editing text\n      this.state.editingElement?.type === \"text\"\n        ? false\n        : !atLeastOneVisibleElement && elements.length > 0;\n    if (this.state.scrolledOutside !== scrolledOutside) {\n      this.setState({ scrolledOutside: scrolledOutside });\n    }\n    this.saveDebounced();\n\n    if (\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()) >\n      this.lastBroadcastedOrReceivedSceneVersion\n    ) {\n      this.broadcastScene(SCENE.UPDATE, /* syncAll */ false);\n      this.queueBroadcastAllElements();\n    }\n\n    history.record(this.state, globalSceneState.getElementsIncludingDeleted());\n  }\n\n  // Copy/paste\n\n  private onCut = withBatchedUpdates((event: ClipboardEvent) => {\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    this.actionManager.executeAction(actionDeleteSelected);\n    event.preventDefault();\n  });\n\n  private onCopy = withBatchedUpdates((event: ClipboardEvent) => {\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    event.preventDefault();\n  });\n\n  private copyAll = () => {\n    copyToAppClipboard(globalSceneState.getElements(), this.state);\n  };\n\n  private copyToClipboardAsPng = () => {\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    exportCanvas(\n      \"clipboard\",\n      selectedElements.length ? selectedElements : elements,\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private copyToClipboardAsSvg = () => {\n    const selectedElements = getSelectedElements(\n      globalSceneState.getElements(),\n      this.state,\n    );\n    exportCanvas(\n      \"clipboard-svg\",\n      selectedElements.length\n        ? selectedElements\n        : globalSceneState.getElements(),\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private static resetTapTwice() {\n    didTapTwice = false;\n  }\n\n  private onTapStart = (event: TouchEvent) => {\n    if (!didTapTwice) {\n      didTapTwice = true;\n      clearTimeout(tappedTwiceTimer);\n      tappedTwiceTimer = window.setTimeout(\n        App.resetTapTwice,\n        TAP_TWICE_TIMEOUT,\n      );\n      return;\n    }\n    // insert text only if we tapped twice with a single finger\n    // event.touches.length === 1 will also prevent inserting text when user's zooming\n    if (didTapTwice && event.touches.length === 1) {\n      const [touch] = event.touches;\n      // @ts-ignore\n      this.handleCanvasDoubleClick({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n      });\n      didTapTwice = false;\n      clearTimeout(tappedTwiceTimer);\n    }\n    event.preventDefault();\n    if (event.touches.length === 2) {\n      this.setState({\n        selectedElementIds: {},\n      });\n    }\n  };\n\n  private onTapEnd = (event: TouchEvent) => {\n    event.preventDefault();\n    if (event.touches.length > 0) {\n      const { previousSelectedElementIds } = this.state;\n      this.setState({\n        previousSelectedElementIds: {},\n        selectedElementIds: previousSelectedElementIds,\n      });\n    }\n  };\n\n  private pasteFromClipboard = withBatchedUpdates(\n    async (event: ClipboardEvent | null) => {\n      // #686\n      const target = document.activeElement;\n      const elementUnderCursor = document.elementFromPoint(cursorX, cursorY);\n      if (\n        // if no ClipboardEvent supplied, assume we're pasting via contextMenu\n        //  thus these checks don't make sense\n        event &&\n        (!(elementUnderCursor instanceof HTMLCanvasElement) ||\n          isWritableElement(target))\n      ) {\n        return;\n      }\n      const data = await getClipboardContent(\n        this.state,\n        cursorX,\n        cursorY,\n        event,\n      );\n      if (data.error) {\n        alert(data.error);\n      } else if (data.elements) {\n        this.addElementsFromPaste(data.elements);\n      } else if (data.text) {\n        this.addTextFromPaste(data.text);\n      }\n      this.selectShapeTool(\"selection\");\n      event?.preventDefault();\n    },\n  );\n\n  private addElementsFromPaste = (\n    clipboardElements: readonly ExcalidrawElement[],\n  ) => {\n    const [minX, minY, maxX, maxY] = getCommonBounds(clipboardElements);\n\n    const elementsCenterX = distance(minX, maxX) / 2;\n    const elementsCenterY = distance(minY, maxY) / 2;\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const dx = x - elementsCenterX;\n    const dy = y - elementsCenterY;\n    const groupIdMap = new Map();\n\n    const newElements = clipboardElements.map((element) =>\n      duplicateElement(this.state.editingGroupId, groupIdMap, element, {\n        x: element.x + dx - minX,\n        y: element.y + dy - minY,\n      }),\n    );\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      ...newElements,\n    ]);\n    history.resumeRecording();\n    this.setState({\n      selectedElementIds: newElements.reduce((map, element) => {\n        map[element.id] = true;\n        return map;\n      }, {} as any),\n    });\n  };\n\n  private addTextFromPaste(text: any) {\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const element = newTextElement({\n      x: x,\n      y: y,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      text: text,\n      fontSize: this.state.currentItemFontSize,\n      fontFamily: this.state.currentItemFontFamily,\n      textAlign: this.state.currentItemTextAlign,\n      verticalAlign: DEFAULT_VERTICAL_ALIGN,\n    });\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      element,\n    ]);\n    this.setState({ selectedElementIds: { [element.id]: true } });\n    history.resumeRecording();\n  }\n\n  // Collaboration\n\n  setAppState = (obj: any) => {\n    this.setState(obj);\n  };\n\n  removePointer = (event: React.PointerEvent<HTMLElement>) => {\n    // remove touch handler for context menu on touch devices\n    if (event.pointerType === \"touch\" && touchTimeout) {\n      clearTimeout(touchTimeout);\n      touchMoving = false;\n    }\n\n    gesture.pointers.delete(event.pointerId);\n  };\n\n  openPortal = async () => {\n    window.history.pushState(\n      {},\n      \"Excalidraw\",\n      await generateCollaborationLink(),\n    );\n    this.initializeSocketClient({ showLoadingState: false });\n  };\n\n  closePortal = () => {\n    window.history.pushState({}, \"Excalidraw\", window.location.origin);\n    this.destroySocketClient();\n  };\n\n  toggleLock = () => {\n    this.setState((prevState) => ({\n      elementLocked: !prevState.elementLocked,\n      elementType: prevState.elementLocked\n        ? \"selection\"\n        : prevState.elementType,\n    }));\n  };\n\n  toggleZenMode = () => {\n    this.setState({\n      zenModeEnabled: !this.state.zenModeEnabled,\n    });\n  };\n\n  toggleGridMode = () => {\n    this.setState({\n      gridSize: this.state.gridSize ? null : GRID_SIZE,\n    });\n  };\n\n  private destroySocketClient = () => {\n    this.setState({\n      isCollaborating: false,\n      collaborators: new Map(),\n    });\n    this.portal.close();\n  };\n\n  private initializeSocketClient = async (opts: {\n    showLoadingState: boolean;\n  }) => {\n    if (this.portal.socket) {\n      return;\n    }\n    const roomMatch = getCollaborationLinkData(window.location.href);\n    if (roomMatch) {\n      const initialize = () => {\n        this.portal.socketInitialized = true;\n        clearTimeout(initializationTimer);\n        if (this.state.isLoading && !this.unmounted) {\n          this.setState({ isLoading: false });\n        }\n      };\n      // fallback in case you're not alone in the room but still don't receive\n      //  initial SCENE_UPDATE message\n      const initializationTimer = setTimeout(\n        initialize,\n        INITAL_SCENE_UPDATE_TIMEOUT,\n      );\n\n      const updateScene = (\n        decryptedData: SocketUpdateDataSource[SCENE.INIT | SCENE.UPDATE],\n        { scrollToContent = false }: { scrollToContent?: boolean } = {},\n      ) => {\n        const { elements: remoteElements } = decryptedData.payload;\n\n        if (scrollToContent) {\n          this.setState({\n            ...this.state,\n            ...calculateScrollCenter(\n              remoteElements.filter((element: { isDeleted: boolean }) => {\n                return !element.isDeleted;\n              }),\n              this.state,\n              this.canvas,\n            ),\n          });\n        }\n\n        // Perform reconciliation - in collaboration, if we encounter\n        // elements with more staler versions than ours, ignore them\n        // and keep ours.\n        if (\n          globalSceneState.getElementsIncludingDeleted() == null ||\n          globalSceneState.getElementsIncludingDeleted().length === 0\n        ) {\n          globalSceneState.replaceAllElements(remoteElements);\n        } else {\n          // create a map of ids so we don't have to iterate\n          // over the array more than once.\n          const localElementMap = getElementMap(\n            globalSceneState.getElementsIncludingDeleted(),\n          );\n\n          // Reconcile\n          const newElements = remoteElements\n            .reduce((elements, element) => {\n              // if the remote element references one that's currently\n              //  edited on local, skip it (it'll be added in the next\n              //  step)\n              if (\n                element.id === this.state.editingElement?.id ||\n                element.id === this.state.resizingElement?.id ||\n                element.id === this.state.draggingElement?.id\n              ) {\n                return elements;\n              }\n\n              if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version > element.version\n              ) {\n                elements.push(localElementMap[element.id]);\n                delete localElementMap[element.id];\n              } else if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version === element.version &&\n                localElementMap[element.id].versionNonce !==\n                  element.versionNonce\n              ) {\n                // resolve conflicting edits deterministically by taking the one with the lowest versionNonce\n                if (\n                  localElementMap[element.id].versionNonce <\n                  element.versionNonce\n                ) {\n                  elements.push(localElementMap[element.id]);\n                } else {\n                  // it should be highly unlikely that the two versionNonces are the same. if we are\n                  // really worried about this, we can replace the versionNonce with the socket id.\n                  elements.push(element);\n                }\n                delete localElementMap[element.id];\n              } else {\n                elements.push(element);\n                delete localElementMap[element.id];\n              }\n\n              return elements;\n            }, [] as Mutable<typeof remoteElements>)\n            // add local elements that weren't deleted or on remote\n            .concat(...Object.values(localElementMap));\n\n          // Avoid broadcasting to the rest of the collaborators the scene\n          // we just received!\n          // Note: this needs to be set before replaceAllElements as it\n          // syncronously calls render.\n          this.lastBroadcastedOrReceivedSceneVersion = getDrawingVersion(\n            newElements,\n          );\n\n          globalSceneState.replaceAllElements(newElements);\n        }\n\n        // We haven't yet implemented multiplayer undo functionality, so we clear the undo stack\n        // when we receive any messages from another peer. This UX can be pretty rough -- if you\n        // undo, a user makes a change, and then try to redo, your element(s) will be lost. However,\n        // right now we think this is the right tradeoff.\n        history.clear();\n        if (!this.portal.socketInitialized) {\n          initialize();\n        }\n      };\n\n      const { default: socketIOClient }: any = await import(\n        /* webpackChunkName: \"socketIoClient\" */ \"socket.io-client\"\n      );\n\n      this.portal.open(\n        socketIOClient(SOCKET_SERVER),\n        roomMatch[1],\n        roomMatch[2],\n      );\n\n      // All socket listeners are moving to Portal\n      this.portal.socket!.on(\n        \"client-broadcast\",\n        async (encryptedData: ArrayBuffer, iv: Uint8Array) => {\n          if (!this.portal.roomKey) {\n            return;\n          }\n          const decryptedData = await decryptAESGEM(\n            encryptedData,\n            this.portal.roomKey,\n            iv,\n          );\n\n          switch (decryptedData.type) {\n            case \"INVALID_RESPONSE\":\n              return;\n            case SCENE.INIT: {\n              if (!this.portal.socketInitialized) {\n                updateScene(decryptedData, { scrollToContent: true });\n              }\n              break;\n            }\n            case SCENE.UPDATE:\n              updateScene(decryptedData);\n              break;\n            case \"MOUSE_LOCATION\": {\n              const {\n                socketID,\n                pointerCoords,\n                button,\n                username,\n                selectedElementIds,\n              } = decryptedData.payload;\n              this.setState((state) => {\n                if (!state.collaborators.has(socketID)) {\n                  state.collaborators.set(socketID, {});\n                }\n                const user = state.collaborators.get(socketID)!;\n                user.pointer = pointerCoords;\n                user.button = button;\n                user.selectedElementIds = selectedElementIds;\n                user.username = username;\n                state.collaborators.set(socketID, user);\n                return state;\n              });\n              break;\n            }\n          }\n        },\n      );\n      this.portal.socket!.on(\"first-in-room\", () => {\n        if (this.portal.socket) {\n          this.portal.socket.off(\"first-in-room\");\n        }\n        initialize();\n      });\n\n      this.setState({\n        isCollaborating: true,\n        isLoading: opts.showLoadingState ? true : this.state.isLoading,\n      });\n    }\n  };\n\n  // Portal-only\n  setCollaborators(sockets: string[]) {\n    this.setState((state) => {\n      const collaborators: typeof state.collaborators = new Map();\n      for (const socketID of sockets) {\n        if (state.collaborators.has(socketID)) {\n          collaborators.set(socketID, state.collaborators.get(socketID)!);\n        } else {\n          collaborators.set(socketID, {});\n        }\n      }\n      return {\n        ...state,\n        collaborators,\n      };\n    });\n  }\n\n  private broadcastMouseLocation = (payload: {\n    pointerCoords: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointerCoords\"];\n    button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n  }) => {\n    if (this.portal.socket?.id) {\n      const data: SocketUpdateDataSource[\"MOUSE_LOCATION\"] = {\n        type: \"MOUSE_LOCATION\",\n        payload: {\n          socketID: this.portal.socket.id,\n          pointerCoords: payload.pointerCoords,\n          button: payload.button || \"up\",\n          selectedElementIds: this.state.selectedElementIds,\n          username: this.state.username,\n        },\n      };\n      return this.portal._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n\n  // maybe should move to Portal\n  broadcastScene = (sceneType: SCENE.INIT | SCENE.UPDATE, syncAll: boolean) => {\n    if (sceneType === SCENE.INIT && !syncAll) {\n      throw new Error(\"syncAll must be true when sending SCENE.INIT\");\n    }\n\n    let syncableElements = getSyncableElements(\n      globalSceneState.getElementsIncludingDeleted(),\n    );\n\n    if (!syncAll) {\n      // sync out only the elements we think we need to to save bandwidth.\n      // periodically we'll resync the whole thing to make sure no one diverges\n      // due to a dropped message (server goes down etc).\n      syncableElements = syncableElements.filter(\n        (syncableElement) =>\n          !this.broadcastedElementVersions.has(syncableElement.id) ||\n          syncableElement.version >\n            this.broadcastedElementVersions.get(syncableElement.id)!,\n      );\n    }\n\n    const data: SocketUpdateDataSource[typeof sceneType] = {\n      type: sceneType,\n      payload: {\n        elements: syncableElements,\n      },\n    };\n    this.lastBroadcastedOrReceivedSceneVersion = Math.max(\n      this.lastBroadcastedOrReceivedSceneVersion,\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()),\n    );\n    for (const syncableElement of syncableElements) {\n      this.broadcastedElementVersions.set(\n        syncableElement.id,\n        syncableElement.version,\n      );\n    }\n    return this.portal._broadcastSocketData(data as SocketUpdateData);\n  };\n\n  private onSceneUpdated = () => {\n    this.setState({});\n  };\n\n  private updateCurrentCursorPosition = withBatchedUpdates(\n    (event: MouseEvent) => {\n      cursorX = event.x;\n      cursorY = event.y;\n    },\n  );\n\n  restoreUserName() {\n    const username = restoreUsernameFromLocalStorage();\n\n    if (username !== null) {\n      this.setState({\n        username,\n      });\n    }\n  }\n\n  // Input handling\n\n  private onKeyDown = withBatchedUpdates((event: KeyboardEvent) => {\n    // ensures we don't prevent devTools select-element feature\n    if (event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"C\") {\n      return;\n    }\n\n    if (\n      (isWritableElement(event.target) && event.key !== KEYS.ESCAPE) ||\n      // case: using arrows to move between buttons\n      (isArrowKey(event.key) && isInputLike(event.target))\n    ) {\n      return;\n    }\n\n    if (event.key === KEYS.QUESTION_MARK) {\n      this.setState({\n        showShortcutsDialog: true,\n      });\n    }\n\n    if (\n      !event[KEYS.CTRL_OR_CMD] &&\n      event.altKey &&\n      event.keyCode === KEYS.Z_KEY_CODE\n    ) {\n      this.toggleZenMode();\n    }\n\n    if (event[KEYS.CTRL_OR_CMD] && event.keyCode === KEYS.GRID_KEY_CODE) {\n      this.toggleGridMode();\n    }\n\n    if (event.code === \"KeyC\" && event.altKey && event.shiftKey) {\n      this.copyToClipboardAsPng();\n      event.preventDefault();\n      return;\n    }\n\n    if (this.actionManager.handleKeyDown(event)) {\n      return;\n    }\n\n    const shape = findShapeByKey(event.key);\n\n    if (isArrowKey(event.key)) {\n      const step =\n        (this.state.gridSize &&\n          (event.shiftKey ? ELEMENT_TRANSLATE_AMOUNT : this.state.gridSize)) ||\n        (event.shiftKey\n          ? ELEMENT_SHIFT_TRANSLATE_AMOUNT\n          : ELEMENT_TRANSLATE_AMOUNT);\n      globalSceneState.replaceAllElements(\n        globalSceneState.getElementsIncludingDeleted().map((el) => {\n          if (this.state.selectedElementIds[el.id]) {\n            const update: { x?: number; y?: number } = {};\n            if (event.key === KEYS.ARROW_LEFT) {\n              update.x = el.x - step;\n            } else if (event.key === KEYS.ARROW_RIGHT) {\n              update.x = el.x + step;\n            } else if (event.key === KEYS.ARROW_UP) {\n              update.y = el.y - step;\n            } else if (event.key === KEYS.ARROW_DOWN) {\n              update.y = el.y + step;\n            }\n            return newElementWith(el, update);\n          }\n          return el;\n        }),\n      );\n      event.preventDefault();\n    } else if (event.key === KEYS.ENTER) {\n      const selectedElements = getSelectedElements(\n        globalSceneState.getElements(),\n        this.state,\n      );\n\n      if (\n        selectedElements.length === 1 &&\n        isLinearElement(selectedElements[0])\n      ) {\n        if (\n          !this.state.editingLinearElement ||\n          this.state.editingLinearElement.elementId !== selectedElements[0].id\n        ) {\n          history.resumeRecording();\n          this.setState({\n            editingLinearElement: new LinearElementEditor(selectedElements[0]),\n          });\n        }\n      } else if (\n        selectedElements.length === 1 &&\n        !isLinearElement(selectedElements[0])\n      ) {\n        const selectedElement = selectedElements[0];\n        this.startTextEditing({\n          sceneX: selectedElement.x + selectedElement.width / 2,\n          sceneY: selectedElement.y + selectedElement.height / 2,\n        });\n        event.preventDefault();\n        return;\n      }\n    } else if (\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      this.state.draggingElement === null\n    ) {\n      if (shapesShortcutKeys.includes(event.key.toLowerCase())) {\n        this.selectShapeTool(shape);\n      } else if (event.key === \"q\") {\n        this.toggleLock();\n      }\n    }\n    if (event.key === KEYS.SPACE && gesture.pointers.size === 0) {\n      isHoldingSpace = true;\n      document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n    }\n  });\n\n  private onKeyUp = withBatchedUpdates((event: KeyboardEvent) => {\n    if (event.key === KEYS.SPACE) {\n      if (this.state.elementType === \"selection\") {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n      }\n      isHoldingSpace = false;\n    }\n  });\n\n  private selectShapeTool(elementType: AppState[\"elementType\"]) {\n    if (!isHoldingSpace) {\n      setCursorForShape(elementType);\n    }\n    if (isToolIcon(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    if (elementType !== \"selection\") {\n      this.setState({\n        elementType,\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    } else {\n      this.setState({ elementType });\n    }\n  }\n\n  private onGestureStart = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    this.setState({\n      selectedElementIds: {},\n    });\n    gesture.initialScale = this.state.zoom;\n  });\n\n  private onGestureChange = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      zoom: getNormalizedZoom(gesture.initialScale! * event.scale),\n    });\n  });\n\n  private onGestureEnd = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    const { previousSelectedElementIds } = this.state;\n    this.setState({\n      previousSelectedElementIds: {},\n      selectedElementIds: previousSelectedElementIds,\n    });\n    gesture.initialScale = null;\n  });\n\n  private setElements = (elements: readonly ExcalidrawElement[]) => {\n    globalSceneState.replaceAllElements(elements);\n  };\n\n  private handleTextWysiwyg(\n    element: ExcalidrawTextElement,\n    {\n      isExistingElement = false,\n    }: {\n      isExistingElement?: boolean;\n    },\n  ) {\n    const resetSelection = () => {\n      this.setState({\n        draggingElement: null,\n        editingElement: null,\n      });\n    };\n\n    const updateElement = (text: string) => {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id && isTextElement(_element)) {\n            return updateTextElement(_element, {\n              text,\n              isDeleted: !text.trim(),\n            });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    textWysiwyg({\n      id: element.id,\n      zoom: this.state.zoom,\n      getViewportCoords: (x, y) => {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          { sceneX: x, sceneY: y },\n          this.state,\n          this.canvas,\n          window.devicePixelRatio,\n        );\n        return [viewportX, viewportY];\n      },\n      onChange: withBatchedUpdates((text) => {\n        updateElement(text);\n      }),\n      onSubmit: withBatchedUpdates((text) => {\n        updateElement(text);\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [element.id]: true,\n          },\n        }));\n        if (this.state.elementLocked) {\n          setCursorForShape(this.state.elementType);\n        }\n        history.resumeRecording();\n        resetSelection();\n      }),\n      onCancel: withBatchedUpdates(() => {\n        updateElement(\"\");\n        if (isExistingElement) {\n          history.resumeRecording();\n        }\n        resetSelection();\n      }),\n    });\n    // deselect all other elements when inserting text\n    this.setState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      editingGroupId: null,\n    });\n\n    // do an initial update to re-initialize element position since we were\n    //  modifying element's x/y for sake of editor (case: syncing to remote)\n    updateElement(element.text);\n  }\n\n  private getTextElementAtPosition(\n    x: number,\n    y: number,\n  ): NonDeleted<ExcalidrawTextElement> | null {\n    const element = getElementAtPosition(\n      globalSceneState.getElements(),\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n\n    if (element && isTextElement(element) && !element.isDeleted) {\n      return element;\n    }\n    return null;\n  }\n\n  private startTextEditing = ({\n    sceneX,\n    sceneY,\n    insertAtParentCenter = true,\n  }: {\n    /** X position to insert text at */\n    sceneX: number;\n    /** Y position to insert text at */\n    sceneY: number;\n    /** whether to attempt to insert at element center if applicable */\n    insertAtParentCenter?: boolean;\n  }) => {\n    const existingTextElement = this.getTextElementAtPosition(sceneX, sceneY);\n\n    const parentCenterPosition =\n      insertAtParentCenter &&\n      this.getTextWysiwygSnappedToCenterPosition(\n        sceneX,\n        sceneY,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n    const element = existingTextElement\n      ? existingTextElement\n      : newTextElement({\n          x: parentCenterPosition\n            ? parentCenterPosition.elementCenterX\n            : sceneX,\n          y: parentCenterPosition\n            ? parentCenterPosition.elementCenterY\n            : sceneY,\n          strokeColor: this.state.currentItemStrokeColor,\n          backgroundColor: this.state.currentItemBackgroundColor,\n          fillStyle: this.state.currentItemFillStyle,\n          strokeWidth: this.state.currentItemStrokeWidth,\n          strokeStyle: this.state.currentItemStrokeStyle,\n          roughness: this.state.currentItemRoughness,\n          opacity: this.state.currentItemOpacity,\n          text: \"\",\n          fontSize: this.state.currentItemFontSize,\n          fontFamily: this.state.currentItemFontFamily,\n          textAlign: parentCenterPosition\n            ? \"center\"\n            : this.state.currentItemTextAlign,\n          verticalAlign: parentCenterPosition\n            ? \"middle\"\n            : DEFAULT_VERTICAL_ALIGN,\n        });\n\n    this.setState({ editingElement: element });\n\n    if (existingTextElement) {\n      // if text element is no longer centered to a container, reset\n      //  verticalAlign to default because it's currently internal-only\n      if (!parentCenterPosition || element.textAlign !== \"center\") {\n        mutateElement(element, { verticalAlign: DEFAULT_VERTICAL_ALIGN });\n      }\n    } else {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted(),\n        element,\n      ]);\n\n      // case: creating new text not centered to parent elemenent → offset Y\n      //  so that the text is centered to cursor position\n      if (!parentCenterPosition) {\n        mutateElement(element, {\n          y: element.y - element.baseline / 2,\n        });\n      }\n    }\n\n    this.setState({\n      editingElement: element,\n    });\n\n    this.handleTextWysiwyg(element, {\n      isExistingElement: !!existingTextElement,\n    });\n  };\n\n  private handleCanvasDoubleClick = (\n    event: React.MouseEvent<HTMLCanvasElement>,\n  ) => {\n    // case: double-clicking with arrow/line tool selected would both create\n    //  text and enter multiElement mode\n    if (this.state.multiElement) {\n      return;\n    }\n\n    const selectedElements = getSelectedElements(\n      globalSceneState.getElements(),\n      this.state,\n    );\n\n    if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n      if (\n        !this.state.editingLinearElement ||\n        this.state.editingLinearElement.elementId !== selectedElements[0].id\n      ) {\n        history.resumeRecording();\n        this.setState({\n          editingLinearElement: new LinearElementEditor(selectedElements[0]),\n        });\n      }\n      return;\n    }\n\n    resetCursor();\n\n    const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const selectedGroupIds = getSelectedGroupIds(this.state);\n\n    if (selectedGroupIds.length > 0) {\n      const elements = globalSceneState.getElements();\n      const hitElement = getElementAtPosition(\n        elements,\n        this.state,\n        sceneX,\n        sceneY,\n        this.state.zoom,\n      );\n\n      const selectedGroupId =\n        hitElement &&\n        getSelectedGroupIdForElement(hitElement, this.state.selectedGroupIds);\n\n      if (selectedGroupId) {\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              editingGroupId: selectedGroupId,\n              selectedElementIds: { [hitElement!.id]: true },\n              selectedGroupIds: {},\n            },\n            globalSceneState.getElements(),\n          ),\n        );\n        return;\n      }\n    }\n\n    resetCursor();\n\n    this.startTextEditing({\n      sceneX,\n      sceneY,\n      insertAtParentCenter: !event.altKey,\n    });\n  };\n\n  private handleCanvasPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.savePointer(event.clientX, event.clientY, this.state.cursorButton);\n\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n\n    if (gesture.pointers.size === 2) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter!.x;\n      const deltaY = center.y - gesture.lastCenter!.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance!;\n\n      this.setState({\n        scrollX: normalizeScroll(this.state.scrollX + deltaX / this.state.zoom),\n        scrollY: normalizeScroll(this.state.scrollY + deltaY / this.state.zoom),\n        zoom: getNormalizedZoom(gesture.initialScale! * scaleFactor),\n        shouldCacheIgnoreZoom: true,\n      });\n      this.resetShouldCacheIgnoreZoomDebounced();\n    } else {\n      gesture.lastCenter = gesture.initialDistance = gesture.initialScale = null;\n    }\n\n    if (isHoldingSpace || isPanning || isDraggingScrollBar) {\n      return;\n    }\n    const {\n      isOverHorizontalScrollBar,\n      isOverVerticalScrollBar,\n    } = isOverScrollBars(currentScrollBars, event.clientX, event.clientY);\n    const isOverScrollBar =\n      isOverVerticalScrollBar || isOverHorizontalScrollBar;\n    if (!this.state.draggingElement && !this.state.multiElement) {\n      if (isOverScrollBar) {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n      }\n    }\n\n    const { x: scenePointerX, y: scenePointerY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    if (\n      this.state.editingLinearElement &&\n      this.state.editingLinearElement.draggingElementPointIndex === null\n    ) {\n      const editingLinearElement = LinearElementEditor.handlePointerMove(\n        event,\n        scenePointerX,\n        scenePointerY,\n        this.state.editingLinearElement,\n      );\n      if (editingLinearElement !== this.state.editingLinearElement) {\n        this.setState({ editingLinearElement });\n      }\n    }\n\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n      const { x: rx, y: ry } = multiElement;\n\n      const { points, lastCommittedPoint } = multiElement;\n      const lastPoint = points[points.length - 1];\n\n      setCursorForShape(this.state.elementType);\n\n      if (lastPoint === lastCommittedPoint) {\n        // if we haven't yet created a temp point and we're beyond commit-zone\n        //  threshold, add a point\n        if (\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastPoint[0],\n            lastPoint[1],\n          ) >= LINE_CONFIRM_THRESHOLD\n        ) {\n          mutateElement(multiElement, {\n            points: [...points, [scenePointerX - rx, scenePointerY - ry]],\n          });\n        } else {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          // in this branch, we're inside the commit zone, and no uncommitted\n          //  point exists. Thus do nothing (don't add/remove points).\n        }\n      } else {\n        // cursor moved inside commit zone, and there's uncommitted point,\n        //  thus remove it\n        if (\n          points.length > 2 &&\n          lastCommittedPoint &&\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastCommittedPoint[0],\n            lastCommittedPoint[1],\n          ) < LINE_CONFIRM_THRESHOLD\n        ) {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          mutateElement(multiElement, {\n            points: points.slice(0, -1),\n          });\n        } else {\n          if (isPathALoop(points)) {\n            document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          }\n          // update last uncommitted point\n          mutateElement(multiElement, {\n            points: [\n              ...points.slice(0, -1),\n              [scenePointerX - rx, scenePointerY - ry],\n            ],\n          });\n        }\n      }\n      return;\n    }\n\n    const hasDeselectedButton = Boolean(event.buttons);\n    if (\n      hasDeselectedButton ||\n      (this.state.elementType !== \"selection\" &&\n        this.state.elementType !== \"text\")\n    ) {\n      return;\n    }\n\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    if (\n      selectedElements.length === 1 &&\n      !isOverScrollBar &&\n      !this.state.editingLinearElement\n    ) {\n      const elementWithResizeHandler = getElementWithResizeHandler(\n        elements,\n        this.state,\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (elementWithResizeHandler && elementWithResizeHandler.resizeHandle) {\n        document.documentElement.style.cursor = getCursorForResizingElement(\n          elementWithResizeHandler,\n        );\n        return;\n      }\n    } else if (selectedElements.length > 1 && !isOverScrollBar) {\n      const resizeHandle = getResizeHandlerFromCoords(\n        getCommonBounds(selectedElements),\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (resizeHandle) {\n        document.documentElement.style.cursor = getCursorForResizingElement({\n          resizeHandle,\n        });\n        return;\n      }\n    }\n    const hitElement = getElementAtPosition(\n      elements,\n      this.state,\n      scenePointerX,\n      scenePointerY,\n      this.state.zoom,\n    );\n    if (this.state.elementType === \"text\") {\n      document.documentElement.style.cursor = isTextElement(hitElement)\n        ? CURSOR_TYPE.TEXT\n        : CURSOR_TYPE.CROSSHAIR;\n    } else {\n      document.documentElement.style.cursor =\n        hitElement && !isOverScrollBar ? \"move\" : \"\";\n    }\n  };\n\n  // set touch moving for mobile context menu\n  private handleTouchMove = (event: React.TouchEvent<HTMLCanvasElement>) => {\n    touchMoving = true;\n  };\n\n  private handleCanvasPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.persist();\n\n    // deal with opening context menu on touch devices\n    if (event.pointerType === \"touch\") {\n      touchMoving = false;\n\n      // open the context menu with the first touch's clientX and clientY\n      // if the touch is not moving\n      touchTimeout = window.setTimeout(() => {\n        if (!touchMoving) {\n          this.openContextMenu({\n            clientX: event.clientX,\n            clientY: event.clientY,\n          });\n        }\n      }, TOUCH_CTX_MENU_TIMEOUT);\n    }\n\n    if (lastPointerUp !== null) {\n      // Unfortunately, sometimes we don't get a pointerup after a pointerdown,\n      // this can happen when a contextual menu or alert is triggered. In order to avoid\n      // being in a weird state, we clean up on the next pointerdown\n      lastPointerUp(event);\n    }\n\n    if (isPanning) {\n      return;\n    }\n\n    this.setState({\n      lastPointerDownWith: event.pointerType,\n      cursorButton: \"down\",\n    });\n    this.savePointer(event.clientX, event.clientY, \"down\");\n\n    // pan canvas on wheel button drag or space+drag\n    if (\n      gesture.pointers.size === 0 &&\n      (event.button === POINTER_BUTTON.WHEEL ||\n        (event.button === POINTER_BUTTON.MAIN && isHoldingSpace))\n    ) {\n      isPanning = true;\n\n      let nextPastePrevented = false;\n      const isLinux = /Linux/.test(window.navigator.platform);\n\n      document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n      let { clientX: lastX, clientY: lastY } = event;\n      const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n        const deltaX = lastX - event.clientX;\n        const deltaY = lastY - event.clientY;\n        lastX = event.clientX;\n        lastY = event.clientY;\n\n        /*\n         * Prevent paste event if we move while middle clicking on Linux.\n         * See issue #1383.\n         */\n        if (\n          isLinux &&\n          !nextPastePrevented &&\n          (Math.abs(deltaX) > 1 || Math.abs(deltaY) > 1)\n        ) {\n          nextPastePrevented = true;\n\n          /* Prevent the next paste event */\n          const preventNextPaste = (event: ClipboardEvent) => {\n            document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n            event.stopPropagation();\n          };\n\n          /*\n           * Reenable next paste in case of disabled middle click paste for\n           * any reason:\n           * - rigth click paste\n           * - empty clipboard\n           */\n          const enableNextPaste = () => {\n            setTimeout(() => {\n              document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n              window.removeEventListener(EVENT.POINTER_UP, enableNextPaste);\n            }, 100);\n          };\n\n          document.body.addEventListener(EVENT.PASTE, preventNextPaste);\n          window.addEventListener(EVENT.POINTER_UP, enableNextPaste);\n        }\n\n        this.setState({\n          scrollX: normalizeScroll(\n            this.state.scrollX - deltaX / this.state.zoom,\n          ),\n          scrollY: normalizeScroll(\n            this.state.scrollY - deltaY / this.state.zoom,\n          ),\n        });\n      });\n      const teardown = withBatchedUpdates(\n        (lastPointerUp = () => {\n          lastPointerUp = null;\n          isPanning = false;\n          if (!isHoldingSpace) {\n            setCursorForShape(this.state.elementType);\n          }\n          this.setState({\n            cursorButton: \"up\",\n          });\n          this.savePointer(event.clientX, event.clientY, \"up\");\n          window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n          window.removeEventListener(EVENT.POINTER_UP, teardown);\n          window.removeEventListener(EVENT.BLUR, teardown);\n        }),\n      );\n      window.addEventListener(EVENT.BLUR, teardown);\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove, {\n        passive: true,\n      });\n      window.addEventListener(EVENT.POINTER_UP, teardown);\n      return;\n    }\n\n    // only handle left mouse button or touch\n    if (\n      event.button !== POINTER_BUTTON.MAIN &&\n      event.button !== POINTER_BUTTON.TOUCH\n    ) {\n      return;\n    }\n\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = this.state.zoom;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values()),\n      );\n    }\n\n    // fixes pointermove causing selection of UI texts #32\n    event.preventDefault();\n    // Preventing the event above disables default behavior\n    //  of defocusing potentially focused element, which is what we\n    //  want when clicking inside the canvas.\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n\n    // don't select while panning\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n\n    // Handle scrollbars dragging\n    const {\n      isOverHorizontalScrollBar,\n      isOverVerticalScrollBar,\n    } = isOverScrollBars(currentScrollBars, event.clientX, event.clientY);\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n    let lastX = x;\n    let lastY = y;\n\n    if (\n      (isOverHorizontalScrollBar || isOverVerticalScrollBar) &&\n      !this.state.multiElement\n    ) {\n      isDraggingScrollBar = true;\n      lastX = event.clientX;\n      lastY = event.clientY;\n      const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n        const target = event.target;\n        if (!(target instanceof HTMLElement)) {\n          return;\n        }\n\n        if (isOverHorizontalScrollBar) {\n          const x = event.clientX;\n          const dx = x - lastX;\n          this.setState({\n            scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n          });\n          lastX = x;\n          return;\n        }\n\n        if (isOverVerticalScrollBar) {\n          const y = event.clientY;\n          const dy = y - lastY;\n          this.setState({\n            scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n          });\n          lastY = y;\n        }\n      });\n\n      const onPointerUp = withBatchedUpdates(() => {\n        isDraggingScrollBar = false;\n        setCursorForShape(this.state.elementType);\n        lastPointerUp = null;\n        this.setState({\n          cursorButton: \"up\",\n        });\n        this.savePointer(event.clientX, event.clientY, \"up\");\n        window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n        window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n      });\n\n      lastPointerUp = onPointerUp;\n\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n      return;\n    }\n\n    const originX = x;\n    const originY = y;\n    const [originGridX, originGridY] = getGridPoint(\n      originX,\n      originY,\n      this.state.gridSize,\n    );\n\n    type ResizeTestType = ReturnType<typeof resizeTest>;\n    let resizeHandle: ResizeTestType = false;\n    const setResizeHandle = (nextResizeHandle: ResizeTestType) => {\n      resizeHandle = nextResizeHandle;\n    };\n    let resizeOffsetXY: [number, number] = [0, 0];\n    let resizeArrowDirection: \"origin\" | \"end\" = \"origin\";\n    let isResizingElements = false;\n    let draggingOccurred = false;\n    let dragOffsetXY: [number, number] | null = null;\n    let hitElement: ExcalidrawElement | null = null;\n    let hitElementWasAddedToSelection = false;\n\n    if (this.state.elementType === \"selection\") {\n      const elements = globalSceneState.getElements();\n      const selectedElements = getSelectedElements(elements, this.state);\n      if (selectedElements.length === 1 && !this.state.editingLinearElement) {\n        const elementWithResizeHandler = getElementWithResizeHandler(\n          elements,\n          this.state,\n          x,\n          y,\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (elementWithResizeHandler) {\n          this.setState({\n            resizingElement: elementWithResizeHandler\n              ? elementWithResizeHandler.element\n              : null,\n          });\n          resizeHandle = elementWithResizeHandler.resizeHandle;\n          document.documentElement.style.cursor = getCursorForResizingElement(\n            elementWithResizeHandler,\n          );\n          isResizingElements = true;\n        }\n      } else if (selectedElements.length > 1) {\n        resizeHandle = getResizeHandlerFromCoords(\n          getCommonBounds(selectedElements),\n          x,\n          y,\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (resizeHandle) {\n          document.documentElement.style.cursor = getCursorForResizingElement({\n            resizeHandle,\n          });\n          isResizingElements = true;\n        }\n      }\n      if (isResizingElements) {\n        resizeOffsetXY = getResizeOffsetXY(\n          resizeHandle,\n          selectedElements,\n          x,\n          y,\n        );\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0]) &&\n          selectedElements[0].points.length === 2\n        ) {\n          resizeArrowDirection = getResizeArrowDirection(\n            resizeHandle,\n            selectedElements[0],\n          );\n        }\n      }\n      if (!isResizingElements) {\n        if (this.state.editingLinearElement) {\n          const ret = LinearElementEditor.handlePointerDown(\n            event,\n            this.state,\n            (appState) => this.setState(appState),\n            history,\n            x,\n            y,\n          );\n          if (ret.hitElement) {\n            hitElement = ret.hitElement;\n          }\n          if (ret.didAddPoint) {\n            return;\n          }\n        }\n\n        // hitElement may already be set above, so check first\n        hitElement =\n          hitElement ||\n          getElementAtPosition(elements, this.state, x, y, this.state.zoom);\n\n        // clear selection if shift is not clicked\n        if (\n          !(hitElement && this.state.selectedElementIds[hitElement.id]) &&\n          !event.shiftKey\n        ) {\n          this.setState((prevState) => ({\n            selectedElementIds: {},\n            selectedGroupIds: {},\n            editingGroupId:\n              prevState.editingGroupId &&\n              hitElement &&\n              isElementInGroup(hitElement, prevState.editingGroupId)\n                ? prevState.editingGroupId\n                : null,\n          }));\n          const { selectedElementIds } = this.state;\n          this.setState({\n            selectedElementIds: {},\n            previousSelectedElementIds: selectedElementIds,\n          });\n        }\n\n        // If we click on something\n        if (hitElement) {\n          // deselect if item is selected\n          // if shift is not clicked, this will always return true\n          // otherwise, it will trigger selection based on current\n          // state of the box\n          if (!this.state.selectedElementIds[hitElement.id]) {\n            // if we are currently editing a group, treat all selections outside of the group\n            // as exiting editing mode.\n            if (\n              this.state.editingGroupId &&\n              !isElementInGroup(hitElement, this.state.editingGroupId)\n            ) {\n              this.setState({\n                selectedElementIds: {},\n                selectedGroupIds: {},\n                editingGroupId: null,\n              });\n              return;\n            }\n            this.setState((prevState) => {\n              return selectGroupsForSelectedElements(\n                {\n                  ...prevState,\n                  selectedElementIds: {\n                    ...prevState.selectedElementIds,\n                    [hitElement!.id]: true,\n                  },\n                },\n                globalSceneState.getElements(),\n              );\n            });\n            // TODO: this is strange...\n            globalSceneState.replaceAllElements(\n              globalSceneState.getElementsIncludingDeleted(),\n            );\n            hitElementWasAddedToSelection = true;\n          }\n        }\n\n        const { selectedElementIds } = this.state;\n        this.setState({\n          previousSelectedElementIds: selectedElementIds,\n        });\n      }\n    } else {\n      this.setState({\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    }\n\n    if (this.state.elementType === \"text\") {\n      // if we're currently still editing text, clicking outside\n      //  should only finalize it, not create another (irrespective\n      //  of state.elementLocked)\n      if (this.state.editingElement?.type === \"text\") {\n        return;\n      }\n\n      this.startTextEditing({\n        sceneX: x,\n        sceneY: y,\n        insertAtParentCenter: !event.altKey,\n      });\n\n      resetCursor();\n      if (!this.state.elementLocked) {\n        this.setState({\n          elementType: \"selection\",\n        });\n      }\n      return;\n    } else if (\n      this.state.elementType === \"arrow\" ||\n      this.state.elementType === \"draw\" ||\n      this.state.elementType === \"line\"\n    ) {\n      if (this.state.multiElement) {\n        const { multiElement } = this.state;\n\n        // finalize if completing a loop\n        if (multiElement.type === \"line\" && isPathALoop(multiElement.points)) {\n          mutateElement(multiElement, {\n            lastCommittedPoint:\n              multiElement.points[multiElement.points.length - 1],\n          });\n          this.actionManager.executeAction(actionFinalize);\n          return;\n        }\n\n        const { x: rx, y: ry, lastCommittedPoint } = multiElement;\n\n        // clicking inside commit zone → finalize arrow\n        if (\n          multiElement.points.length > 1 &&\n          lastCommittedPoint &&\n          distance2d(\n            x - rx,\n            y - ry,\n            lastCommittedPoint[0],\n            lastCommittedPoint[1],\n          ) < LINE_CONFIRM_THRESHOLD\n        ) {\n          this.actionManager.executeAction(actionFinalize);\n          return;\n        }\n\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [multiElement.id]: true,\n          },\n        }));\n        // clicking outside commit zone → update reference for last committed\n        //  point\n        mutateElement(multiElement, {\n          lastCommittedPoint:\n            multiElement.points[multiElement.points.length - 1],\n        });\n        document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n      } else {\n        const [gridX, gridY] = getGridPoint(\n          x,\n          y,\n          this.state.elementType === \"draw\" ? null : this.state.gridSize,\n        );\n        const element = newLinearElement({\n          type: this.state.elementType,\n          x: gridX,\n          y: gridY,\n          strokeColor: this.state.currentItemStrokeColor,\n          backgroundColor: this.state.currentItemBackgroundColor,\n          fillStyle: this.state.currentItemFillStyle,\n          strokeWidth: this.state.currentItemStrokeWidth,\n          strokeStyle: this.state.currentItemStrokeStyle,\n          roughness: this.state.currentItemRoughness,\n          opacity: this.state.currentItemOpacity,\n        });\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [element.id]: false,\n          },\n        }));\n        mutateElement(element, {\n          points: [...element.points, [0, 0]],\n        });\n        globalSceneState.replaceAllElements([\n          ...globalSceneState.getElementsIncludingDeleted(),\n          element,\n        ]);\n        this.setState({\n          draggingElement: element,\n          editingElement: element,\n        });\n      }\n    } else {\n      const [gridX, gridY] = getGridPoint(x, y, this.state.gridSize);\n      const element = newElement({\n        type: this.state.elementType,\n        x: gridX,\n        y: gridY,\n        strokeColor: this.state.currentItemStrokeColor,\n        backgroundColor: this.state.currentItemBackgroundColor,\n        fillStyle: this.state.currentItemFillStyle,\n        strokeWidth: this.state.currentItemStrokeWidth,\n        strokeStyle: this.state.currentItemStrokeStyle,\n        roughness: this.state.currentItemRoughness,\n        opacity: this.state.currentItemOpacity,\n      });\n\n      if (element.type === \"selection\") {\n        this.setState({\n          selectionElement: element,\n          draggingElement: element,\n        });\n      } else {\n        globalSceneState.replaceAllElements([\n          ...globalSceneState.getElementsIncludingDeleted(),\n          element,\n        ]);\n        this.setState({\n          multiElement: null,\n          draggingElement: element,\n          editingElement: element,\n        });\n      }\n    }\n\n    let selectedElementWasDuplicated = false;\n\n    const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n      // We need to initialize dragOffsetXY only after we've updated\n      // `state.selectedElementIds` on pointerDown. Doing it here in pointerMove\n      // event handler should hopefully ensure we're already working with\n      // the updated state.\n      if (dragOffsetXY === null) {\n        dragOffsetXY = getDragOffsetXY(\n          getSelectedElements(globalSceneState.getElements(), this.state),\n          originX,\n          originY,\n        );\n      }\n\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (isOverHorizontalScrollBar) {\n        const x = event.clientX;\n        const dx = x - lastX;\n        this.setState({\n          scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n        });\n        lastX = x;\n        return;\n      }\n\n      if (isOverVerticalScrollBar) {\n        const y = event.clientY;\n        const dy = y - lastY;\n        this.setState({\n          scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n        });\n        lastY = y;\n        return;\n      }\n\n      const { x, y } = viewportCoordsToSceneCoords(\n        event,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n      const [gridX, gridY] = getGridPoint(x, y, this.state.gridSize);\n\n      // for arrows/lines, don't start dragging until a given threshold\n      //  to ensure we don't create a 2-point arrow by mistake when\n      //  user clicks mouse in a way that it moves a tiny bit (thus\n      //  triggering pointermove)\n      if (\n        !draggingOccurred &&\n        (this.state.elementType === \"arrow\" ||\n          this.state.elementType === \"line\")\n      ) {\n        if (distance2d(x, y, originX, originY) < DRAGGING_THRESHOLD) {\n          return;\n        }\n      }\n\n      if (isResizingElements) {\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        this.setState({\n          isResizing: resizeHandle && resizeHandle !== \"rotation\",\n          isRotating: resizeHandle === \"rotation\",\n        });\n        const [resizeX, resizeY] = getGridPoint(\n          x - resizeOffsetXY[0],\n          y - resizeOffsetXY[1],\n          this.state.gridSize,\n        );\n        if (\n          resizeElements(\n            resizeHandle,\n            setResizeHandle,\n            selectedElements,\n            resizeArrowDirection,\n            getRotateWithDiscreteAngleKey(event),\n            getResizeWithSidesSameLengthKey(event),\n            getResizeCenterPointKey(event),\n            resizeX,\n            resizeY,\n          )\n        ) {\n          return;\n        }\n      }\n\n      if (this.state.editingLinearElement) {\n        const didDrag = LinearElementEditor.handlePointDragging(\n          this.state,\n          (appState) => this.setState(appState),\n          x,\n          y,\n          lastX,\n          lastY,\n        );\n\n        if (didDrag) {\n          lastX = x;\n          lastY = y;\n          return;\n        }\n      }\n\n      if (hitElement && this.state.selectedElementIds[hitElement.id]) {\n        // Marking that click was used for dragging to check\n        // if elements should be deselected on pointerup\n        draggingOccurred = true;\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        if (selectedElements.length > 0) {\n          const [dragX, dragY] = getGridPoint(\n            x - dragOffsetXY[0],\n            y - dragOffsetXY[1],\n            this.state.gridSize,\n          );\n          dragSelectedElements(selectedElements, dragX, dragY);\n\n          // We duplicate the selected element if alt is pressed on pointer move\n          if (event.altKey && !selectedElementWasDuplicated) {\n            // Move the currently selected elements to the top of the z index stack, and\n            // put the duplicates where the selected elements used to be.\n            // (the origin point where the dragging started)\n\n            selectedElementWasDuplicated = true;\n\n            const nextElements = [];\n            const elementsToAppend = [];\n            const groupIdMap = new Map();\n            for (const element of globalSceneState.getElementsIncludingDeleted()) {\n              if (\n                this.state.selectedElementIds[element.id] ||\n                // case: the state.selectedElementIds might not have been\n                //  updated yet by the time this mousemove event is fired\n                (element.id === hitElement.id && hitElementWasAddedToSelection)\n              ) {\n                const duplicatedElement = duplicateElement(\n                  this.state.editingGroupId,\n                  groupIdMap,\n                  element,\n                );\n                const [originDragX, originDragY] = getGridPoint(\n                  originX - dragOffsetXY[0],\n                  originY - dragOffsetXY[1],\n                  this.state.gridSize,\n                );\n                mutateElement(duplicatedElement, {\n                  x: duplicatedElement.x + (originDragX - dragX),\n                  y: duplicatedElement.y + (originDragY - dragY),\n                });\n                nextElements.push(duplicatedElement);\n                elementsToAppend.push(element);\n              } else {\n                nextElements.push(element);\n              }\n            }\n            globalSceneState.replaceAllElements([\n              ...nextElements,\n              ...elementsToAppend,\n            ]);\n          }\n          return;\n        }\n      }\n\n      // It is very important to read this.state within each move event,\n      // otherwise we would read a stale one!\n      const draggingElement = this.state.draggingElement;\n      if (!draggingElement) {\n        return;\n      }\n\n      if (isLinearElement(draggingElement)) {\n        draggingOccurred = true;\n        const points = draggingElement.points;\n        let dx: number;\n        let dy: number;\n        if (draggingElement.type === \"draw\") {\n          dx = x - draggingElement.x;\n          dy = y - draggingElement.y;\n        } else {\n          dx = gridX - draggingElement.x;\n          dy = gridY - draggingElement.y;\n        }\n\n        if (getRotateWithDiscreteAngleKey(event) && points.length === 2) {\n          ({ width: dx, height: dy } = getPerfectElementSize(\n            this.state.elementType,\n            dx,\n            dy,\n          ));\n        }\n\n        if (points.length === 1) {\n          mutateElement(draggingElement, { points: [...points, [dx, dy]] });\n        } else if (points.length > 1) {\n          if (draggingElement.type === \"draw\") {\n            mutateElement(draggingElement, {\n              points: simplify([...(points as Point[]), [dx, dy]], 0.7),\n            });\n          } else {\n            mutateElement(draggingElement, {\n              points: [...points.slice(0, -1), [dx, dy]],\n            });\n          }\n        }\n      } else if (draggingElement.type === \"selection\") {\n        dragNewElement(\n          draggingElement,\n          this.state.elementType,\n          originX,\n          originY,\n          x,\n          y,\n          distance(originX, x),\n          distance(originY, y),\n          getResizeWithSidesSameLengthKey(event),\n          getResizeCenterPointKey(event),\n        );\n      } else {\n        dragNewElement(\n          draggingElement,\n          this.state.elementType,\n          originGridX,\n          originGridY,\n          gridX,\n          gridY,\n          distance(originGridX, gridX),\n          distance(originGridY, gridY),\n          getResizeWithSidesSameLengthKey(event),\n          getResizeCenterPointKey(event),\n        );\n      }\n\n      if (this.state.elementType === \"selection\") {\n        const elements = globalSceneState.getElements();\n        if (!event.shiftKey && isSomeElementSelected(elements, this.state)) {\n          this.setState({\n            selectedElementIds: {},\n            selectedGroupIds: {},\n            editingGroupId: null,\n          });\n        }\n        const elementsWithinSelection = getElementsWithinSelection(\n          elements,\n          draggingElement,\n        );\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                ...elementsWithinSelection.reduce((map, element) => {\n                  map[element.id] = true;\n                  return map;\n                }, {} as any),\n              },\n            },\n            globalSceneState.getElements(),\n          ),\n        );\n      }\n    });\n\n    const onPointerUp = withBatchedUpdates((childEvent: PointerEvent) => {\n      const {\n        draggingElement,\n        resizingElement,\n        multiElement,\n        elementType,\n        elementLocked,\n      } = this.state;\n\n      this.setState({\n        isResizing: false,\n        isRotating: false,\n        resizingElement: null,\n        selectionElement: null,\n        cursorButton: \"up\",\n        // text elements are reset on finalize, and resetting on pointerup\n        //  may cause issues with double taps\n        editingElement:\n          multiElement || isTextElement(this.state.editingElement)\n            ? this.state.editingElement\n            : null,\n      });\n\n      this.savePointer(childEvent.clientX, childEvent.clientY, \"up\");\n\n      // if moving start/end point towards start/end point within threshold,\n      //  close the loop\n      if (this.state.editingLinearElement) {\n        const editingLinearElement = LinearElementEditor.handlePointerUp(\n          this.state.editingLinearElement,\n        );\n        if (editingLinearElement !== this.state.editingLinearElement) {\n          this.setState({ editingLinearElement });\n        }\n      }\n\n      lastPointerUp = null;\n\n      window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n\n      if (draggingElement?.type === \"draw\") {\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n      if (isLinearElement(draggingElement)) {\n        if (draggingElement!.points.length > 1) {\n          history.resumeRecording();\n        }\n        if (!draggingOccurred && draggingElement && !multiElement) {\n          const { x, y } = viewportCoordsToSceneCoords(\n            childEvent,\n            this.state,\n            this.canvas,\n            window.devicePixelRatio,\n          );\n          mutateElement(draggingElement, {\n            points: [\n              ...draggingElement.points,\n              [x - draggingElement.x, y - draggingElement.y],\n            ],\n          });\n          this.setState({\n            multiElement: draggingElement,\n            editingElement: this.state.draggingElement,\n          });\n        } else if (draggingOccurred && !multiElement) {\n          if (!elementLocked) {\n            resetCursor();\n            this.setState((prevState) => ({\n              draggingElement: null,\n              elementType: \"selection\",\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          } else {\n            this.setState((prevState) => ({\n              draggingElement: null,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          }\n        }\n        return;\n      }\n\n      if (\n        elementType !== \"selection\" &&\n        draggingElement &&\n        isInvisiblySmallElement(draggingElement)\n      ) {\n        // remove invisible element which was added in onPointerDown\n        globalSceneState.replaceAllElements(\n          globalSceneState.getElementsIncludingDeleted().slice(0, -1),\n        );\n        this.setState({\n          draggingElement: null,\n        });\n        return;\n      }\n\n      if (draggingElement) {\n        mutateElement(\n          draggingElement,\n          getNormalizedDimensions(draggingElement),\n        );\n      }\n\n      if (resizingElement) {\n        history.resumeRecording();\n      }\n\n      if (resizingElement && isInvisiblySmallElement(resizingElement)) {\n        globalSceneState.replaceAllElements(\n          globalSceneState\n            .getElementsIncludingDeleted()\n            .filter((el) => el.id !== resizingElement.id),\n        );\n      }\n\n      // If click occurred on already selected element\n      // it is needed to remove selection from other elements\n      // or if SHIFT or META key pressed remove selection\n      // from hitted element\n      //\n      // If click occurred and elements were dragged or some element\n      // was added to selection (on pointerdown phase) we need to keep\n      // selection unchanged\n      if (\n        getSelectedGroupIds(this.state).length === 0 &&\n        hitElement &&\n        !draggingOccurred &&\n        !hitElementWasAddedToSelection\n      ) {\n        if (childEvent.shiftKey) {\n          this.setState((prevState) => ({\n            selectedElementIds: {\n              ...prevState.selectedElementIds,\n              [hitElement!.id]: false,\n            },\n          }));\n        } else {\n          this.setState((_prevState) => ({\n            selectedElementIds: { [hitElement!.id]: true },\n          }));\n        }\n      }\n\n      if (draggingElement === null) {\n        // if no element is clicked, clear the selection and redraw\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n        return;\n      }\n\n      if (!elementLocked) {\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [draggingElement.id]: true,\n          },\n        }));\n      }\n\n      if (\n        elementType !== \"selection\" ||\n        isSomeElementSelected(globalSceneState.getElements(), this.state)\n      ) {\n        history.resumeRecording();\n      }\n\n      if (!elementLocked) {\n        resetCursor();\n        this.setState({\n          draggingElement: null,\n          elementType: \"selection\",\n        });\n      } else {\n        this.setState({\n          draggingElement: null,\n        });\n      }\n    });\n\n    lastPointerUp = onPointerUp;\n\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n    window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n  };\n\n  private handleCanvasRef = (canvas: HTMLCanvasElement) => {\n    // canvas is null when unmounting\n    if (canvas !== null) {\n      this.canvas = canvas;\n      this.rc = rough.canvas(this.canvas);\n\n      this.canvas.addEventListener(EVENT.WHEEL, this.handleWheel, {\n        passive: false,\n      });\n      this.canvas.addEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas.addEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    } else {\n      this.canvas?.removeEventListener(EVENT.WHEEL, this.handleWheel);\n      this.canvas?.removeEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas?.removeEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    }\n  };\n\n  private handleCanvasOnDrop = (event: React.DragEvent<HTMLCanvasElement>) => {\n    const file = event.dataTransfer?.files[0];\n    if (\n      file?.type === \"application/json\" ||\n      file?.name.endsWith(\".excalidraw\")\n    ) {\n      this.setState({ isLoading: true });\n      loadFromBlob(file)\n        .then(({ elements, appState }) =>\n          this.syncActionResult({\n            elements,\n            appState: {\n              ...(appState || this.state),\n              isLoading: false,\n            },\n            commitToHistory: false,\n          }),\n        )\n        .catch((error) => {\n          this.setState({ isLoading: false, errorMessage: error.message });\n        });\n    } else {\n      this.setState({\n        isLoading: false,\n        errorMessage: t(\"alerts.couldNotLoadInvalidFile\"),\n      });\n    }\n  };\n\n  private handleCanvasContextMenu = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.preventDefault();\n    this.openContextMenu(event);\n  };\n\n  private openContextMenu = ({\n    clientX,\n    clientY,\n  }: {\n    clientX: number;\n    clientY: number;\n  }) => {\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX, clientY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const elements = globalSceneState.getElements();\n    const element = getElementAtPosition(\n      elements,\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n    if (!element) {\n      ContextMenu.push({\n        options: [\n          navigator.clipboard && {\n            label: t(\"labels.paste\"),\n            action: () => this.pasteFromClipboard(null),\n          },\n          probablySupportsClipboardBlob &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsPng\"),\n              action: this.copyToClipboardAsPng,\n            },\n          probablySupportsClipboardWriteText &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsSvg\"),\n              action: this.copyToClipboardAsSvg,\n            },\n          ...this.actionManager.getContextMenuItems((action) =>\n            CANVAS_ONLY_ACTIONS.includes(action.name),\n          ),\n          {\n            label: t(\"labels.toggleGridMode\"),\n            action: this.toggleGridMode,\n          },\n        ],\n        top: clientY,\n        left: clientX,\n      });\n      return;\n    }\n\n    if (!this.state.selectedElementIds[element.id]) {\n      this.setState({ selectedElementIds: { [element.id]: true } });\n    }\n\n    ContextMenu.push({\n      options: [\n        navigator.clipboard && {\n          label: t(\"labels.copy\"),\n          action: this.copyAll,\n        },\n        navigator.clipboard && {\n          label: t(\"labels.paste\"),\n          action: () => this.pasteFromClipboard(null),\n        },\n        probablySupportsClipboardBlob && {\n          label: t(\"labels.copyAsPng\"),\n          action: this.copyToClipboardAsPng,\n        },\n        probablySupportsClipboardWriteText && {\n          label: t(\"labels.copyAsSvg\"),\n          action: this.copyToClipboardAsSvg,\n        },\n        ...this.actionManager.getContextMenuItems(\n          (action) => !CANVAS_ONLY_ACTIONS.includes(action.name),\n        ),\n      ],\n      top: clientY,\n      left: clientX,\n    });\n  };\n\n  private handleWheel = withBatchedUpdates((event: WheelEvent) => {\n    event.preventDefault();\n    const { deltaX, deltaY } = event;\n    const { selectedElementIds, previousSelectedElementIds } = this.state;\n\n    // note that event.ctrlKey is necessary to handle pinch zooming\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY);\n      const MAX_STEP = 10;\n      let delta = Math.abs(deltaY);\n      if (delta > MAX_STEP) {\n        delta = MAX_STEP;\n      }\n      delta *= sign;\n      if (Object.keys(previousSelectedElementIds).length !== 0) {\n        setTimeout(() => {\n          this.setState({\n            selectedElementIds: previousSelectedElementIds,\n            previousSelectedElementIds: {},\n          });\n        }, 1000);\n      }\n      this.setState(({ zoom }) => ({\n        zoom: getNormalizedZoom(zoom - delta / 100),\n        selectedElementIds: {},\n        previousSelectedElementIds:\n          Object.keys(selectedElementIds).length !== 0\n            ? selectedElementIds\n            : previousSelectedElementIds,\n      }));\n      return;\n    }\n\n    // scroll horizontally when shift pressed\n    if (event.shiftKey) {\n      this.setState(({ zoom, scrollX }) => ({\n        // on Mac, shift+wheel tends to result in deltaX\n        scrollX: normalizeScroll(scrollX - (deltaY || deltaX) / zoom),\n      }));\n      return;\n    }\n\n    this.setState(({ zoom, scrollX, scrollY }) => ({\n      scrollX: normalizeScroll(scrollX - deltaX / zoom),\n      scrollY: normalizeScroll(scrollY - deltaY / zoom),\n    }));\n  });\n\n  private getTextWysiwygSnappedToCenterPosition(\n    x: number,\n    y: number,\n    state: {\n      scrollX: FlooredNumber;\n      scrollY: FlooredNumber;\n      zoom: number;\n    },\n    canvas: HTMLCanvasElement | null,\n    scale: number,\n  ) {\n    const elementClickedInside = getElementContainingPosition(\n      globalSceneState\n        .getElementsIncludingDeleted()\n        .filter((element) => !isTextElement(element)),\n      x,\n      y,\n    );\n    if (elementClickedInside) {\n      const elementCenterX =\n        elementClickedInside.x + elementClickedInside.width / 2;\n      const elementCenterY =\n        elementClickedInside.y + elementClickedInside.height / 2;\n      const distanceToCenter = Math.hypot(\n        x - elementCenterX,\n        y - elementCenterY,\n      );\n      const isSnappedToCenter =\n        distanceToCenter < TEXT_TO_CENTER_SNAP_THRESHOLD;\n      if (isSnappedToCenter) {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          { sceneX: elementCenterX, sceneY: elementCenterY },\n          state,\n          canvas,\n          scale,\n        );\n        return { viewportX, viewportY, elementCenterX, elementCenterY };\n      }\n    }\n  }\n\n  private savePointer = (x: number, y: number, button: \"up\" | \"down\") => {\n    if (!x || !y) {\n      return;\n    }\n    const pointerCoords = viewportCoordsToSceneCoords(\n      { clientX: x, clientY: y },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    if (isNaN(pointerCoords.x) || isNaN(pointerCoords.y)) {\n      // sometimes the pointer goes off screen\n      return;\n    }\n    this.portal.socket &&\n      // do not broadcast when more than 1 pointer since that shows flickering on the other side\n      gesture.pointers.size < 2 &&\n      this.broadcastMouseLocation({\n        pointerCoords,\n        button,\n      });\n  };\n\n  private resetShouldCacheIgnoreZoomDebounced = debounce(() => {\n    this.setState({ shouldCacheIgnoreZoom: false });\n  }, 300);\n\n  private saveDebounced = debounce(() => {\n    saveToLocalStorage(\n      globalSceneState.getElementsIncludingDeleted(),\n      this.state,\n    );\n  }, 300);\n}\n\n// -----------------------------------------------------------------------------\n// TEST HOOKS\n// -----------------------------------------------------------------------------\n\ndeclare global {\n  interface Window {\n    h: {\n      elements: readonly ExcalidrawElement[];\n      state: AppState;\n      setState: React.Component<any, AppState>[\"setState\"];\n      history: SceneHistory;\n      app: InstanceType<typeof App>;\n    };\n  }\n}\n\nif (\n  process.env.NODE_ENV === ENV.TEST ||\n  process.env.NODE_ENV === ENV.DEVELOPMENT\n) {\n  window.h = {} as Window[\"h\"];\n\n  Object.defineProperties(window.h, {\n    elements: {\n      get() {\n        return globalSceneState.getElementsIncludingDeleted();\n      },\n      set(elements: ExcalidrawElement[]) {\n        return globalSceneState.replaceAllElements(elements);\n      },\n    },\n    history: {\n      get: () => history,\n    },\n  });\n}\n\nexport default App;\n","// time in milliseconds\nexport const TAP_TWICE_TIMEOUT = 300;\nexport const INITAL_SCENE_UPDATE_TIMEOUT = 5000;\nexport const SYNC_FULL_SCENE_INTERVAL_MS = 20000;\nexport const TOUCH_CTX_MENU_TIMEOUT = 500;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport nanoid from \"nanoid\";\nimport { fileSave } from \"browser-nativefs\";\n// @ts-ignore\nimport GIF from \"gif.js/dist/gif\";\n\nimport \"./Claymate.css\";\nimport { Island } from \"./excalidraw/src/components/Island\";\nimport { globalSceneState } from \"./excalidraw/src/scene\";\nimport { exportToCanvas } from \"./excalidraw/src/scene/export\";\n\ntype Snapshot = {\n  id: string;\n  width: number;\n  height: number;\n  imageData: ImageData;\n};\n\nconst createSnapshot = (size?: { width: number; height: number }): Snapshot => {\n  const elements = globalSceneState.getElements();\n  const canvas = exportToCanvas(elements, {} as any, {\n    exportBackground: true,\n    exportPadding: 10,\n    viewBackgroundColor: \"#fff\",\n    scale: window.devicePixelRatio,\n    shouldAddWatermark: false,\n  });\n  const width = size ? size.width : canvas.width;\n  const height = size ? size.height : canvas.height;\n  const ctx = canvas.getContext(\"2d\");\n  return {\n    id: nanoid(),\n    width,\n    height,\n    imageData: ctx.getImageData(0, 0, width, height),\n  };\n};\n\nconst Preview: React.FC<{ snapshot: Snapshot }> = ({ snapshot }) => {\n  const ref = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    if (!ref.current) return;\n    const ctx = ref.current.getContext(\"2d\");\n    if (!ctx) return;\n    ctx.putImageData(snapshot.imageData, 0, 0);\n  }, [snapshot]);\n  return <canvas ref={ref} width={snapshot.width} height={snapshot.height} />;\n};\n\nconst Claymate: React.FC = () => {\n  const [snapshots, setSnapshots] = useState<Snapshot[]>([]);\n  const exportGif = () => {\n    const gif = new GIF();\n    snapshots.forEach((snapshot) => {\n      gif.addFrame(snapshot.imageData);\n    });\n    gif.on(\"finished\", async (blob: Blob) => {\n      await fileSave(blob, {\n        fileName: \"excalidraw-claymate.gif\",\n      });\n    });\n    gif.render();\n  };\n  const addSnapshot = () => {\n    const snapshot = createSnapshot(\n      snapshots[0] && {\n        width: snapshots[0].width,\n        height: snapshots[0].height,\n      }\n    );\n    setSnapshots((prev) => [...prev, snapshot]);\n  };\n  const deleteSnapshot = (id: string) => {\n    setSnapshots((prev) => prev.filter((item) => item.id !== id));\n  };\n  const moveLeft = (id: string) => {\n    setSnapshots((prev) => {\n      const index = prev.findIndex((item) => item.id === id);\n      const tmp = [...prev];\n      tmp[index - 1] = prev[index];\n      tmp[index] = prev[index - 1];\n      return tmp;\n    });\n  };\n  const moveRight = (id: string) => {\n    setSnapshots((prev) => {\n      const index = prev.findIndex((item) => item.id === id);\n      const tmp = [...prev];\n      tmp[index + 1] = prev[index];\n      tmp[index] = prev[index + 1];\n      return tmp;\n    });\n  };\n  return (\n    <Island className=\"Claymate\">\n      <div className=\"Claymate-buttons\">\n        <button type=\"button\" onClick={addSnapshot}>\n          Add snapshot\n        </button>\n        <button\n          type=\"button\"\n          onClick={exportGif}\n          disabled={snapshots.length === 0}\n        >\n          Export GIF\n        </button>\n      </div>\n      <div className=\"Claymate-snapshots\">\n        {snapshots.map((snapshot, index) => (\n          <div key={snapshot.id} className=\"Claymate-snapshot\">\n            <Preview snapshot={snapshot} />\n            <button\n              type=\"button\"\n              className=\"Claymate-delete\"\n              aria-label=\"Delete\"\n              onClick={() => deleteSnapshot(snapshot.id)}\n            >\n              &#x2716;\n            </button>\n            <button\n              type=\"button\"\n              className=\"Claymate-left\"\n              aria-label=\"Move Left\"\n              disabled={index === 0}\n              onClick={() => moveLeft(snapshot.id)}\n            >\n              &#x2b05;\n            </button>\n            <button\n              type=\"button\"\n              className=\"Claymate-right\"\n              aria-label=\"Move Right\"\n              disabled={index === snapshots.length - 1}\n              onClick={() => moveRight(snapshot.id)}\n            >\n              &#x27a1;\n            </button>\n          </div>\n        ))}\n      </div>\n    </Island>\n  );\n};\n\nexport default Claymate;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport \"./Excalidraw.scss\";\nimport \"./excalidraw/src/css/styles.scss\";\nimport { TopErrorBoundary } from \"./excalidraw/src/components/TopErrorBoundary\";\nimport { InitializeApp } from \"./excalidraw/src/components/InitializeApp\";\nimport { IsMobileProvider } from \"./excalidraw/src/is-mobile\";\nimport ExcalidrawApp from \"./excalidraw/src/components/App\";\nimport Claymate from \"./Claymate\";\n\nconst App: React.FC = () => (\n  <div className=\"ClaymateApp\">\n    <TopErrorBoundary>\n      <IsMobileProvider>\n        <InitializeApp>\n          <ExcalidrawApp />\n          <Claymate />\n        </InitializeApp>\n      </IsMobileProvider>\n    </TopErrorBoundary>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}