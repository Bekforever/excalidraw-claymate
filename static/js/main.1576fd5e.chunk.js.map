{"version":3,"sources":["excalidraw/src/constants.ts","excalidraw/src/element/typeChecks.ts","excalidraw/src/math.ts","excalidraw/src/points.ts","excalidraw/src/element/bounds.ts","excalidraw/src/i18n.ts","excalidraw/src/scene/scrollbars.ts","excalidraw/src/scene/selection.ts","excalidraw/src/scene/scroll.ts","excalidraw/src/scene/comparisons.ts","excalidraw/src/scene/zoom.ts","excalidraw/src/scene/globalScene.ts","excalidraw/src/utils.ts","excalidraw/src/renderer/renderElement.ts","excalidraw/src/random.ts","excalidraw/src/element/mutateElement.ts","excalidraw/src/element/sizeHelpers.ts","excalidraw/src/groups.ts","excalidraw/src/element/newElement.ts","excalidraw/src/element/handlerRectangles.ts","excalidraw/src/element/collision.ts","excalidraw/src/element/resizeTest.ts","excalidraw/src/keys.ts","excalidraw/src/element/resizeElements.ts","excalidraw/src/element/textWysiwyg.tsx","excalidraw/src/element/textElement.ts","excalidraw/src/element/showSelectedShapeActions.ts","excalidraw/src/element/index.ts","excalidraw/src/appState.ts","excalidraw/src/renderer/roundRect.ts","excalidraw/src/colors.ts","excalidraw/src/element/linearElementEditor.ts","excalidraw/src/renderer/renderScene.ts","excalidraw/src/scene/export.ts","excalidraw/src/clipboard.ts","excalidraw/src/data/restore.ts","excalidraw/src/data/blob.ts","excalidraw/src/data/json.ts","excalidraw/src/data/localStorage.ts","excalidraw/src/data/index.ts","excalidraw/src/components/ContextMenu.tsx","excalidraw/src/components/Portal.tsx","excalidraw/src/shapes.tsx","excalidraw/src/history.ts","excalidraw/src/components/Popover.tsx","excalidraw/src/actions/manager.tsx","excalidraw/src/components/ToolButton.tsx","excalidraw/src/components/icons.tsx","excalidraw/src/actions/register.ts","excalidraw/src/actions/actionDeleteSelected.tsx","excalidraw/src/zindex.ts","excalidraw/src/actions/actionZindex.tsx","excalidraw/src/components/ButtonSelect.tsx","excalidraw/src/actions/actionSelectAll.ts","excalidraw/src/actions/actionDuplicateSelection.tsx","excalidraw/src/components/ColorPicker.tsx","excalidraw/src/actions/actionProperties.tsx","excalidraw/src/is-mobile.tsx","excalidraw/src/actions/actionCanvas.tsx","excalidraw/src/actions/actionFinalize.tsx","excalidraw/src/components/ProjectName.tsx","excalidraw/src/actions/actionStyles.ts","excalidraw/src/actions/actionExport.tsx","excalidraw/src/components/HelpIcon.tsx","excalidraw/src/gesture.ts","excalidraw/src/actions/actionMenu.tsx","excalidraw/src/actions/actionGroup.ts","excalidraw/src/actions/actionHistory.tsx","excalidraw/src/components/Island.tsx","excalidraw/src/components/Stack.tsx","excalidraw/src/components/FixedSideContainer.tsx","excalidraw/src/components/LockIcon.tsx","excalidraw/src/components/Modal.tsx","excalidraw/src/components/Dialog.tsx","excalidraw/src/components/ExportDialog.tsx","excalidraw/src/components/LanguageList.tsx","excalidraw/src/components/HintViewer.tsx","excalidraw/src/components/Actions.tsx","excalidraw/src/components/Section.tsx","excalidraw/src/components/RoomDialog.tsx","excalidraw/src/components/LoadingMessage.tsx","excalidraw/src/components/MobileMenu.tsx","excalidraw/src/components/ErrorDialog.tsx","excalidraw/src/components/ShortcutsDialog.tsx","excalidraw/src/components/GitHubCorner.tsx","excalidraw/src/components/LayerUI.tsx","excalidraw/src/components/App.tsx","excalidraw/src/time_constants.ts","Claymate.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SCENE","EVENT","isTextElement","element","type","isLinearElement","SHIFT_LOCKING_ANGLE","Math","PI","CURSOR_TYPE","POINTER_BUTTON","ENV","BROADCAST","CLASSES","FONT_FAMILY","1","2","3","CANVAS_ONLY_ACTIONS","distanceBetweenPointAndSegment","x","y","x1","y1","x2","y2","xx","yy","C","D","lenSquare","param","dx","dy","hypot","rotate","angle","cos","sin","adjustXYWithRotation","side","deltaX1","deltaY1","deltaX2","deltaY2","isResizeFromCenter","distance2d","xd","yd","isPathALoop","points","length","firstPoint","lastPoint","onSegment","p","q","r","max","min","orientation","val","doIntersect","p1","q1","p2","q2","o1","o2","o3","o4","rescalePoints","dimension","nextDimensionSize","prevPoints","prevDimValues","map","point","prevMaxDimension","prevMinDimension","prevDimensionSize","dimensionScaleFactor","nextMinDimension","Infinity","scaledPoints","prevPoint","value","currentDimension","scaledValue","translation","scaledPoint","getElementAbsoluteCoords","getLinearElementAbsoluteCoords","width","height","getDiamondPoints","topX","floor","rightX","rightY","getCurvePathOps","shape","sets","set","ops","getMinMaxXYFromCurvePathOps","transformXY","currentP","reduce","limits","op","data","p3","p0","equation","t","idx","pow","minY","minX","maxX","maxY","getShapeForElement","getElementBounds","cx","cy","getLinearElementRotatedBounds","x11","y11","x12","y12","x22","y22","x21","y21","w","h","ww","hh","getCommonBounds","elements","forEach","getResizedElementAbsoluteCoords","nextWidth","nextHeight","curve","rough","generator","generateRoughOptions","getElementPointsCoords","languages","lng","label","require","rtl","currentLanguage","fallbackLanguage","setLanguage","newLng","find","language","document","documentElement","dir","languageDetector","cacheUserLanguage","getLanguage","findPartsForData","parts","i","part","undefined","path","replacement","split","Error","key","replace","LanguageDetector","init","languageUtils","formatLanguageCode","isWhitelisted","checkWhitelist","detect","getScrollBars","viewportWidth","viewportHeight","scrollX","scrollY","zoom","elementsMinX","elementsMinY","elementsMaxX","elementsMaxY","viewportWidthWithZoom","viewportHeightWithZoom","viewportWidthDiff","viewportHeightDiff","safeArea","top","parseInt","getGlobalCSSVariable","bottom","left","right","isRTL","viewportMinX","viewportMinY","viewportMaxX","viewportMaxY","sceneMinX","sceneMinY","sceneMaxX","sceneMaxY","horizontal","SCROLLBAR_MARGIN","vertical","isOverScrollBars","scrollBars","scrollBar","isOverHorizontalScrollBar","isOverVerticalScrollBar","isSomeElementSelected","appState","some","selectedElementIds","id","getSelectedElements","filter","normalizeScroll","pos","calculateScrollCenter","canvas","scale","window","devicePixelRatio","cords","sceneCoordsToViewportCoords","sceneX","sceneY","viewportX1","viewportY1","viewportX2","viewportY2","innerWidth","innerHeight","isOutsideViewPort","from","minDistance","closestElement","distance","getClosestElementBounds","viewportCoordsToSceneCoords","clientX","clientY","centerX","centerY","hasBackground","hasStroke","hasText","getElementAtPosition","hitElement","isDeleted","hitTest","getZoomOrigin","getContext","getNormalizedZoom","normalizedZoom","parseFloat","toFixed","globalSceneState","callbacks","Set","nonDeletedElements","elementsMap","this","getElement","isNonDeletedElement","nextElements","getElementMap","getNonDeletedElements","informMutation","Array","callback","cb","has","add","delete","SVG_NS","mockDateTime","getDateTime","date","Date","year","getFullYear","month","getMonth","padStart","day","getDate","hr","getHours","getMinutes","capitalizeString","str","charAt","toUpperCase","slice","isWritableElement","target","HTMLElement","dataset","HTMLBRElement","HTMLTextAreaElement","HTMLInputElement","getFontFamilyString","fontFamily","getFontString","fontSize","measureText","text","font","line","createElement","body","style","position","whiteSpace","appendChild","innerText","offsetWidth","offsetHeight","span","display","overflow","baseline","offsetTop","removeChild","debounce","fn","timeout","lastArgs","handle","ret","args","clearTimeout","setTimeout","flush","selectNode","node","selection","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","removeSelection","abs","resetCursor","cursor","setCursorForShape","isFullScreen","fullscreenElement","nodeName","getShortcutKey","shortcut","isMac","test","navigator","platform","zoomOrigin","name","getComputedStyle","getPropertyValue","DASHARRAY_DASHED","DASHARRAY_DOTTED","drawElementOnCanvas","rc","context","globalAlpha","opacity","draw","fillStyle","strokeColor","textAlign","lines","lineHeight","verticalOffset","horizontalOffset","fillText","elementWithCanvasCache","WeakMap","shapeCache","get","invalidateShapeForElement","options","seed","strokeLineDash","strokeStyle","disableMultiStroke","strokeWidth","fillWeight","hachureGap","roughness","stroke","fill","backgroundColor","curveFitting","generateElement","sceneState","rectangle","topY","bottomX","bottomY","leftX","leftY","polygon","ellipse","prevOp","nx","ny","arrowLength","total","px","py","minSize","xs","ys","x3","y3","getArrowPoints","x4","y4","push","prevElementWithCanvas","shouldRegenerateBecauseZoom","canvasZoom","shouldCacheIgnoreZoom","elementWithCanvas","canvasOffsetX","canvasOffsetY","CANVAS_PADDING","translate","generateElementCanvas","renderElement","renderOptimizations","fillRect","drawImage","drawElementFromCanvas","shiftX","shiftY","renderElementToSvg","rsvg","svgRoot","offsetX","offsetY","degree","setAttribute","group","ownerDocument","createElementNS","textAnchor","textContent","random","Random","now","randomInteger","next","randomId","nanoid","mutateElement","updates","didChange","getSizeFromPoints","nextPoints","didChangePoints","nextPoint","version","versionNonce","newElementWith","isInvisiblySmallElement","getPerfectElementSize","elementType","absWidth","absHeight","lockedAngle","round","atan","tan","sign","getNormalizedDimensions","selectGroup","groupId","elementsInGroup","groupIds","includes","selectedGroupIds","editingGroupId","Object","fromEntries","isSelectedViaGroup","getSelectedGroupIds","entries","selectGroupsForSelectedElements","nextAppState","selectedElements","indexOfEditingGroup","indexOf","isElementInGroup","getElementsInGroup","addToGroup","prevGroupIds","newGroupId","positionOfEditingGroupId","positionToInsert","splice","_newElementBase","rest","newTextElement","opts","metrics","deepCopyElement","depth","prototype","toString","call","tmp","constructor","create","getPrototypeOf","hasOwnProperty","isArray","k","arr","duplicateElement","groupIdMapForOperation","overrides","copy","mapper","endIndex","getNewGroupIdsForDuplication","assign","handleSizes","mouse","pen","touch","OMIT_SIDES_FOR_MULTIPLE_ELEMENTS","e","s","n","rotation","OMIT_SIDES_FOR_TEXT_ELEMENT","OMIT_SIDES_FOR_LINE_SLASH","nw","se","OMIT_SIDES_FOR_LINE_BACKSLASH","ne","sw","generateHandler","handlerRectanglesFromCoords","pointerType","omitSides","size","handlerWidth","handlerHeight","handlerMarginX","handlerMarginY","dashedLineMargin","centeringOffset","handlers","minimumSizeForEightHandlers","handlerRectangles","isElementDraggableFromInside","dragFromInside","lineThreshold","tx","ty","a","b","ex","ey","rx","ry","qx","qy","relX","relY","subshape","hitTestCurveInside","hitTestRoughShape","console","warn","drawable","operation","vertices","extreme","Number","MAX_SAFE_INTEGER","count","current","isPointInPolygon","pointsOnBezierCurves","mx","my","sqrt","pointInBezierEquation","isInHandlerRect","handler","getElementWithResizeHandler","scenePointerX","scenePointerY","result","resizeHandle","rotationHandler","keys","resizeTest","getResizeHandlerFromCoords","RESIZE_CURSORS","getCursorForResizingElement","resizingElement","shouldSwapCursors","index","rotateResizeCursor","isDarwin","KEYS","isArrowKey","keyCode","getResizeCenterPointKey","event","altKey","which","getResizeWithSidesSameLengthKey","shiftKey","rotateSingleElement","pointerX","pointerY","isAngleLocking","atan2","resizeSingleTwoPointElement","resizeArrowDirection","pointOrigin","pointEnd","rescalePointsInElement","resizeSingleTextElement","rotatedX","rotatedY","newFontSize","nextElementX","nextElementY","resizeSingleElement","sidesWithSameLength","scaleX","scaleY","nextX1","nextY1","nextX2","nextY2","rescaledPoints","finalX1","finalY1","finalX2","finalY2","needsRotation","flipDiffX","flipDiffY","getFlipAdjustment","isFinite","resizeMultipleElements","origX1","origY1","origX2","origY2","canResizeMutlipleElements","every","trimText","trim","redrawTextBoundingBox","showSelectedShapeActions","Boolean","editingElement","acc","getDrawingVersion","el","getDefaultAppState","isLoading","errorMessage","draggingElement","multiElement","editingLinearElement","elementLocked","exportBackground","shouldAddWatermark","currentItemStrokeColor","oc","black","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","currentItemStrokeStyle","currentItemRoughness","currentItemOpacity","currentItemFontSize","currentItemFontFamily","currentItemTextAlign","viewBackgroundColor","white","cursorX","cursorY","cursorButton","scrolledOutside","username","isCollaborating","isResizing","isRotating","selectionElement","openMenu","lastPointerDownWith","collaborators","Map","showShortcutsDialog","zenModeEnabled","cleanAppStateForExport","roundRect","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","shades","red","pink","grape","violet","indigo","blue","cyan","teal","green","lime","yellow","orange","canvasBackground","gray","elementBackground","elementStroke","LinearElementEditor","elementId","activePointIndex","draggingElementPointIndex","lastUncommittedPoint","normalizePoints","getNonDeletedElement","setState","lastX","lastY","clickedPointIndex","getPointIndexUnderCursor","deltaX","deltaY","targetPoint","movePoint","history","didAddPoint","createPointAt","resumeRecording","newPoint","pointHandles","getPointsGlobalCoordinates","POINT_HANDLE_SIZE","_idx","pointIndex","targetPosition","nextCoords","prevCoords","nextCenterX","nextCenterY","prevCenterX","prevCenterY","rotated","colorsForClientId","clientId","sum","charCodeAt","backgrounds","colors","strokes","background","strokeRectWithRotation","strokeRect","strokeCircle","arc","renderLinearPointHandles","origStrokeStyle","lineWidth","setLineDash","renderScene","renderScrollbars","renderSelection","atLeastOneVisibleElement","normalizedCanvasWidth","normalizedCanvasHeight","hasTransparence","clearRect","zoomTranslationX","zoomTranslationY","visibleElements","isVisibleElement","selections","selectionColors","remoteSelectedElementIds","socketId","elementX1","elementY1","elementX2","elementY2","addSelectionForGroupId","groupElements","elementWidth","elementHeight","initialLineDash","getLineDash","lineDashOffset","dashedLinePadding","dashWidth","spaceWidth","locallySelectedElements","remotePointerViewportCoords","remotePointerUsernames","isOutOfBounds","remotePointerButton","paddingHorizontal","paddingVertical","measure","measureHeight","actualBoundingBoxDescent","actualBoundingBoxAscent","SCROLLBAR_WIDTH","exportToCanvas","exportPadding","createCanvas","tempCanvas","sceneElements","getWatermarkElement","exportToSvg","innerHTML","rect","renderSceneToSvg","svg","textWidth","CLIPBOARD","PREFER_APP_CLIPBOARD","probablySupportsClipboardReadText","clipboard","probablySupportsClipboardWriteText","probablySupportsClipboardBlob","HTMLCanvasElement","copyToAppClipboard","JSON","stringify","copyTextToSystemClipboard","getAppClipboard","clipboardElements","parse","error","getClipboardContent","clipboardData","getData","readText","copyCanvasToClipboardAsPng","Promise","resolve","reject","toBlob","blob","write","ClipboardItem","copyCanvasToClipboardAsSvg","svgroot","writeText","outerHTML","copied","copyTextViaExecCommand","getAttribute","textarea","border","padding","margin","yPosition","pageYOffset","scrollTop","success","select","setSelectionRange","execCommand","remove","migrateElementWithProperties","extra","base","migrateElement","fontPx","_fontFamily","fontFamilyName","getFontFamilyByName","restore","savedElements","savedState","migratedElement","scrollToContent","loadFromBlob","updateAppState","contents","defaultAppState","Blob","reader","FileReader","readAsText","onloadend","readyState","DONE","serializeAsJSON","source","location","origin","saveAsJSON","serialized","fileSave","userAgent","fileName","description","loadFromJSON","fileOpen","extensions","mimeTypes","saveToLocalStorage","localStorage","setItem","clearAppStateForLocalStorage","restoreFromLocalStorage","getItem","contextMenuNode","byteToHex","byte","generateRandomID","Uint8Array","crypto","getRandomValues","join","generateEncryptionKey","subtle","generateKey","exportKey","createIV","getCollaborationLinkData","link","URL","hash","match","generateCollaborationLink","pathname","getImportedKey","usage","importKey","alg","ext","key_ops","kty","encryptAESGEM","importedKey","iv","encrypt","decryptAESGEM","decrypt","decrypted","decodedData","TextDecoder","decode","alert","exportToBackend","json","encoded","TextEncoder","encode","encrypted","exportedKey","fetch","method","response","url","href","urlString","prompt","importFromBackend","privateKey","ok","arrayBuffer","buffer","string","exportCanvas","tempSvg","loadScene","replaceState","commitToHistory","Portal","app","socket","socketInitialized","roomID","roomKey","on","emit","restoreUserName","_socketID","broadcastScene","INIT","clients","setCollaborators","close","volatile","isOpen","SHAPES","icon","viewBox","className","d","strokeLinecap","shapesShortcutKeys","flat","clearAppStatePropertiesForHistory","SceneHistory","elementCache","recording","stateHistory","redoStack","lastEntry","generateEntry","dehydrateHistoryEntry","lastCommittedPoint","dehydratedExcalidrawElement","versions","dehydratedHistoryEntry","hydrateHistoryEntry","clear","nextEntry","prev","newEntryDehydrated","newEntry","shouldCreateEntry","clearRedoStack","entryToRestore","pop","currentEntry","state","pushEntry","Popover","children","onCloseRequest","fitInViewport","popoverRef","useRef","useLayoutEffect","getBoundingClientRect","useEffect","contains","unstable_batchedUpdates","addEventListener","removeEventListener","ref","ContextMenu","onContextMenu","preventDefault","option","onClick","ContextMenuOption","action","getContextMenuNode","div","handleClose","unmountComponentAtNode","params","of","render","ActionManager","updater","getAppState","getElementsIncludingDeleted","actions","renderAction","PanelComponent","updateData","formState","perform","registerAction","values","sort","keyPriority","keyTest","actionFilter","contextMenuOrder","contextItemLabel","ToolButton","React","forwardRef","props","innerRef","useImperativeHandle","sizeCn","selected","visible","title","aria-label","aria-hidden","showAriaLabel","aria-keyshortcuts","data-testid","onChange","checked","keyBindingLabel","defaultProps","ACTIVE_ELEMENT_COLOR","createIcon","mirror","focusable","role","save","load","trash","palette","exportFile","zoomIn","zoomOut","done","menu","undo","redo","resetZoom","bringForward","sendBackward","bringToFront","sendToBack","strokeLinejoin","users","start","stop","back","marginLeft","clone","shield","register","concat","handleGroupEditingState","siblingElements","actionDeleteSelected","deleteSelectedElements","swap","indexA","indexB","moveOneLeft","indicesToMove","isSorted","moveOneRight","reversedIndicesToMove","moveAllLeft","leftMostElements","reverse","moveAllRight","rightMostElements","moveElements","func","_elements","direction","selectedIndices","deletedIndicesCache","len","getElementIndices","ButtonSelect","code","groupIdMap","newElement","isValidColor","color","Option","keyBindings","Picker","onClose","showInput","firstItem","activeItem","gallery","colorInput","focus","aria-modal","onKeyDown","activeElement","nextIndex","toLowerCase","nativeEvent","stopImmediatePropagation","_color","currentTarget","onFocus","ColorInput","useState","innerValue","setInnerValue","inputRef","changeColor","useCallback","inputValue","getColor","spellCheck","onBlur","ColorPicker","isActive","setActive","pickerButton","Suspense","fallback","changedColor","changeProperty","getFormValue","defaultValue","attributes","getCommonAttributeOfSelectedElements","step","onWheel","stopPropagation","createContext","useIsMobile","useContext","_","confirm","KEY_CODES","actionFinalize","commonBounds","currentZoom","newZoom","zoomX","zoomY","calculateZoom","newElements","blur","multiPointElement","linePoints","ProjectName","handleFocus","handleBlur","handleKeyDown","isComposing","makeEditable","editable","contentEditable","suppressContentEditableWarning","data-type","Component","copiedStyles","catch","loadedElements","loadedAppState","then","message","ICON","pastedElement","xmlns","HelpIcon","getCenter","requestFullscreen","exitFullscreen","selectedGroupId","elementIdsInGroup","updatedElements","lastElementInGroup","lastGroupElementIndex","lastIndexOf","elementsAfterGroup","elementsBeforeGroup","updatedElement","updatedElementsInOrder","nextGroupIds","removeFromSelectedGroups","pointers","allCoords","coords","getDistance","array","item","writeData","prevElements","prevElementMap","nextElementMap","nextElement","prevElement","syncHistory","testUndo","shift","Island","gap","align","justifyContent","alignItems","justifyItems","FixedSideContainer","ICONS","CHECKED","UNCHECKED","LockIcon","Modal","modalRoot","useBodyRoot","createPortal","aria-labelledby","labelledBy","tabIndex","maxWidth","maxHeight","overflowY","Dialog","islandRef","focusableElements","queryFocusableElements","currentIndex","findIndex","querySelectorAll","scales","defaultScale","ExportModal","actionManager","onExportToPng","onExportToSvg","onExportToClipboard","onExportToBackend","someElementIsSelected","setScale","exportSelected","setExportSelected","previewRef","exportedElements","previewNode","ExportDialog","modalIsShown","setModalIsShown","triggerButton","LanguageList","i18n","floating","Fragment","HintViewer","hint","multiMode","targetElement","getHints","SelectedShapeActions","targetElements","getTargetElement","isEditing","isMobile","ShapesSwitcher","setAppState","ZoomActions","marginInlineStart","Section","heading","header","RoomModal","activeRoomLink","onUsernameChange","onRoomCreate","onRoomDestroy","onPressingEnter","roomLinkInput","readOnly","onPointerDown","htmlFor","onKeyPress","RoomDialog","collaboratorCount","setActiveRoomLink","LoadingMessage","MobileMenu","exportButton","onLockToggle","marginBottom","marginRight","ErrorDialog","Columns","flexDirection","flexWrap","Column","ShortcutIsland","caption","Shortcut","borderTop","flex","minWidth","shortcuts","isOr","ShortcutKey","wordBreak","borderRadius","minHeight","boxSizing","Footer","marginTop","paddingTop","rel","ShortcutsDialog","GitHubCorner","memo","transformOrigin","toggleZenMode","renderExportDialog","createExporter","shouldRenderSelectedShapeActions","zIndex","renderFixedSideContainer","getNecessaryObj","prevAppState","withBatchedUpdates","didTapTwice","tappedTwiceTimer","isHoldingSpace","isPanning","isDraggingScrollBar","currentScrollBars","lastPointerUp","gesture","lastCenter","initialDistance","initialScale","App","portal","lastBroadcastedOrReceivedSceneVersion","broadcastedElementVersions","removeSceneCallback","unmounted","syncActionResult","res","replaceAllElements","setCurrentState","saveDebounced","onUnload","destroySocketClient","disableEvent","onFontLoaded","onSceneUpdated","initializeScene","searchParams","URLSearchParams","search","jsonMatch","isCollaborationScene","scene","initializeSocketClient","showLoadingState","onResize","beforeUnload","getElements","returnValue","queueBroadcastAllElements","throttle","UPDATE","onCut","copyAll","executeAction","onCopy","copyToClipboardAsPng","copyToClipboardAsSvg","onTapStart","resetTapTwice","touches","handleCanvasDoubleClick","pasteFromClipboard","elementUnderCursor","elementFromPoint","addElementsFromPaste","addTextFromPaste","selectShapeTool","elementsCenterX","elementsCenterY","obj","removePointer","pointerId","openPortal","pushState","closePortal","toggleLock","prevState","roomMatch","initialize","initializationTimer","updateScene","decryptedData","remoteElements","payload","localElementMap","socketIOClient","default","open","encryptedData","socketID","pointerCoords","button","user","pointer","off","broadcastMouseLocation","_broadcastSocketData","sceneType","syncAll","syncableElements","syncableElement","updateCurrentCursorPosition","HTMLSelectElement","findShapeByKey","update","selectedElement","startTextEditing","ctrlKey","metaKey","onKeyUp","onGestureStart","onGestureChange","onGestureEnd","setElements","centerIfPossible","elementAtPosition","textX","textY","isExistingTextElement","centerElementX","centerElementY","snappedToCenterPosition","getTextWysiwygSnappedToCenterPosition","elementCenterX","elementCenterY","wysiwygX","wysiwygY","handleTextWysiwyg","isExistingElement","getSelectedGroupIdForElement","handleCanvasPointerMove","savePointer","center","scaleFactor","resetShouldCacheIgnoreZoomDebounced","isOverScrollBar","handlePointerMove","buttons","elementWithResizeHandler","handleCanvasPointerDown","persist","nextPastePrevented","isLinux","onPointerMove","preventNextPaste","PASTE","POINTER_UP","enableNextPaste","teardown","POINTER_MOVE","BLUR","passive","onPointerUp","originX","originY","setResizeHandle","nextResizeHandle","resizeOffsetXY","isResizingElements","draggingOccurred","hitElementWasAddedToSelection","getResizeOffsetXY","getResizeArrowDirection","handlePointerDown","selectedElementWasDuplicated","normalizeResizeHandle","resizeElements","handlePointDragging","elementsToAppend","duplicatedElement","simplify","newX","newY","elementsWithinSelection","selectionX1","selectionY1","selectionX2","selectionY2","getElementsWithinSelection","childEvent","handlePointerUp","_prevState","handleCanvasRef","WHEEL","handleWheel","TOUCH_START","handleCanvasOnDrop","file","dataTransfer","files","endsWith","handleCanvasContextMenu","getContextMenuItems","delta","isNaN","registerAll","undoOnce","redoOnce","createRedoAction","canvasDOMWidth","canvasDOMHeight","canvasScale","canvasWidth","canvasHeight","saveUsernameToLocalStorage","onDoubleClick","onPointerCancel","onDrop","process","bind","defineProperties","configurable","addCallback","addEventListeners","removeEventListeners","COPY","CUT","KEYDOWN","MOUSE_MOVE","KEYUP","RESIZE","UNLOAD","DRAG_OVER","DROP","GESTURE_START","GESTURE_CHANGE","GESTURE_END","BEFORE_UNLOAD","fonts","pointerViewportCoords","pointerUsernames","record","sockets","restoreUsernameFromLocalStorage","resetSelection","deleteElement","_element","updateElement","initText","onSubmit","onCancel","transform","outline","backfaceVisibility","onpaste","rangeCount","deleteFromDocument","getRangeAt","insertNode","setStart","childNodes","setEnd","oninput","onkeydown","handleSubmit","stopEvent","cleanup","isDestroyed","onblur","rebindBlur","unbindUpdate","closest","textWysiwyg","elementClickedInside","getElementContainingPosition","dummyAppState","Claymate","snapshots","setSnapshots","dataUrl","toDataURL","createDataUrl","snapshot","alt","src","disabled","hostname","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1576fd5e.chunk.js","sourcesContent":["export const DRAGGING_THRESHOLD = 10; // 10px\nexport const LINE_CONFIRM_THRESHOLD = 10; // 10px\nexport const ELEMENT_SHIFT_TRANSLATE_AMOUNT = 5;\nexport const ELEMENT_TRANSLATE_AMOUNT = 1;\nexport const TEXT_TO_CENTER_SNAP_THRESHOLD = 30;\nexport const SHIFT_LOCKING_ANGLE = Math.PI / 12;\nexport const CURSOR_TYPE = {\n  TEXT: \"text\",\n  CROSSHAIR: \"crosshair\",\n  GRABBING: \"grabbing\",\n  POINTER: \"pointer\",\n};\nexport const POINTER_BUTTON = {\n  MAIN: 0,\n  WHEEL: 1,\n  SECONDARY: 2,\n  TOUCH: -1,\n};\n\nexport enum SCENE {\n  INIT = \"SCENE_INIT\",\n  UPDATE = \"SCENE_UPDATE\",\n}\n\nexport enum EVENT {\n  COPY = \"copy\",\n  PASTE = \"paste\",\n  CUT = \"cut\",\n  KEYDOWN = \"keydown\",\n  KEYUP = \"keyup\",\n  MOUSE_MOVE = \"mousemove\",\n  RESIZE = \"resize\",\n  UNLOAD = \"unload\",\n  BLUR = \"blur\",\n  DRAG_OVER = \"dragover\",\n  DROP = \"drop\",\n  GESTURE_END = \"gestureend\",\n  BEFORE_UNLOAD = \"beforeunload\",\n  GESTURE_START = \"gesturestart\",\n  GESTURE_CHANGE = \"gesturechange\",\n  POINTER_MOVE = \"pointermove\",\n  POINTER_UP = \"pointerup\",\n  STATE_CHANGE = \"statechange\",\n  WHEEL = \"wheel\",\n  TOUCH_START = \"touchstart\",\n}\n\nexport const ENV = {\n  TEST: \"test\",\n  DEVELOPMENT: \"development\",\n};\n\nexport const BROADCAST = {\n  SERVER_VOLATILE: \"server-volatile-broadcast\",\n  SERVER: \"server-broadcast\",\n};\n\nexport const CLASSES = {\n  SHAPE_ACTIONS_MENU: \"App-menu__left\",\n};\n\n// 1-based in case we ever do `if(element.fontFamily)`\nexport const FONT_FAMILY = {\n  1: \"Virgil\",\n  2: \"Helvetica\",\n  3: \"Cascadia\",\n} as const;\n\nexport const CANVAS_ONLY_ACTIONS = [\"selectAll\"];\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n} from \"./types\";\n\nexport const isTextElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElement => {\n  return element != null && element.type === \"text\";\n};\n\nexport const isLinearElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return (\n    element != null &&\n    (element.type === \"arrow\" ||\n      element.type === \"line\" ||\n      element.type === \"draw\")\n  );\n};\n\nexport const isExcalidrawElement = (element: any): boolean => {\n  return (\n    element?.type === \"text\" ||\n    element?.type === \"diamond\" ||\n    element?.type === \"rectangle\" ||\n    element?.type === \"ellipse\" ||\n    element?.type === \"arrow\" ||\n    element?.type === \"draw\" ||\n    element?.type === \"line\"\n  );\n};\n","import { Point } from \"./types\";\nimport { LINE_CONFIRM_THRESHOLD } from \"./constants\";\nimport { ExcalidrawLinearElement } from \"./element/types\";\n\n// https://stackoverflow.com/a/6853926/232122\nexport const distanceBetweenPointAndSegment = (\n  x: number,\n  y: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n) => {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const lenSquare = C * C + D * D;\n  let param = -1;\n  if (lenSquare !== 0) {\n    // in case of 0 length line\n    param = dot / lenSquare;\n  }\n\n  let xx, yy;\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  const dx = x - xx;\n  const dy = y - yy;\n  return Math.hypot(dx, dy);\n};\n\nexport const rotate = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  angle: number,\n): [number, number] =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const adjustXYWithRotation = (\n  side: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  x: number,\n  y: number,\n  angle: number,\n  deltaX1: number,\n  deltaY1: number,\n  deltaX2: number,\n  deltaY2: number,\n  isResizeFromCenter: boolean,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  if (side === \"e\" || side === \"ne\" || side === \"se\") {\n    if (isResizeFromCenter) {\n      x += deltaX1 + deltaX2;\n    } else {\n      x += deltaX1 * (1 + cos);\n      y += deltaX1 * sin;\n      x += deltaX2 * (1 - cos);\n      y += deltaX2 * -sin;\n    }\n  }\n  if (side === \"s\" || side === \"sw\" || side === \"se\") {\n    if (isResizeFromCenter) {\n      y += deltaY1 + deltaY2;\n    } else {\n      x += deltaY1 * -sin;\n      y += deltaY1 * (1 + cos);\n      x += deltaY2 * sin;\n      y += deltaY2 * (1 - cos);\n    }\n  }\n  if (side === \"w\" || side === \"nw\" || side === \"sw\") {\n    if (isResizeFromCenter) {\n      x += deltaX1 + deltaX2;\n    } else {\n      x += deltaX1 * (1 - cos);\n      y += deltaX1 * -sin;\n      x += deltaX2 * (1 + cos);\n      y += deltaX2 * sin;\n    }\n  }\n  if (side === \"n\" || side === \"nw\" || side === \"ne\") {\n    if (isResizeFromCenter) {\n      y += deltaY1 + deltaY2;\n    } else {\n      x += deltaY1 * sin;\n      y += deltaY1 * (1 - cos);\n      x += deltaY2 * -sin;\n      y += deltaY2 * (1 + cos);\n    }\n  }\n  return [x, y];\n};\n\nexport const getFlipAdjustment = (\n  side: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  nextWidth: number,\n  nextHeight: number,\n  nextX1: number,\n  nextY1: number,\n  nextX2: number,\n  nextY2: number,\n  finalX1: number,\n  finalY1: number,\n  finalX2: number,\n  finalY2: number,\n  needsRotation: boolean,\n  angle: number,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  let flipDiffX = 0;\n  let flipDiffY = 0;\n  if (nextWidth < 0) {\n    if (side === \"e\" || side === \"ne\" || side === \"se\") {\n      if (needsRotation) {\n        flipDiffX += (finalX2 - nextX1) * cos;\n        flipDiffY += (finalX2 - nextX1) * sin;\n      } else {\n        flipDiffX += finalX2 - nextX1;\n      }\n    }\n    if (side === \"w\" || side === \"nw\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffX += (finalX1 - nextX2) * cos;\n        flipDiffY += (finalX1 - nextX2) * sin;\n      } else {\n        flipDiffX += finalX1 - nextX2;\n      }\n    }\n  }\n  if (nextHeight < 0) {\n    if (side === \"s\" || side === \"se\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY2 - nextY1) * cos;\n        flipDiffX += (finalY2 - nextY1) * -sin;\n      } else {\n        flipDiffY += finalY2 - nextY1;\n      }\n    }\n    if (side === \"n\" || side === \"ne\" || side === \"nw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY1 - nextY2) * cos;\n        flipDiffX += (finalY1 - nextY2) * -sin;\n      } else {\n        flipDiffY += finalY1 - nextY2;\n      }\n    }\n  }\n  return [flipDiffX, flipDiffY];\n};\n\nexport const getPointOnAPath = (point: Point, path: Point[]) => {\n  const [px, py] = point;\n  const [start, ...other] = path;\n  let [lastX, lastY] = start;\n  let kLine: number = 0;\n  let idx: number = 0;\n\n  // if any item in the array is true, it means that a point is\n  // on some segment of a line based path\n  const retVal = other.some(([x2, y2], i) => {\n    // we always take a line when dealing with line segments\n    const x1 = lastX;\n    const y1 = lastY;\n\n    lastX = x2;\n    lastY = y2;\n\n    // if a point is not within the domain of the line segment\n    // it is not on the line segment\n    if (px < x1 || px > x2) {\n      return false;\n    }\n\n    // check if all points lie on the same line\n    // y1 = kx1 + b, y2 = kx2 + b\n    // y2 - y1 = k(x2 - x2) -> k = (y2 - y1) / (x2 - x1)\n\n    // coefficient for the line (p0, p1)\n    const kL = (y2 - y1) / (x2 - x1);\n\n    // coefficient for the line segment (p0, point)\n    const kP1 = (py - y1) / (px - x1);\n\n    // coefficient for the line segment (point, p1)\n    const kP2 = (py - y2) / (px - x2);\n\n    // because we are basing both lines from the same starting point\n    // the only option for collinearity is having same coefficients\n\n    // using it for floating point comparisons\n    const epsilon = 0.3;\n\n    // if coefficient is more than an arbitrary epsilon,\n    // these lines are nor collinear\n    if (Math.abs(kP1 - kL) > epsilon && Math.abs(kP2 - kL) > epsilon) {\n      return false;\n    }\n\n    // store the coefficient because we are goint to need it\n    kLine = kL;\n    idx = i;\n\n    return true;\n  });\n\n  // Return a coordinate that is always on the line segment\n  if (retVal === true) {\n    return { x: point[0], y: kLine * point[0], segment: idx };\n  }\n\n  return null;\n};\n\nexport const distance2d = (x1: number, y1: number, x2: number, y2: number) => {\n  const xd = x2 - x1;\n  const yd = y2 - y1;\n  return Math.hypot(xd, yd);\n};\n\n// Checks if the first and last point are close enough\n// to be considered a loop\nexport const isPathALoop = (\n  points: ExcalidrawLinearElement[\"points\"],\n): boolean => {\n  if (points.length >= 3) {\n    const [firstPoint, lastPoint] = [points[0], points[points.length - 1]];\n    return (\n      distance2d(firstPoint[0], firstPoint[1], lastPoint[0], lastPoint[1]) <=\n      LINE_CONFIRM_THRESHOLD\n    );\n  }\n  return false;\n};\n\n// Draw a line from the point to the right till infiinty\n// Check how many lines of the polygon does this infinite line intersects with\n// If the number of intersections is odd, point is in the polygon\nexport const isPointInPolygon = (\n  points: Point[],\n  x: number,\n  y: number,\n): boolean => {\n  const vertices = points.length;\n\n  // There must be at least 3 vertices in polygon\n  if (vertices < 3) {\n    return false;\n  }\n  const extreme: Point = [Number.MAX_SAFE_INTEGER, y];\n  const p: Point = [x, y];\n  let count = 0;\n  for (let i = 0; i < vertices; i++) {\n    const current = points[i];\n    const next = points[(i + 1) % vertices];\n    if (doIntersect(current, next, p, extreme)) {\n      if (orientation(current, p, next) === 0) {\n        return onSegment(current, p, next);\n      }\n      count++;\n    }\n  }\n  // true if count is off\n  return count % 2 === 1;\n};\n\n// Check if q lies on the line segment pr\nconst onSegment = (p: Point, q: Point, r: Point) => {\n  return (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  );\n};\n\n// For the ordered points p, q, r, return\n// 0 if p, q, r are collinear\n// 1 if Clockwise\n// 2 if counterclickwise\nconst orientation = (p: Point, q: Point, r: Point) => {\n  const val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n  if (val === 0) {\n    return 0;\n  }\n  return val > 0 ? 1 : 2;\n};\n\n// Check is p1q1 intersects with p2q2\nconst doIntersect = (p1: Point, q1: Point, p2: Point, q2: Point) => {\n  const o1 = orientation(p1, q1, p2);\n  const o2 = orientation(p1, q1, q2);\n  const o3 = orientation(p2, q2, p1);\n  const o4 = orientation(p2, q2, q1);\n\n  if (o1 !== o2 && o3 !== o4) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and p2 lies on segment p1q1\n  if (o1 === 0 && onSegment(p1, p2, q1)) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and q2 lies on segment p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) {\n    return true;\n  }\n\n  // p2, q2 and p1 are colinear and p1 lies on segment p2q2\n  if (o3 === 0 && onSegment(p2, p1, q2)) {\n    return true;\n  }\n\n  // p2, q2 and q1 are colinear and q1 lies on segment p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) {\n    return true;\n  }\n\n  return false;\n};\n","import { Point } from \"./types\";\n\nexport const getSizeFromPoints = (points: readonly Point[]) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\nexport const rescalePoints = (\n  dimension: 0 | 1,\n  nextDimensionSize: number,\n  prevPoints: readonly Point[],\n): Point[] => {\n  const prevDimValues = prevPoints.map((point) => point[dimension]);\n  const prevMaxDimension = Math.max(...prevDimValues);\n  const prevMinDimension = Math.min(...prevDimValues);\n  const prevDimensionSize = prevMaxDimension - prevMinDimension;\n\n  const dimensionScaleFactor =\n    prevDimensionSize === 0 ? 1 : nextDimensionSize / prevDimensionSize;\n\n  let nextMinDimension = Infinity;\n\n  const scaledPoints = prevPoints.map(\n    (prevPoint) =>\n      prevPoint.map((value, currentDimension) => {\n        if (currentDimension !== dimension) {\n          return value;\n        }\n        const scaledValue = value * dimensionScaleFactor;\n        nextMinDimension = Math.min(scaledValue, nextMinDimension);\n        return scaledValue;\n      }) as [number, number],\n  );\n\n  if (scaledPoints.length === 2) {\n    // we don't tranlate two-point lines\n    return scaledPoints;\n  }\n\n  const translation = prevMinDimension - nextMinDimension;\n\n  const nextPoints = scaledPoints.map(\n    (scaledPoint) =>\n      scaledPoint.map((value, currentDimension) => {\n        return currentDimension === dimension ? value + translation : value;\n      }) as [number, number],\n  );\n\n  return nextPoints;\n};\n","import { ExcalidrawElement, ExcalidrawLinearElement } from \"./types\";\nimport { distance2d, rotate } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { Drawable, Op } from \"roughjs/bin/core\";\nimport { Point } from \"../types\";\nimport {\n  getShapeForElement,\n  generateRoughOptions,\n} from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { rescalePoints } from \"../points\";\n\n// If the element is created from right to left, the width is going to be negative\n// This set of functions retrieves the absolute position of the 4 points.\nexport const getElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  if (isLinearElement(element)) {\n    return getLinearElementAbsoluteCoords(element);\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n  ];\n};\n\nexport const getDiamondPoints = (element: ExcalidrawElement) => {\n  // Here we add +1 to avoid these numbers to be 0\n  // otherwise rough.js will throw an error complaining about it\n  const topX = Math.floor(element.width / 2) + 1;\n  const topY = 0;\n  const rightX = element.width;\n  const rightY = Math.floor(element.height / 2) + 1;\n  const bottomX = topX;\n  const bottomY = element.height;\n  const leftX = topY;\n  const leftY = rightY;\n\n  return [topX, topY, rightX, rightY, bottomX, bottomY, leftX, leftY];\n};\n\nexport const getCurvePathOps = (shape: Drawable): Op[] => {\n  for (const set of shape.sets) {\n    if (set.type === \"path\") {\n      return set.ops;\n    }\n  }\n  return shape.sets[0].ops;\n};\n\nconst getMinMaxXYFromCurvePathOps = (\n  ops: Op[],\n  transformXY?: (x: number, y: number) => [number, number],\n): [number, number, number, number] => {\n  let currentP: Point = [0, 0];\n  const { minX, minY, maxX, maxY } = ops.reduce(\n    (limits, { op, data }) => {\n      // There are only four operation types:\n      // move, bcurveTo, lineTo, and curveTo\n      if (op === \"move\") {\n        // change starting point\n        currentP = (data as unknown) as Point;\n        // move operation does not draw anything; so, it always\n        // returns false\n      } else if (op === \"bcurveTo\") {\n        // create points from bezier curve\n        // bezier curve stores data as a flattened array of three positions\n        // [x1, y1, x2, y2, x3, y3]\n        const p1 = [data[0], data[1]] as Point;\n        const p2 = [data[2], data[3]] as Point;\n        const p3 = [data[4], data[5]] as Point;\n\n        const p0 = currentP;\n        currentP = p3;\n\n        const equation = (t: number, idx: number) =>\n          Math.pow(1 - t, 3) * p3[idx] +\n          3 * t * Math.pow(1 - t, 2) * p2[idx] +\n          3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n          p0[idx] * Math.pow(t, 3);\n\n        let t = 0;\n        while (t <= 1.0) {\n          let x = equation(t, 0);\n          let y = equation(t, 1);\n          if (transformXY) {\n            [x, y] = transformXY(x, y);\n          }\n\n          limits.minY = Math.min(limits.minY, y);\n          limits.minX = Math.min(limits.minX, x);\n\n          limits.maxX = Math.max(limits.maxX, x);\n          limits.maxY = Math.max(limits.maxY, y);\n\n          t += 0.1;\n        }\n      } else if (op === \"lineTo\") {\n        // TODO: Implement this\n      } else if (op === \"qcurveTo\") {\n        // TODO: Implement this\n      }\n      return limits;\n    },\n    { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n  );\n\n  return [minX, minY, maxX, maxY];\n};\n\nconst getLinearElementAbsoluteCoords = (\n  element: ExcalidrawLinearElement,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getArrowPoints = (\n  element: ExcalidrawLinearElement,\n  shape: Drawable[],\n) => {\n  const ops = getCurvePathOps(shape[0]);\n\n  const data = ops[ops.length - 1].data;\n  const p3 = [data[4], data[5]] as Point;\n  const p2 = [data[2], data[3]] as Point;\n  const p1 = [data[0], data[1]] as Point;\n\n  // we need to find p0 of the bezier curve\n  // it is typically the last point of the previous\n  // curve; it can also be the position of moveTo operation\n  const prevOp = ops[ops.length - 2];\n  let p0: Point = [0, 0];\n  if (prevOp.op === \"move\") {\n    p0 = (prevOp.data as unknown) as Point;\n  } else if (prevOp.op === \"bcurveTo\") {\n    p0 = [prevOp.data[4], prevOp.data[5]];\n  }\n\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // we know the last point of the arrow\n  const [x2, y2] = p3;\n\n  // by using cubic bezier equation (B(t)) and the given parameters,\n  // we calculate a point that is closer to the last point\n  // The value 0.3 is chosen arbitrarily and it works best for all\n  // the tested cases\n  const [x1, y1] = [equation(0.3, 0), equation(0.3, 1)];\n\n  // find the normalized direction vector based on the\n  // previously calculated points\n  const distance = Math.hypot(x2 - x1, y2 - y1);\n  const nx = (x2 - x1) / distance;\n  const ny = (y2 - y1) / distance;\n\n  const size = 30; // pixels\n  const arrowLength = element.points.reduce((total, [cx, cy], idx, points) => {\n    const [px, py] = idx > 0 ? points[idx - 1] : [0, 0];\n    return total + Math.hypot(cx - px, cy - py);\n  }, 0);\n\n  // Scale down the arrow until we hit a certain size so that it doesn't look weird\n  // This value is selected by minizing a minmum size with the whole length of the arrow\n  // intead of last segment of the arrow\n  const minSize = Math.min(size, arrowLength / 2);\n  const xs = x2 - nx * minSize;\n  const ys = y2 - ny * minSize;\n\n  const angle = 20; // degrees\n  const [x3, y3] = rotate(xs, ys, x2, y2, (-angle * Math.PI) / 180);\n  const [x4, y4] = rotate(xs, ys, x2, y2, (angle * Math.PI) / 180);\n\n  return [x2, y2, x3, y3, x4, y4];\n};\n\nconst getLinearElementRotatedBounds = (\n  element: ExcalidrawLinearElement,\n  cx: number,\n  cy: number,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        [x, y] = rotate(element.x + x, element.y + y, cx, cy, element.angle);\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [minX, minY, maxX, maxY];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const transformXY = (x: number, y: number) =>\n    rotate(element.x + x, element.y + y, cx, cy, element.angle);\n  return getMinMaxXYFromCurvePathOps(ops, transformXY);\n};\n\nexport const getElementBounds = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  if (isLinearElement(element)) {\n    return getLinearElementRotatedBounds(element, cx, cy);\n  }\n  if (element.type === \"diamond\") {\n    const [x11, y11] = rotate(cx, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(cx, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x1, cy, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, cy, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    return [minX, minY, maxX, maxY];\n  }\n  if (element.type === \"ellipse\") {\n    const w = (x2 - x1) / 2;\n    const h = (y2 - y1) / 2;\n    const cos = Math.cos(element.angle);\n    const sin = Math.sin(element.angle);\n    const ww = Math.hypot(w * cos, h * sin);\n    const hh = Math.hypot(h * cos, w * sin);\n    return [cx - ww, cy - hh, cx + ww, cy + hh];\n  }\n  const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n  const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n  const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n  const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n  const minX = Math.min(x11, x12, x22, x21);\n  const minY = Math.min(y11, y12, y22, y21);\n  const maxX = Math.max(x11, x12, x22, x21);\n  const maxY = Math.max(y11, y12, y22, y21);\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getCommonBounds = (\n  elements: readonly ExcalidrawElement[],\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getResizedElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n  nextWidth: number,\n  nextHeight: number,\n): [number, number, number, number] => {\n  if (!isLinearElement(element)) {\n    return [\n      element.x,\n      element.y,\n      element.x + nextWidth,\n      element.y + nextHeight,\n    ];\n  }\n\n  const points = rescalePoints(\n    0,\n    nextWidth,\n    rescalePoints(1, nextHeight, element.points),\n  );\n\n  const gen = rough.generator();\n  const curve = gen.curve(\n    points as [number, number][],\n    generateRoughOptions(element),\n  );\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getElementPointsCoords = (\n  element: ExcalidrawLinearElement,\n  points: readonly (readonly [number, number])[],\n): [number, number, number, number] => {\n  // This might be computationally heavey\n  const gen = rough.generator();\n  const curve = gen.curve(\n    points as [number, number][],\n    generateRoughOptions(element),\n  );\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getClosestElementBounds = (\n  elements: readonly ExcalidrawElement[],\n  from: { x: number; y: number },\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minDistance = Infinity;\n  let closestElement = elements[0];\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    const distance = distance2d((x1 + x2) / 2, (y1 + y2) / 2, from.x, from.y);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestElement = element;\n    }\n  });\n\n  return getElementBounds(closestElement);\n};\n","import LanguageDetector from \"i18next-browser-languagedetector\";\n\nexport const languages = [\n  { lng: \"en\", label: \"English\", data: require(\"./locales/en.json\") },\n  { lng: \"bg-BG\", label: \"Български\", data: require(\"./locales/bg-BG.json\") },\n  { lng: \"de-DE\", label: \"Deutsch\", data: require(\"./locales/de-DE.json\") },\n  { lng: \"es-ES\", label: \"Español\", data: require(\"./locales/es-ES.json\") },\n  { lng: \"ca-ES\", label: \"Catalan\", data: require(\"./locales/ca-ES.json\") },\n  { lng: \"el-GR\", label: \"Ελληνικά\", data: require(\"./locales/el-GR.json\") },\n  { lng: \"fr-FR\", label: \"Français\", data: require(\"./locales/fr-FR.json\") },\n  {\n    lng: \"id-ID\",\n    label: \"Bahasa Indonesia\",\n    data: require(\"./locales/id-ID.json\"),\n  },\n  { lng: \"it-IT\", label: \"Italiano\", data: require(\"./locales/it-IT.json\") },\n  { lng: \"hu-HU\", label: \"Magyar\", data: require(\"./locales/hu-HU.json\") },\n  { lng: \"nl-NL\", label: \"Nederlands\", data: require(\"./locales/nl-NL.json\") },\n  { lng: \"no-No\", label: \"Norsk\", data: require(\"./locales/no-NO.json\") },\n  { lng: \"pl-PL\", label: \"Polski\", data: require(\"./locales/pl-PL.json\") },\n  { lng: \"pt-PT\", label: \"Português\", data: require(\"./locales/pt-PT.json\") },\n  { lng: \"ru-RU\", label: \"Русский\", data: require(\"./locales/ru-RU.json\") },\n  { lng: \"fi-FI\", label: \"Suomi\", data: require(\"./locales/fi-FI.json\") },\n  { lng: \"tr-TR\", label: \"Türkçe\", data: require(\"./locales/tr-TR.json\") },\n  { lng: \"ja-JP\", label: \"日本語\", data: require(\"./locales/ja-JP.json\") },\n  { lng: \"ko-KR\", label: \"한국어\", data: require(\"./locales/ko-KR.json\") },\n  { lng: \"zh-TW\", label: \"繁體中文\", data: require(\"./locales/zh-TW.json\") },\n  { lng: \"zh-CN\", label: \"简体中文\", data: require(\"./locales/zh-CN.json\") },\n  {\n    lng: \"ar-SA\",\n    label: \"العربية\",\n    data: require(\"./locales/ar-SA.json\"),\n    rtl: true,\n  },\n  {\n    lng: \"he-IL\",\n    label: \"עברית\",\n    data: require(\"./locales/he-IL.json\"),\n    rtl: true,\n  },\n];\n\nlet currentLanguage = languages[0];\nconst fallbackLanguage = languages[0];\n\nexport const setLanguage = (newLng: string | undefined) => {\n  currentLanguage =\n    languages.find((language) => language.lng === newLng) || fallbackLanguage;\n\n  document.documentElement.dir = currentLanguage.rtl ? \"rtl\" : \"ltr\";\n\n  languageDetector.cacheUserLanguage(currentLanguage.lng);\n};\n\nexport const getLanguage = () => currentLanguage;\n\nconst findPartsForData = (data: any, parts: string[]) => {\n  for (var i = 0; i < parts.length; ++i) {\n    const part = parts[i];\n    if (data[part] === undefined) {\n      return undefined;\n    }\n    data = data[part];\n  }\n  if (typeof data !== \"string\") {\n    return undefined;\n  }\n  return data;\n};\n\nexport const t = (path: string, replacement?: { [key: string]: string }) => {\n  const parts = path.split(\".\");\n  let translation =\n    findPartsForData(currentLanguage.data, parts) ||\n    findPartsForData(fallbackLanguage.data, parts);\n  if (translation === undefined) {\n    throw new Error(`Can't find translation for ${path}`);\n  }\n\n  if (replacement) {\n    for (var key in replacement) {\n      translation = translation.replace(`{{${key}}}`, replacement[key]);\n    }\n  }\n  return translation;\n};\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.init({\n  languageUtils: {\n    formatLanguageCode: (lng: string) => lng,\n    isWhitelisted: () => true,\n  },\n  checkWhitelist: false,\n});\n\nsetLanguage(languageDetector.detect());\n","import { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element\";\nimport { FlooredNumber } from \"../types\";\nimport { ScrollBars } from \"./types\";\nimport { getGlobalCSSVariable } from \"../utils\";\nimport { getLanguage } from \"../i18n\";\n\nexport const SCROLLBAR_MARGIN = 4;\nexport const SCROLLBAR_WIDTH = 6;\nexport const SCROLLBAR_COLOR = \"rgba(0,0,0,0.3)\";\n\nexport const getScrollBars = (\n  elements: readonly ExcalidrawElement[],\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n): ScrollBars => {\n  // This is the bounding box of all the elements\n  const [\n    elementsMinX,\n    elementsMinY,\n    elementsMaxX,\n    elementsMaxY,\n  ] = getCommonBounds(elements);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  const safeArea = {\n    top: parseInt(getGlobalCSSVariable(\"sat\")),\n    bottom: parseInt(getGlobalCSSVariable(\"sab\")),\n    left: parseInt(getGlobalCSSVariable(\"sal\")),\n    right: parseInt(getGlobalCSSVariable(\"sar\")),\n  };\n\n  const isRTL = getLanguage().rtl;\n\n  // The viewport is the rectangle currently visible for the user\n  const viewportMinX = -scrollX + viewportWidthDiff / 2 + safeArea.left;\n  const viewportMinY = -scrollY + viewportHeightDiff / 2 + safeArea.top;\n  const viewportMaxX = viewportMinX + viewportWidthWithZoom - safeArea.right;\n  const viewportMaxY = viewportMinY + viewportHeightWithZoom - safeArea.bottom;\n\n  // The scene is the bounding box of both the elements and viewport\n  const sceneMinX = Math.min(elementsMinX, viewportMinX);\n  const sceneMinY = Math.min(elementsMinY, viewportMinY);\n  const sceneMaxX = Math.max(elementsMaxX, viewportMaxX);\n  const sceneMaxY = Math.max(elementsMaxY, viewportMaxY);\n\n  // The scrollbar represents where the viewport is in relationship to the scene\n\n  return {\n    horizontal:\n      viewportMinX === sceneMinX && viewportMaxX === sceneMaxX\n        ? null\n        : {\n            x:\n              Math.max(safeArea.left, SCROLLBAR_MARGIN) +\n              ((viewportMinX - sceneMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth,\n            y:\n              viewportHeight -\n              SCROLLBAR_WIDTH -\n              Math.max(SCROLLBAR_MARGIN, safeArea.bottom),\n            width:\n              ((viewportMaxX - viewportMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.left + safeArea.right),\n            height: SCROLLBAR_WIDTH,\n          },\n    vertical:\n      viewportMinY === sceneMinY && viewportMaxY === sceneMaxY\n        ? null\n        : {\n            x: isRTL\n              ? Math.max(safeArea.left, SCROLLBAR_MARGIN)\n              : viewportWidth -\n                SCROLLBAR_WIDTH -\n                Math.max(safeArea.right, SCROLLBAR_MARGIN),\n            y:\n              ((viewportMinY - sceneMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight +\n              Math.max(safeArea.top, SCROLLBAR_MARGIN),\n            width: SCROLLBAR_WIDTH,\n            height:\n              ((viewportMaxY - viewportMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.top + safeArea.bottom),\n          },\n  };\n};\n\nexport const isOverScrollBars = (\n  scrollBars: ScrollBars,\n  x: number,\n  y: number,\n) => {\n  const [isOverHorizontalScrollBar, isOverVerticalScrollBar] = [\n    scrollBars.horizontal,\n    scrollBars.vertical,\n  ].map((scrollBar) => {\n    return (\n      scrollBar &&\n      scrollBar.x <= x &&\n      x <= scrollBar.x + scrollBar.width &&\n      scrollBar.y <= y &&\n      y <= scrollBar.y + scrollBar.height\n    );\n  });\n\n  return {\n    isOverHorizontalScrollBar,\n    isOverVerticalScrollBar,\n  };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { getElementAbsoluteCoords, getElementBounds } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const getElementsWithinSelection = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  selection: NonDeletedExcalidrawElement,\n) => {\n  const [\n    selectionX1,\n    selectionY1,\n    selectionX2,\n    selectionY2,\n  ] = getElementAbsoluteCoords(selection);\n  return elements.filter((element) => {\n    const [elementX1, elementY1, elementX2, elementY2] = getElementBounds(\n      element,\n    );\n\n    return (\n      element.type !== \"selection\" &&\n      selectionX1 <= elementX1 &&\n      selectionY1 <= elementY1 &&\n      selectionX2 >= elementX2 &&\n      selectionY2 >= elementY2\n    );\n  });\n};\n\nexport const isSomeElementSelected = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n): boolean => {\n  return elements.some((element) => appState.selectedElementIds[element.id]);\n};\n\n/**\n * Returns common attribute (picked by `getAttribute` callback) of selected\n *  elements. If elements don't share the same value, returns `null`.\n */\nexport const getCommonAttributeOfSelectedElements = <T>(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n): T | null => {\n  const attributes = Array.from(\n    new Set(\n      getSelectedElements(elements, appState).map((element) =>\n        getAttribute(element),\n      ),\n    ),\n  );\n  return attributes.length === 1 ? attributes[0] : null;\n};\n\nexport const getSelectedElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  return elements.filter((element) => appState.selectedElementIds[element.id]);\n};\n\nexport const getTargetElement = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  return appState.editingElement\n    ? [appState.editingElement]\n    : getSelectedElements(elements, appState);\n};\n","import { AppState, FlooredNumber } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds, getClosestElementBounds } from \"../element\";\n\nimport {\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n} from \"../utils\";\n\nexport const normalizeScroll = (pos: number) =>\n  Math.floor(pos) as FlooredNumber;\n\nfunction isOutsideViewPort(\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n  cords: Array<number>,\n) {\n  const [x1, y1, x2, y2] = cords;\n  const { x: viewportX1, y: viewportY1 } = sceneCoordsToViewportCoords(\n    { sceneX: x1, sceneY: y1 },\n    appState,\n    canvas,\n    window.devicePixelRatio,\n  );\n  const { x: viewportX2, y: viewportY2 } = sceneCoordsToViewportCoords(\n    { sceneX: x2, sceneY: y2 },\n    appState,\n    canvas,\n    window.devicePixelRatio,\n  );\n  return (\n    viewportX2 - viewportX1 > window.innerWidth ||\n    viewportY2 - viewportY1 > window.innerHeight\n  );\n}\n\nexport const calculateScrollCenter = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n): { scrollX: FlooredNumber; scrollY: FlooredNumber } => {\n  if (!elements.length) {\n    return {\n      scrollX: normalizeScroll(0),\n      scrollY: normalizeScroll(0),\n    };\n  }\n  const scale = window.devicePixelRatio;\n  let [x1, y1, x2, y2] = getCommonBounds(elements);\n  if (isOutsideViewPort(appState, canvas, [x1, y1, x2, y2])) {\n    [x1, y1, x2, y2] = getClosestElementBounds(\n      elements,\n      viewportCoordsToSceneCoords(\n        { clientX: appState.scrollX, clientY: appState.scrollY },\n        appState,\n        canvas,\n        scale,\n      ),\n    );\n  }\n\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  return {\n    scrollX: normalizeScroll(window.innerWidth / 2 - centerX),\n    scrollY: normalizeScroll(window.innerHeight / 2 - centerY),\n  };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getElementAbsoluteCoords, hitTest } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const hasBackground = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasStroke = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"arrow\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasText = (type: string) => type === \"text\";\n\nexport const getElementAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    if (hitTest(elements[i], appState, x, y, zoom)) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n\n  return hitElement;\n};\n\nexport const getElementContainingPosition = (\n  elements: readonly ExcalidrawElement[],\n  x: number,\n  y: number,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(elements[i]);\n    if (x1 < x && x < x2 && y1 < y && y < y2) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n  return hitElement;\n};\n","export const getZoomOrigin = (\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  if (canvas === null) {\n    return { x: 0, y: 0 };\n  }\n  const context = canvas.getContext(\"2d\");\n  if (context === null) {\n    return { x: 0, y: 0 };\n  }\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  return {\n    x: normalizedCanvasWidth / 2,\n    y: normalizedCanvasHeight / 2,\n  };\n};\n\nexport const getNormalizedZoom = (zoom: number): number => {\n  const normalizedZoom = parseFloat(zoom.toFixed(2));\n  const clampedZoom = Math.max(0.1, Math.min(normalizedZoom, 2));\n  return clampedZoom;\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"../element/types\";\nimport {\n  getNonDeletedElements,\n  isNonDeletedElement,\n  getElementMap,\n} from \"../element\";\n\nexport interface SceneStateCallback {\n  (): void;\n}\n\nexport interface SceneStateCallbackRemover {\n  (): void;\n}\n\nclass GlobalScene {\n  private callbacks: Set<SceneStateCallback> = new Set();\n\n  private nonDeletedElements: readonly NonDeletedExcalidrawElement[] = [];\n  private elements: readonly ExcalidrawElement[] = [];\n  private elementsMap: {\n    [id: string]: ExcalidrawElement;\n  } = {};\n\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n\n  getElements(): readonly NonDeletedExcalidrawElement[] {\n    return this.nonDeletedElements;\n  }\n\n  getElement(id: ExcalidrawElement[\"id\"]): ExcalidrawElement | null {\n    return this.elementsMap[id] || null;\n  }\n\n  getNonDeletedElement(\n    id: ExcalidrawElement[\"id\"],\n  ): NonDeleted<ExcalidrawElement> | null {\n    const element = this.getElement(id);\n    if (element && isNonDeletedElement(element)) {\n      return element;\n    }\n    return null;\n  }\n\n  replaceAllElements(nextElements: readonly ExcalidrawElement[]) {\n    this.elements = nextElements;\n    this.elementsMap = getElementMap(nextElements);\n    this.nonDeletedElements = getNonDeletedElements(this.elements);\n    this.informMutation();\n  }\n\n  informMutation() {\n    for (const callback of Array.from(this.callbacks)) {\n      callback();\n    }\n  }\n\n  addCallback(cb: SceneStateCallback): SceneStateCallbackRemover {\n    if (this.callbacks.has(cb)) {\n      throw new Error();\n    }\n\n    this.callbacks.add(cb);\n\n    return () => {\n      if (!this.callbacks.has(cb)) {\n        throw new Error();\n      }\n      this.callbacks.delete(cb);\n    };\n  }\n}\n\nexport const globalSceneState = new GlobalScene();\n","import { FlooredNumber } from \"./types\";\nimport { getZoomOrigin } from \"./scene\";\nimport { CURSOR_TYPE, FONT_FAMILY } from \"./constants\";\nimport { FontFamily, FontString } from \"./element/types\";\n\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nlet mockDateTime: string | null = null;\n\nexport const setDateTimeForTests = (dateTime: string) => {\n  mockDateTime = dateTime;\n};\n\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\n\nexport const capitalizeString = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const isToolIcon = (\n  target: Element | EventTarget | null,\n): target is HTMLElement =>\n  target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\n\nexport const isInputLike = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLSelectElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLInputElement ||\n  target instanceof HTMLTextAreaElement ||\n  target instanceof HTMLSelectElement;\n\nexport const isWritableElement = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLTextAreaElement ||\n  (target instanceof HTMLInputElement &&\n    (target.type === \"text\" || target.type === \"number\"));\n\nexport const getFontFamilyString = ({\n  fontFamily,\n}: {\n  fontFamily: FontFamily;\n}) => {\n  return FONT_FAMILY[fontFamily];\n};\n\n/** returns fontSize+fontFamily string for assignment to DOM elements */\nexport const getFontString = ({\n  fontSize,\n  fontFamily,\n}: {\n  fontSize: number;\n  fontFamily: FontFamily;\n}) => {\n  return `${fontSize}px ${getFontFamilyString({ fontFamily })}` as FontString;\n};\n\n// https://github.com/grassator/canvas-text-editor/blob/master/lib/FontMetrics.js\nexport const measureText = (text: string, font: FontString) => {\n  const line = document.createElement(\"div\");\n  const body = document.body;\n  line.style.position = \"absolute\";\n  line.style.whiteSpace = \"pre\";\n  line.style.font = font;\n  body.appendChild(line);\n  // Now we can measure width and height of the letter\n  line.innerText = text;\n  const width = line.offsetWidth;\n  const height = line.offsetHeight;\n  // Now creating 1px sized item that will be aligned to baseline\n  // to calculate baseline shift\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  span.style.overflow = \"hidden\";\n  span.style.width = \"1px\";\n  span.style.height = \"1px\";\n  line.appendChild(span);\n  // Baseline is important for positioning text on canvas\n  const baseline = span.offsetTop + span.offsetHeight;\n  document.body.removeChild(line);\n\n  return { width, height, baseline };\n};\n\nexport const debounce = <T extends any[]>(\n  fn: (...args: T) => void,\n  timeout: number,\n) => {\n  let handle = 0;\n  let lastArgs: T;\n  const ret = (...args: T) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => fn(...args), timeout);\n  };\n  ret.flush = () => {\n    clearTimeout(handle);\n    fn(...lastArgs);\n  };\n  return ret;\n};\n\nexport const selectNode = (node: Element) => {\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\nexport const removeSelection = () => {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n  }\n};\n\nexport const distance = (x: number, y: number) => Math.abs(x - y);\n\nexport const resetCursor = () => {\n  document.documentElement.style.cursor = \"\";\n};\n\nexport const setCursorForShape = (shape: string) => {\n  if (shape === \"selection\") {\n    resetCursor();\n  } else {\n    document.documentElement.style.cursor = CURSOR_TYPE.CROSSHAIR;\n  }\n};\n\nexport const isFullScreen = () =>\n  document.fullscreenElement?.nodeName === \"HTML\";\n\nexport const allowFullScreen = () =>\n  document.documentElement.requestFullscreen();\n\nexport const exitFullScreen = () => document.exitFullscreen();\n\nexport const getShortcutKey = (shortcut: string): string => {\n  const isMac = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n  if (isMac) {\n    return `${shortcut\n      .replace(/\\bCtrlOrCmd\\b/i, \"Cmd\")\n      .replace(/\\bAlt\\b/i, \"Option\")\n      .replace(/\\bDel\\b/i, \"Delete\")\n      .replace(/\\b(Enter|Return)\\b/i, \"Enter\")}`;\n  }\n  return `${shortcut.replace(/\\bCtrlOrCmd\\b/i, \"Ctrl\")}`;\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY }: { clientX: number; clientY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const clientXWithZoom = zoomOrigin.x + (clientX - zoomOrigin.x) / zoom;\n  const clientYWithZoom = zoomOrigin.y + (clientY - zoomOrigin.y) / zoom;\n\n  const x = clientXWithZoom - scrollX;\n  const y = clientYWithZoom - scrollY;\n\n  return { x, y };\n};\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY }: { sceneX: number; sceneY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const sceneXWithZoomAndScroll =\n    zoomOrigin.x - (zoomOrigin.x - sceneX - scrollX) * zoom;\n  const sceneYWithZoomAndScroll =\n    zoomOrigin.y - (zoomOrigin.y - sceneY - scrollY) * zoom;\n\n  const x = sceneXWithZoomAndScroll;\n  const y = sceneYWithZoomAndScroll;\n\n  return { x, y };\n};\n\nexport const getGlobalCSSVariable = (name: string) =>\n  getComputedStyle(document.documentElement).getPropertyValue(`--${name}`);\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { isTextElement, isLinearElement } from \"../element/typeChecks\";\nimport {\n  getDiamondPoints,\n  getArrowPoints,\n  getElementAbsoluteCoords,\n} from \"../element/bounds\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { Drawable, Options } from \"roughjs/bin/core\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport { RoughGenerator } from \"roughjs/bin/generator\";\nimport { SceneState } from \"../scene/types\";\nimport { SVG_NS, distance, getFontString, getFontFamilyString } from \"../utils\";\nimport { isPathALoop } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\n\nconst CANVAS_PADDING = 20;\n\nconst DASHARRAY_DASHED = [12, 8];\nconst DASHARRAY_DOTTED = [3, 6];\n\nexport interface ExcalidrawElementWithCanvas {\n  element: ExcalidrawElement | ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  canvasZoom: number;\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n}\n\nconst generateElementCanvas = (\n  element: NonDeletedExcalidrawElement,\n  zoom: number,\n): ExcalidrawElementWithCanvas => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\")!;\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  if (isLinearElement(element)) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n\n    canvasOffsetX =\n      element.x > x1\n        ? Math.floor(distance(element.x, x1)) * window.devicePixelRatio\n        : 0;\n    canvasOffsetY =\n      element.y > y1\n        ? Math.floor(distance(element.y, y1)) * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX * zoom, canvasOffsetY * zoom);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n  }\n\n  context.translate(CANVAS_PADDING, CANVAS_PADDING);\n  context.scale(window.devicePixelRatio * zoom, window.devicePixelRatio * zoom);\n\n  const rc = rough.canvas(canvas);\n  drawElementOnCanvas(element, rc, context);\n  context.translate(-CANVAS_PADDING, -CANVAS_PADDING);\n  context.scale(\n    1 / (window.devicePixelRatio * zoom),\n    1 / (window.devicePixelRatio * zoom),\n  );\n  return { element, canvas, canvasZoom: zoom, canvasOffsetX, canvasOffsetY };\n};\n\nconst drawElementOnCanvas = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      rc.draw(getShapeForElement(element) as Drawable);\n      break;\n    }\n    case \"arrow\":\n    case \"draw\":\n    case \"line\": {\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        rc.draw(shape);\n      });\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const font = context.font;\n        context.font = getFontString(element);\n        const fillStyle = context.fillStyle;\n        context.fillStyle = element.strokeColor;\n        const textAlign = context.textAlign;\n        context.textAlign = element.textAlign as CanvasTextAlign;\n        // Canvas does not support multiline text by default\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        for (let i = 0; i < lines.length; i++) {\n          context.fillText(\n            lines[i],\n            0 + horizontalOffset,\n            (i + 1) * lineHeight - verticalOffset,\n          );\n        }\n        context.fillStyle = fillStyle;\n        context.font = font;\n        context.textAlign = textAlign;\n      } else {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst elementWithCanvasCache = new WeakMap<\n  ExcalidrawElement,\n  ExcalidrawElementWithCanvas\n>();\n\nconst shapeCache = new WeakMap<\n  ExcalidrawElement,\n  Drawable | Drawable[] | null\n>();\n\nexport const getShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.get(element);\n\nexport const invalidateShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.delete(element);\n\nexport const generateRoughOptions = (element: ExcalidrawElement): Options => {\n  const options: Options = {\n    seed: element.seed,\n    strokeLineDash:\n      element.strokeStyle === \"dashed\"\n        ? DASHARRAY_DASHED\n        : element.strokeStyle === \"dotted\"\n        ? DASHARRAY_DOTTED\n        : undefined,\n    // for non-solid strokes, disable multiStroke because it tends to make\n    //  dashes/dots overlay each other\n    disableMultiStroke: element.strokeStyle !== \"solid\",\n    // for non-solid strokes, increase the width a bit to make it visually\n    //  similar to solid strokes, because we're also disabling multiStroke\n    strokeWidth:\n      element.strokeStyle !== \"solid\"\n        ? element.strokeWidth + 0.5\n        : element.strokeWidth,\n    // when increasing strokeWidth, we must explicitly set fillWeight and\n    //  hachureGap because if not specified, roughjs uses strokeWidth to\n    //  calculate them (and we don't want the fills to be modified)\n    fillWeight: element.strokeWidth / 2,\n    hachureGap: element.strokeWidth * 4,\n    roughness: element.roughness,\n    stroke: element.strokeColor,\n  };\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      options.fillStyle = element.fillStyle;\n      options.fill =\n        element.backgroundColor === \"transparent\"\n          ? undefined\n          : element.backgroundColor;\n      if (element.type === \"ellipse\") {\n        options.curveFitting = 1;\n      }\n      return options;\n    }\n    case \"line\":\n    case \"draw\": {\n      // If shape is a line and is a closed shape,\n      // fill the shape if a color is set.\n      if (isPathALoop(element.points)) {\n        options.fillStyle = element.fillStyle;\n        options.fill =\n          element.backgroundColor === \"transparent\"\n            ? undefined\n            : element.backgroundColor;\n      }\n      return options;\n    }\n    case \"arrow\":\n      return options;\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nconst generateElement = (\n  element: NonDeletedExcalidrawElement,\n  generator: RoughGenerator,\n  sceneState?: SceneState,\n) => {\n  let shape = shapeCache.get(element) || null;\n  if (!shape) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\":\n        shape = generator.rectangle(\n          0,\n          0,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n\n        break;\n      case \"diamond\": {\n        const [\n          topX,\n          topY,\n          rightX,\n          rightY,\n          bottomX,\n          bottomY,\n          leftX,\n          leftY,\n        ] = getDiamondPoints(element);\n        shape = generator.polygon(\n          [\n            [topX, topY],\n            [rightX, rightY],\n            [bottomX, bottomY],\n            [leftX, leftY],\n          ],\n          generateRoughOptions(element),\n        );\n        break;\n      }\n      case \"ellipse\":\n        shape = generator.ellipse(\n          element.width / 2,\n          element.height / 2,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n        break;\n      case \"line\":\n      case \"draw\":\n      case \"arrow\": {\n        const options = generateRoughOptions(element);\n\n        // points array can be empty in the beginning, so it is important to add\n        // initial position to it\n        const points = element.points.length ? element.points : [[0, 0]];\n\n        // curve is always the first element\n        // this simplifies finding the curve for an element\n        shape = [generator.curve(points as [number, number][], options)];\n\n        // add lines only in arrow\n        if (element.type === \"arrow\") {\n          const [x2, y2, x3, y3, x4, y4] = getArrowPoints(element, shape);\n          // for dotted arrows caps, reduce gap to make it more legible\n          if (element.strokeStyle === \"dotted\") {\n            options.strokeLineDash = [3, 4];\n            // for solid/dashed, keep solid arrow cap\n          } else {\n            delete options.strokeLineDash;\n          }\n          shape.push(\n            ...[\n              generator.line(x3, y3, x2, y2, options),\n              generator.line(x4, y4, x2, y2, options),\n            ],\n          );\n        }\n        break;\n      }\n      case \"text\": {\n        // just to ensure we don't regenerate element.canvas on rerenders\n        shape = [];\n        break;\n      }\n    }\n    shapeCache.set(element, shape);\n  }\n  const zoom = sceneState ? sceneState.zoom : 1;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  const shouldRegenerateBecauseZoom =\n    prevElementWithCanvas &&\n    prevElementWithCanvas.canvasZoom !== zoom &&\n    !sceneState?.shouldCacheIgnoreZoom;\n  if (!prevElementWithCanvas || shouldRegenerateBecauseZoom) {\n    const elementWithCanvas = generateElementCanvas(element, zoom);\n    elementWithCanvasCache.set(element, elementWithCanvas);\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n};\n\nconst drawElementFromCanvas = (\n  elementWithCanvas: ExcalidrawElementWithCanvas,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n) => {\n  const element = elementWithCanvas.element;\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = ((x1 + x2) / 2 + sceneState.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + sceneState.scrollY) * window.devicePixelRatio;\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.rotate(element.angle);\n  context.drawImage(\n    elementWithCanvas.canvas!,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.height / elementWithCanvas.canvasZoom,\n  );\n  context.rotate(-element.angle);\n  context.translate(-cx, -cy);\n  context.scale(window.devicePixelRatio, window.devicePixelRatio);\n};\n\nexport const renderElement = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderOptimizations: boolean,\n  sceneState: SceneState,\n) => {\n  const generator = rc.generator;\n  switch (element.type) {\n    case \"selection\": {\n      context.translate(\n        element.x + sceneState.scrollX,\n        element.y + sceneState.scrollY,\n      );\n      const fillStyle = context.fillStyle;\n      context.fillStyle = \"rgba(0, 0, 255, 0.10)\";\n      context.fillRect(0, 0, element.width, element.height);\n      context.fillStyle = fillStyle;\n      context.translate(\n        -element.x - sceneState.scrollX,\n        -element.y - sceneState.scrollY,\n      );\n      break;\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\":\n    case \"line\":\n    case \"draw\":\n    case \"arrow\":\n    case \"text\": {\n      const elementWithCanvas = generateElement(element, generator, sceneState);\n\n      if (renderOptimizations) {\n        drawElementFromCanvas(elementWithCanvas, rc, context, sceneState);\n      } else {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + sceneState.scrollX;\n        const cy = (y1 + y2) / 2 + sceneState.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context);\n        context.translate(shiftX, shiftY);\n        context.rotate(-element.angle);\n        context.translate(-cx, -cy);\n      }\n      break;\n    }\n    default: {\n      // @ts-ignore\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nexport const renderElementToSvg = (\n  element: NonDeletedExcalidrawElement,\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  offsetX?: number,\n  offsetY?: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2 - (element.x - x1);\n  const cy = (y2 - y1) / 2 - (element.y - y1);\n  const degree = (180 * element.angle) / Math.PI;\n  const generator = rsvg.generator;\n  switch (element.type) {\n    case \"selection\": {\n      // Since this is used only during editing experience, which is canvas based,\n      // this should not happen\n      throw new Error(\"Selection rendering is not supported for SVG\");\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      generateElement(element, generator);\n      const node = rsvg.draw(getShapeForElement(element) as Drawable);\n      const opacity = element.opacity / 100;\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      svgRoot.appendChild(node);\n      break;\n    }\n    case \"line\":\n    case \"draw\":\n    case \"arrow\": {\n      generateElement(element, generator);\n      const group = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      const opacity = element.opacity / 100;\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        const node = rsvg.draw(shape);\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        if (\n          (element.type === \"line\" || element.type === \"draw\") &&\n          isPathALoop(element.points) &&\n          element.backgroundColor !== \"transparent\"\n        ) {\n          node.setAttribute(\"fill-rule\", \"evenodd\");\n        }\n        group.appendChild(node);\n      });\n      svgRoot.appendChild(group);\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const opacity = element.opacity / 100;\n        const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const textAnchor =\n          element.textAlign === \"center\"\n            ? \"middle\"\n            : element.textAlign === \"right\"\n            ? \"end\"\n            : \"start\";\n        for (let i = 0; i < lines.length; i++) {\n          const text = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"text\");\n          text.textContent = lines[i];\n          text.setAttribute(\"x\", `${horizontalOffset}`);\n          text.setAttribute(\"y\", `${(i + 1) * lineHeight - verticalOffset}`);\n          text.setAttribute(\"font-family\", getFontFamilyString(element));\n          text.setAttribute(\"font-size\", `${element.fontSize}px`);\n          text.setAttribute(\"fill\", element.strokeColor);\n          text.setAttribute(\"text-anchor\", textAnchor);\n          text.setAttribute(\"style\", \"white-space: pre;\");\n          node.appendChild(text);\n        }\n        svgRoot.appendChild(node);\n      } else {\n        // @ts-ignore\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n};\n","import { Random } from \"roughjs/bin/math\";\nimport nanoid from \"nanoid\";\n\nlet random = new Random(Date.now());\nlet testIdBase = 0;\n\nexport const randomInteger = () => Math.floor(random.next() * 2 ** 31);\n\nexport const reseed = (seed: number) => {\n  random = new Random(seed);\n  testIdBase = 0;\n};\n\nexport const randomId = () =>\n  process.env.NODE_ENV === \"test\" ? `id${testIdBase++}` : nanoid();\n","import { ExcalidrawElement } from \"./types\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { globalSceneState } from \"../scene\";\nimport { getSizeFromPoints } from \"../points\";\nimport { randomInteger } from \"../random\";\nimport { Point } from \"../types\";\n\ntype ElementUpdate<TElement extends ExcalidrawElement> = Omit<\n  Partial<TElement>,\n  \"id\" | \"seed\" | \"version\" | \"versionNonce\"\n>;\n\n// This function tracks updates of text elements for the purposes for collaboration.\n// The version is used to compare updates when more than one user is working in\n// the same drawing. Note: this will trigger the component to update. Make sure you\n// are calling it either from a React event handler or within unstable_batchedUpdates().\nexport const mutateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n) => {\n  let didChange = false;\n\n  // casting to any because can't use `in` operator\n  // (see https://github.com/microsoft/TypeScript/issues/21732)\n  const { points } = updates as any;\n\n  if (typeof points !== \"undefined\") {\n    updates = { ...getSizeFromPoints(points), ...updates };\n  }\n\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      if (\n        (element as any)[key] === value &&\n        // if object, always update in case its deep prop was mutated\n        (typeof value !== \"object\" || value === null || key === \"groupIds\")\n      ) {\n        continue;\n      }\n\n      if (key === \"points\") {\n        const prevPoints = (element as any)[key];\n        const nextPoints = value;\n        if (prevPoints.length === nextPoints.length) {\n          let didChangePoints = false;\n          let i = prevPoints.length;\n          while (--i) {\n            const prevPoint: Point = prevPoints[i];\n            const nextPoint: Point = nextPoints[i];\n            if (\n              prevPoint[0] !== nextPoint[0] ||\n              prevPoint[1] !== nextPoint[1]\n            ) {\n              didChangePoints = true;\n              break;\n            }\n          }\n          if (!didChangePoints) {\n            continue;\n          }\n        }\n      }\n\n      (element as any)[key] = value;\n      didChange = true;\n    }\n  }\n\n  if (!didChange) {\n    return;\n  }\n\n  if (\n    typeof updates.height !== \"undefined\" ||\n    typeof updates.width !== \"undefined\" ||\n    typeof points !== \"undefined\"\n  ) {\n    invalidateShapeForElement(element);\n  }\n\n  element.version++;\n  element.versionNonce = randomInteger();\n\n  globalSceneState.informMutation();\n};\n\nexport const newElementWith = <TElement extends ExcalidrawElement>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n): TElement => ({\n  ...element,\n  ...updates,\n  version: element.version + 1,\n  versionNonce: randomInteger(),\n});\n","import { ExcalidrawElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { SHIFT_LOCKING_ANGLE } from \"../constants\";\n\nexport const isInvisiblySmallElement = (\n  element: ExcalidrawElement,\n): boolean => {\n  if (isLinearElement(element)) {\n    return element.points.length < 2;\n  }\n  return element.width === 0 && element.height === 0;\n};\n\n/**\n * Makes a perfect shape or diagonal/horizontal/vertical line\n */\nexport const getPerfectElementSize = (\n  elementType: string,\n  width: number,\n  height: number,\n): { width: number; height: number } => {\n  const absWidth = Math.abs(width);\n  const absHeight = Math.abs(height);\n\n  if (\n    elementType === \"line\" ||\n    elementType === \"arrow\" ||\n    elementType === \"draw\"\n  ) {\n    const lockedAngle =\n      Math.round(Math.atan(absHeight / absWidth) / SHIFT_LOCKING_ANGLE) *\n      SHIFT_LOCKING_ANGLE;\n    if (lockedAngle === 0) {\n      height = 0;\n    } else if (lockedAngle === Math.PI / 2) {\n      width = 0;\n    } else {\n      height =\n        Math.round(absWidth * Math.tan(lockedAngle)) * Math.sign(height) ||\n        height;\n    }\n  } else if (elementType !== \"selection\") {\n    height = absWidth * Math.sign(height);\n  }\n  return { width, height };\n};\n\nexport const resizePerfectLineForNWHandler = (\n  element: ExcalidrawElement,\n  x: number,\n  y: number,\n) => {\n  const anchorX = element.x + element.width;\n  const anchorY = element.y + element.height;\n  const distanceToAnchorX = x - anchorX;\n  const distanceToAnchorY = y - anchorY;\n  if (Math.abs(distanceToAnchorX) < Math.abs(distanceToAnchorY) / 2) {\n    mutateElement(element, {\n      x: anchorX,\n      width: 0,\n      y,\n      height: -distanceToAnchorY,\n    });\n  } else if (Math.abs(distanceToAnchorY) < Math.abs(element.width) / 2) {\n    mutateElement(element, {\n      y: anchorY,\n      height: 0,\n    });\n  } else {\n    const nextHeight =\n      Math.sign(distanceToAnchorY) *\n      Math.sign(distanceToAnchorX) *\n      element.width;\n    mutateElement(element, {\n      x,\n      y: anchorY - nextHeight,\n      width: -distanceToAnchorX,\n      height: nextHeight,\n    });\n  }\n};\n\nexport const getNormalizedDimensions = (\n  element: Pick<ExcalidrawElement, \"width\" | \"height\" | \"x\" | \"y\">,\n): {\n  width: ExcalidrawElement[\"width\"];\n  height: ExcalidrawElement[\"height\"];\n  x: ExcalidrawElement[\"x\"];\n  y: ExcalidrawElement[\"y\"];\n} => {\n  const ret = {\n    width: element.width,\n    height: element.height,\n    x: element.x,\n    y: element.y,\n  };\n\n  if (element.width < 0) {\n    const nextWidth = Math.abs(element.width);\n    ret.width = nextWidth;\n    ret.x = element.x - nextWidth;\n  }\n\n  if (element.height < 0) {\n    const nextHeight = Math.abs(element.height);\n    ret.height = nextHeight;\n    ret.y = element.y - nextHeight;\n  }\n\n  return ret;\n};\n","import { GroupId, ExcalidrawElement, NonDeleted } from \"./element/types\";\nimport { AppState } from \"./types\";\nimport { getSelectedElements } from \"./scene\";\n\nexport function selectGroup(\n  groupId: GroupId,\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState {\n  const elementsInGroup = elements.filter((element) =>\n    element.groupIds.includes(groupId),\n  );\n\n  if (elementsInGroup.length < 2) {\n    if (\n      appState.selectedGroupIds[groupId] ||\n      appState.editingGroupId === groupId\n    ) {\n      return {\n        ...appState,\n        selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: false },\n        editingGroupId: null,\n      };\n    }\n    return appState;\n  }\n\n  return {\n    ...appState,\n    selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: true },\n    selectedElementIds: {\n      ...appState.selectedElementIds,\n      ...Object.fromEntries(\n        elementsInGroup.map((element) => [element.id, true]),\n      ),\n    },\n  };\n}\n\n/**\n * If the element's group is selected, don't render an individual\n * selection border around it.\n */\nexport function isSelectedViaGroup(\n  appState: AppState,\n  element: ExcalidrawElement,\n) {\n  return !!element.groupIds\n    .filter((groupId) => groupId !== appState.editingGroupId)\n    .find((groupId) => appState.selectedGroupIds[groupId]);\n}\n\nexport function getSelectedGroupIds(appState: AppState): GroupId[] {\n  return Object.entries(appState.selectedGroupIds)\n    .filter(([groupId, isSelected]) => isSelected)\n    .map(([groupId, isSelected]) => groupId);\n}\n\n/**\n * When you select an element, you often want to actually select the whole group it's in, unless\n * you're currently editing that group.\n */\nexport function selectGroupsForSelectedElements(\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState {\n  let nextAppState = { ...appState };\n\n  const selectedElements = getSelectedElements(elements, appState);\n\n  for (const selectedElement of selectedElements) {\n    let groupIds = selectedElement.groupIds;\n    if (appState.editingGroupId) {\n      // handle the case where a group is nested within a group\n      const indexOfEditingGroup = groupIds.indexOf(appState.editingGroupId);\n      if (indexOfEditingGroup > -1) {\n        groupIds = groupIds.slice(0, indexOfEditingGroup);\n      }\n    }\n    if (groupIds.length > 0) {\n      const groupId = groupIds[groupIds.length - 1];\n      nextAppState = selectGroup(groupId, nextAppState, elements);\n    }\n  }\n\n  return nextAppState;\n}\n\nexport function isElementInGroup(element: ExcalidrawElement, groupId: string) {\n  return element.groupIds.includes(groupId);\n}\n\nexport function getElementsInGroup(\n  elements: readonly ExcalidrawElement[],\n  groupId: string,\n) {\n  return elements.filter((element) => isElementInGroup(element, groupId));\n}\n\nexport function getSelectedGroupIdForElement(\n  element: ExcalidrawElement,\n  selectedGroupIds: { [groupId: string]: boolean },\n) {\n  return element.groupIds.find((groupId) => selectedGroupIds[groupId]);\n}\n\nexport function getNewGroupIdsForDuplication(\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  editingGroupId: AppState[\"editingGroupId\"],\n  mapper: (groupId: GroupId) => GroupId,\n) {\n  const copy = [...groupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const endIndex =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  for (let i = 0; i < endIndex; i++) {\n    copy[i] = mapper(copy[i]);\n  }\n\n  return copy;\n}\n\nexport function addToGroup(\n  prevGroupIds: ExcalidrawElement[\"groupIds\"],\n  newGroupId: GroupId,\n  editingGroupId: AppState[\"editingGroupId\"],\n) {\n  // insert before the editingGroupId, or push to the end.\n  const groupIds = [...prevGroupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const positionToInsert =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  groupIds.splice(positionToInsert, 0, newGroupId);\n  return groupIds;\n}\n\nexport function removeFromSelectedGroups(\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  selectedGroupIds: { [groupId: string]: boolean },\n) {\n  return groupIds.filter((groupId) => !selectedGroupIds[groupId]);\n}\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawGenericElement,\n  NonDeleted,\n  TextAlign,\n  FontFamily,\n  GroupId,\n} from \"../element/types\";\nimport { measureText, getFontString } from \"../utils\";\nimport { randomInteger, randomId } from \"../random\";\nimport { newElementWith } from \"./mutateElement\";\nimport { getNewGroupIdsForDuplication } from \"../groups\";\nimport { AppState } from \"../types\";\n\ntype ElementConstructorOpts = {\n  x: ExcalidrawGenericElement[\"x\"];\n  y: ExcalidrawGenericElement[\"y\"];\n  strokeColor: ExcalidrawGenericElement[\"strokeColor\"];\n  backgroundColor: ExcalidrawGenericElement[\"backgroundColor\"];\n  fillStyle: ExcalidrawGenericElement[\"fillStyle\"];\n  strokeWidth: ExcalidrawGenericElement[\"strokeWidth\"];\n  strokeStyle: ExcalidrawGenericElement[\"strokeStyle\"];\n  roughness: ExcalidrawGenericElement[\"roughness\"];\n  opacity: ExcalidrawGenericElement[\"opacity\"];\n  width?: ExcalidrawGenericElement[\"width\"];\n  height?: ExcalidrawGenericElement[\"height\"];\n  angle?: ExcalidrawGenericElement[\"angle\"];\n};\n\nconst _newElementBase = <T extends ExcalidrawElement>(\n  type: T[\"type\"],\n  {\n    x,\n    y,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    width = 0,\n    height = 0,\n    angle = 0,\n    ...rest\n  }: ElementConstructorOpts & Omit<Partial<ExcalidrawGenericElement>, \"type\">,\n) => ({\n  id: rest.id || randomId(),\n  type,\n  x,\n  y,\n  width,\n  height,\n  angle,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth,\n  strokeStyle,\n  roughness,\n  opacity,\n  seed: rest.seed ?? randomInteger(),\n  version: rest.version || 1,\n  versionNonce: rest.versionNonce ?? 0,\n  isDeleted: false as false,\n  groupIds: [],\n});\n\nexport const newElement = (\n  opts: {\n    type: ExcalidrawGenericElement[\"type\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawGenericElement> =>\n  _newElementBase<ExcalidrawGenericElement>(opts.type, opts);\n\nexport const newTextElement = (\n  opts: {\n    text: string;\n    fontSize: number;\n    fontFamily: FontFamily;\n    textAlign: TextAlign;\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawTextElement> => {\n  const metrics = measureText(opts.text, getFontString(opts));\n  const textElement = newElementWith(\n    {\n      ..._newElementBase<ExcalidrawTextElement>(\"text\", opts),\n      text: opts.text,\n      fontSize: opts.fontSize,\n      fontFamily: opts.fontFamily,\n      textAlign: opts.textAlign,\n      // Center the text\n      x: opts.x - metrics.width / 2,\n      y: opts.y - metrics.height / 2,\n      width: metrics.width,\n      height: metrics.height,\n      baseline: metrics.baseline,\n    },\n    {},\n  );\n\n  return textElement;\n};\n\nexport const newLinearElement = (\n  opts: {\n    type: ExcalidrawLinearElement[\"type\"];\n    lastCommittedPoint?: ExcalidrawLinearElement[\"lastCommittedPoint\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawLinearElement> => {\n  return {\n    ..._newElementBase<ExcalidrawLinearElement>(opts.type, opts),\n    points: [],\n    lastCommittedPoint: opts.lastCommittedPoint || null,\n  };\n};\n\n// Simplified deep clone for the purpose of cloning ExcalidrawElement only\n//  (doesn't clone Date, RegExp, Map, Set, Typed arrays etc.)\n//\n// Adapted from https://github.com/lukeed/klona\nexport const deepCopyElement = (val: any, depth: number = 0) => {\n  if (val == null || typeof val !== \"object\") {\n    return val;\n  }\n\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    const tmp =\n      typeof val.constructor === \"function\"\n        ? Object.create(Object.getPrototypeOf(val))\n        : {};\n    for (const key in val) {\n      if (val.hasOwnProperty(key)) {\n        // don't copy top-level shape property, which we want to regenerate\n        if (depth === 0 && (key === \"shape\" || key === \"canvas\")) {\n          continue;\n        }\n        tmp[key] = deepCopyElement(val[key], depth + 1);\n      }\n    }\n    return tmp;\n  }\n\n  if (Array.isArray(val)) {\n    let k = val.length;\n    const arr = new Array(k);\n    while (k--) {\n      arr[k] = deepCopyElement(val[k], depth + 1);\n    }\n    return arr;\n  }\n\n  return val;\n};\n\n/**\n * Duplicate an element, often used in the alt-drag operation.\n * Note that this method has gotten a bit complicated since the\n * introduction of gruoping/ungrouping elements.\n * @param editingGroupId The current group being edited. The new\n *                       element will inherit this group and its\n *                       parents.\n * @param groupIdMapForOperation A Map that maps old group IDs to\n *                               duplicated ones. If you are duplicating\n *                               multiple elements at once, share this map\n *                               amongst all of them\n * @param element Element to duplicate\n * @param overrides Any element properties to override\n */\nexport const duplicateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  editingGroupId: AppState[\"editingGroupId\"],\n  groupIdMapForOperation: Map<GroupId, GroupId>,\n  element: TElement,\n  overrides?: Partial<TElement>,\n): TElement => {\n  let copy: TElement = deepCopyElement(element);\n  copy.id = randomId();\n  copy.seed = randomInteger();\n  copy.groupIds = getNewGroupIdsForDuplication(\n    copy.groupIds,\n    editingGroupId,\n    (groupId) => {\n      if (!groupIdMapForOperation.has(groupId)) {\n        groupIdMapForOperation.set(groupId, randomId());\n      }\n      return groupIdMapForOperation.get(groupId)!;\n    },\n  );\n  if (overrides) {\n    copy = Object.assign(copy, overrides);\n  }\n  return copy;\n};\n","import { ExcalidrawElement, PointerType } from \"./types\";\n\nimport { getElementAbsoluteCoords } from \"./bounds\";\nimport { rotate } from \"../math\";\n\ntype Sides = \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\" | \"rotation\";\n\nconst handleSizes: { [k in PointerType]: number } = {\n  mouse: 8,\n  pen: 16,\n  touch: 28,\n};\n\nconst ROTATION_HANDLER_GAP = 16;\n\nexport const OMIT_SIDES_FOR_MULTIPLE_ELEMENTS = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  rotation: true,\n};\n\nconst OMIT_SIDES_FOR_TEXT_ELEMENT = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_SLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  nw: true,\n  se: true,\n  rotation: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_BACKSLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  ne: true,\n  sw: true,\n  rotation: true,\n};\n\nconst generateHandler = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n): [number, number, number, number] => {\n  const [xx, yy] = rotate(x + width / 2, y + height / 2, cx, cy, angle);\n  return [xx - width / 2, yy - height / 2, width, height];\n};\n\nexport const handlerRectanglesFromCoords = (\n  [x1, y1, x2, y2]: [number, number, number, number],\n  angle: number,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n  omitSides: { [T in Sides]?: boolean } = {},\n): Partial<{ [T in Sides]: [number, number, number, number] }> => {\n  const size = handleSizes[pointerType];\n  const handlerWidth = size / zoom;\n  const handlerHeight = size / zoom;\n\n  const handlerMarginX = size / zoom;\n  const handlerMarginY = size / zoom;\n\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n\n  const dashedLineMargin = 4 / zoom;\n\n  const centeringOffset = (size - 8) / (2 * zoom);\n\n  const handlers: Partial<\n    { [T in Sides]: [number, number, number, number] }\n  > = {\n    nw: omitSides[\"nw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    ne: omitSides[\"ne\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    sw: omitSides[\"sw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    se: omitSides[\"se\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    rotation: omitSides[\"rotation\"]\n      ? undefined\n      : generateHandler(\n          x1 + width / 2 - handlerWidth / 2,\n          y1 -\n            dashedLineMargin -\n            handlerMarginY +\n            centeringOffset -\n            ROTATION_HANDLER_GAP / zoom,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n  };\n\n  // We only want to show height handlers (all cardinal directions)  above a certain size\n  const minimumSizeForEightHandlers = (5 * size) / zoom;\n  if (Math.abs(width) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"n\"]) {\n      handlers[\"n\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"s\"]) {\n      handlers[\"s\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y2 + dashedLineMargin - centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n  if (Math.abs(height) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"w\"]) {\n      handlers[\"w\"] = generateHandler(\n        x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"e\"]) {\n      handlers[\"e\"] = generateHandler(\n        x2 + dashedLineMargin - centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n\n  return handlers;\n};\n\nexport const handlerRectangles = (\n  element: ExcalidrawElement,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n) => {\n  let omitSides: { [T in Sides]?: boolean } = {};\n  if (\n    element.type === \"arrow\" ||\n    element.type === \"line\" ||\n    element.type === \"draw\"\n  ) {\n    if (element.points.length === 2) {\n      // only check the last point because starting point is always (0,0)\n      const [, p1] = element.points;\n      if (p1[0] === 0 || p1[1] === 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] > 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] > 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] < 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] < 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      }\n    }\n  } else if (element.type === \"text\") {\n    omitSides = OMIT_SIDES_FOR_TEXT_ELEMENT;\n  }\n\n  return handlerRectanglesFromCoords(\n    getElementAbsoluteCoords(element),\n    element.angle,\n    zoom,\n    pointerType,\n    omitSides,\n  );\n};\n","import {\n  distanceBetweenPointAndSegment,\n  isPathALoop,\n  rotate,\n  isPointInPolygon,\n} from \"../math\";\nimport { pointsOnBezierCurves } from \"points-on-curve\";\n\nimport { NonDeletedExcalidrawElement } from \"./types\";\n\nimport {\n  getDiamondPoints,\n  getElementAbsoluteCoords,\n  getCurvePathOps,\n} from \"./bounds\";\nimport { Point } from \"../types\";\nimport { Drawable } from \"roughjs/bin/core\";\nimport { AppState } from \"../types\";\nimport { getShapeForElement } from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\n\nconst isElementDraggableFromInside = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n): boolean => {\n  if (element.type === \"arrow\") {\n    return false;\n  }\n  const dragFromInside =\n    element.backgroundColor !== \"transparent\" ||\n    appState.selectedElementIds[element.id];\n  if (element.type === \"line\" || element.type === \"draw\") {\n    return dragFromInside && isPathALoop(element.points);\n  }\n  return dragFromInside;\n};\n\nexport const hitTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n): boolean => {\n  // For shapes that are composed of lines, we only enable point-selection when the distance\n  // of the click is less than x pixels of any of the lines that the shape is composed of\n  const lineThreshold = 10 / zoom;\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // reverse rotate the pointer\n  [x, y] = rotate(x, y, cx, cy, -element.angle);\n\n  if (element.type === \"ellipse\") {\n    // https://stackoverflow.com/a/46007540/232122\n    const px = Math.abs(x - element.x - element.width / 2);\n    const py = Math.abs(y - element.y - element.height / 2);\n\n    let tx = 0.707;\n    let ty = 0.707;\n\n    const a = Math.abs(element.width) / 2;\n    const b = Math.abs(element.height) / 2;\n\n    [0, 1, 2, 3].forEach((x) => {\n      const xx = a * tx;\n      const yy = b * ty;\n\n      const ex = ((a * a - b * b) * tx ** 3) / a;\n      const ey = ((b * b - a * a) * ty ** 3) / b;\n\n      const rx = xx - ex;\n      const ry = yy - ey;\n\n      const qx = px - ex;\n      const qy = py - ey;\n\n      const r = Math.hypot(ry, rx);\n      const q = Math.hypot(qy, qx);\n\n      tx = Math.min(1, Math.max(0, ((qx * r) / q + ex) / a));\n      ty = Math.min(1, Math.max(0, ((qy * r) / q + ey) / b));\n      const t = Math.hypot(ty, tx);\n      tx /= t;\n      ty /= t;\n    });\n\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        a * tx - (px - lineThreshold) >= 0 && b * ty - (py - lineThreshold) >= 0\n      );\n    }\n    return Math.hypot(a * tx - px, b * ty - py) < lineThreshold;\n  } else if (element.type === \"rectangle\") {\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        x > x1 - lineThreshold &&\n        x < x2 + lineThreshold &&\n        y > y1 - lineThreshold &&\n        y < y2 + lineThreshold\n      );\n    }\n\n    // (x1, y1) --A-- (x2, y1)\n    //    |D             |B\n    // (x1, y2) --C-- (x2, y2)\n    return (\n      distanceBetweenPointAndSegment(x, y, x1, y1, x2, y1) < lineThreshold || // A\n      distanceBetweenPointAndSegment(x, y, x2, y1, x2, y2) < lineThreshold || // B\n      distanceBetweenPointAndSegment(x, y, x2, y2, x1, y2) < lineThreshold || // C\n      distanceBetweenPointAndSegment(x, y, x1, y2, x1, y1) < lineThreshold // D\n    );\n  } else if (element.type === \"diamond\") {\n    x -= element.x;\n    y -= element.y;\n    let [\n      topX,\n      topY,\n      rightX,\n      rightY,\n      bottomX,\n      bottomY,\n      leftX,\n      leftY,\n    ] = getDiamondPoints(element);\n\n    if (isElementDraggableFromInside(element, appState)) {\n      // TODO: remove this when we normalize coordinates globally\n      if (topY > bottomY) {\n        [bottomY, topY] = [topY, bottomY];\n      }\n      if (rightX < leftX) {\n        [leftX, rightX] = [rightX, leftX];\n      }\n\n      topY -= lineThreshold;\n      bottomY += lineThreshold;\n      leftX -= lineThreshold;\n      rightX += lineThreshold;\n\n      // all deltas should be < 0. Delta > 0 indicates it's on the outside side\n      //  of the line.\n      //\n      //          (topX, topY)\n      //     D  /             \\ A\n      //      /               \\\n      //  (leftX, leftY)  (rightX, rightY)\n      //    C \\               / B\n      //      \\              /\n      //      (bottomX, bottomY)\n      //\n      // https://stackoverflow.com/a/2752753/927631\n      return (\n        // delta from line D\n        (leftX - topX) * (y - leftY) - (leftX - x) * (topY - leftY) <= 0 &&\n        // delta from line A\n        (topX - rightX) * (y - rightY) - (x - rightX) * (topY - rightY) <= 0 &&\n        // delta from line B\n        (rightX - bottomX) * (y - bottomY) -\n          (x - bottomX) * (rightY - bottomY) <=\n          0 &&\n        // delta from line C\n        (bottomX - leftX) * (y - leftY) - (x - leftX) * (bottomY - leftY) <= 0\n      );\n    }\n\n    return (\n      distanceBetweenPointAndSegment(x, y, topX, topY, rightX, rightY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, rightX, rightY, bottomX, bottomY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, bottomX, bottomY, leftX, leftY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, leftX, leftY, topX, topY) <\n        lineThreshold\n    );\n  } else if (isLinearElement(element)) {\n    if (!getShapeForElement(element)) {\n      return false;\n    }\n    const shape = getShapeForElement(element) as Drawable[];\n\n    if (\n      x < x1 - lineThreshold ||\n      y < y1 - lineThreshold ||\n      x > x2 + lineThreshold ||\n      y > y2 + lineThreshold\n    ) {\n      return false;\n    }\n\n    const relX = x - element.x;\n    const relY = y - element.y;\n\n    if (isElementDraggableFromInside(element, appState)) {\n      const hit = shape.some((subshape) =>\n        hitTestCurveInside(subshape, relX, relY, lineThreshold),\n      );\n      if (hit) {\n        return true;\n      }\n    }\n\n    // hit thest all \"subshapes\" of the linear element\n    return shape.some((subshape) =>\n      hitTestRoughShape(subshape, relX, relY, lineThreshold),\n    );\n  } else if (element.type === \"text\") {\n    return x >= x1 && x <= x2 && y >= y1 && y <= y2;\n  } else if (element.type === \"selection\") {\n    console.warn(\"This should not happen, we need to investigate why it does.\");\n    return false;\n  }\n  throw new Error(`Unimplemented type ${element.type}`);\n};\n\nconst pointInBezierEquation = (\n  p0: Point,\n  p1: Point,\n  p2: Point,\n  p3: Point,\n  [mx, my]: Point,\n  lineThreshold: number,\n) => {\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // go through t in increments of 0.01\n  let t = 0;\n  while (t <= 1.0) {\n    const tx = equation(t, 0);\n    const ty = equation(t, 1);\n\n    const diff = Math.sqrt(Math.pow(tx - mx, 2) + Math.pow(ty - my, 2));\n\n    if (diff < lineThreshold) {\n      return true;\n    }\n\n    t += 0.01;\n  }\n\n  return false;\n};\n\nconst hitTestCurveInside = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  const ops = getCurvePathOps(drawable);\n  const points: Point[] = [];\n  for (const operation of ops) {\n    if (operation.op === \"move\") {\n      if (points.length) {\n        break;\n      }\n      points.push([operation.data[0], operation.data[1]]);\n    } else if (operation.op === \"bcurveTo\") {\n      points.push([operation.data[0], operation.data[1]]);\n      points.push([operation.data[2], operation.data[3]]);\n      points.push([operation.data[4], operation.data[5]]);\n    }\n  }\n  if (points.length >= 4) {\n    const polygonPoints = pointsOnBezierCurves(points as any, 10, 5);\n    return isPointInPolygon(polygonPoints, x, y);\n  }\n  return false;\n};\n\nconst hitTestRoughShape = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  // read operations from first opSet\n  const ops = getCurvePathOps(drawable);\n\n  // set start position as (0,0) just in case\n  // move operation does not exist (unlikely but it is worth safekeeping it)\n  let currentP: Point = [0, 0];\n\n  return ops.some(({ op, data }, idx) => {\n    // There are only four operation types:\n    // move, bcurveTo, lineTo, and curveTo\n    if (op === \"move\") {\n      // change starting point\n      currentP = (data as unknown) as Point;\n      // move operation does not draw anything; so, it always\n      // returns false\n    } else if (op === \"bcurveTo\") {\n      // create points from bezier curve\n      // bezier curve stores data as a flattened array of three positions\n      // [x1, y1, x2, y2, x3, y3]\n      const p1 = [data[0], data[1]] as Point;\n      const p2 = [data[2], data[3]] as Point;\n      const p3 = [data[4], data[5]] as Point;\n\n      const p0 = currentP;\n      currentP = p3;\n\n      // check if points are on the curve\n      // cubic bezier curves require four parameters\n      // the first parameter is the last stored position (p0)\n      const retVal = pointInBezierEquation(\n        p0,\n        p1,\n        p2,\n        p3,\n        [x, y],\n        lineThreshold,\n      );\n\n      // set end point of bezier curve as the new starting point for\n      // upcoming operations as each operation is based on the last drawn\n      // position of the previous operation\n      return retVal;\n    } else if (op === \"lineTo\") {\n      // TODO: Implement this\n    } else if (op === \"qcurveTo\") {\n      // TODO: Implement this\n    }\n\n    return false;\n  });\n};\n","import {\n  ExcalidrawElement,\n  PointerType,\n  NonDeletedExcalidrawElement,\n} from \"./types\";\n\nimport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nimport { AppState } from \"../types\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nconst isInHandlerRect = (\n  handler: [number, number, number, number],\n  x: number,\n  y: number,\n) =>\n  x >= handler[0] &&\n  x <= handler[0] + handler[2] &&\n  y >= handler[1] &&\n  y <= handler[1] + handler[3];\n\nexport const resizeTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n  pointerType: PointerType,\n): HandlerRectanglesRet | false => {\n  if (!appState.selectedElementIds[element.id]) {\n    return false;\n  }\n\n  const { rotation: rotationHandler, ...handlers } = handlerRectangles(\n    element,\n    zoom,\n    pointerType,\n  );\n\n  if (rotationHandler && isInHandlerRect(rotationHandler, x, y)) {\n    return \"rotation\" as HandlerRectanglesRet;\n  }\n\n  const filter = Object.keys(handlers).filter((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    if (!handler) {\n      return false;\n    }\n    return isInHandlerRect(handler, x, y);\n  });\n\n  if (filter.length > 0) {\n    return filter[0] as HandlerRectanglesRet;\n  }\n\n  return false;\n};\n\nexport const getElementWithResizeHandler = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: number,\n  pointerType: PointerType,\n) => {\n  return elements.reduce((result, element) => {\n    if (result) {\n      return result;\n    }\n    const resizeHandle = resizeTest(\n      element,\n      appState,\n      scenePointerX,\n      scenePointerY,\n      zoom,\n      pointerType,\n    );\n    return resizeHandle ? { element, resizeHandle } : null;\n  }, null as { element: NonDeletedExcalidrawElement; resizeHandle: ReturnType<typeof resizeTest> } | null);\n};\n\nexport const getResizeHandlerFromCoords = (\n  [x1, y1, x2, y2]: readonly [number, number, number, number],\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: number,\n  pointerType: PointerType,\n) => {\n  const handlers = handlerRectanglesFromCoords(\n    [x1, y1, x2, y2],\n    0,\n    zoom,\n    pointerType,\n    OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  );\n\n  const found = Object.keys(handlers).find((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    return handler && isInHandlerRect(handler, scenePointerX, scenePointerY);\n  });\n  return (found || false) as HandlerRectanglesRet;\n};\n\nconst RESIZE_CURSORS = [\"ns\", \"nesw\", \"ew\", \"nwse\"];\nconst rotateResizeCursor = (cursor: string, angle: number) => {\n  const index = RESIZE_CURSORS.indexOf(cursor);\n  if (index >= 0) {\n    const a = Math.round(angle / (Math.PI / 4));\n    cursor = RESIZE_CURSORS[(index + a) % RESIZE_CURSORS.length];\n  }\n  return cursor;\n};\n\n/*\n * Returns bi-directional cursor for the element being resized\n */\nexport const getCursorForResizingElement = (resizingElement: {\n  element?: ExcalidrawElement;\n  resizeHandle: ReturnType<typeof resizeTest>;\n}): string => {\n  const { element, resizeHandle } = resizingElement;\n  const shouldSwapCursors =\n    element && Math.sign(element.height) * Math.sign(element.width) === -1;\n  let cursor = null;\n\n  switch (resizeHandle) {\n    case \"n\":\n    case \"s\":\n      cursor = \"ns\";\n      break;\n    case \"w\":\n    case \"e\":\n      cursor = \"ew\";\n      break;\n    case \"nw\":\n    case \"se\":\n      if (shouldSwapCursors) {\n        cursor = \"nesw\";\n      } else {\n        cursor = \"nwse\";\n      }\n      break;\n    case \"ne\":\n    case \"sw\":\n      if (shouldSwapCursors) {\n        cursor = \"nwse\";\n      } else {\n        cursor = \"nesw\";\n      }\n      break;\n    case \"rotation\":\n      return \"grab\";\n  }\n\n  if (cursor && element) {\n    cursor = rotateResizeCursor(cursor, element.angle);\n  }\n\n  return cursor ? `${cursor}-resize` : \"\";\n};\n\nexport const normalizeResizeHandle = (\n  element: ExcalidrawElement,\n  resizeHandle: HandlerRectanglesRet,\n): HandlerRectanglesRet => {\n  if (element.width >= 0 && element.height >= 0) {\n    return resizeHandle;\n  }\n\n  if (element.width < 0 && element.height < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"se\";\n      case \"ne\":\n        return \"sw\";\n      case \"se\":\n        return \"nw\";\n      case \"sw\":\n        return \"ne\";\n    }\n  } else if (element.width < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"ne\";\n      case \"ne\":\n        return \"nw\";\n      case \"se\":\n        return \"sw\";\n      case \"sw\":\n        return \"se\";\n      case \"e\":\n        return \"w\";\n      case \"w\":\n        return \"e\";\n    }\n  } else {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"sw\";\n      case \"ne\":\n        return \"se\";\n      case \"se\":\n        return \"ne\";\n      case \"sw\":\n        return \"nw\";\n      case \"n\":\n        return \"s\";\n      case \"s\":\n        return \"n\";\n    }\n  }\n\n  return resizeHandle;\n};\n","export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nexport const KEYS = {\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  DELETE: \"Delete\",\n  BACKSPACE: \"Backspace\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  TAB: \"Tab\",\n  SPACE: \" \",\n  QUESTION_MARK: \"?\",\n  F_KEY_CODE: 70,\n  ALT_KEY_CODE: 18,\n  Z_KEY_CODE: 90,\n  G_KEY_CODE: 71,\n} as const;\n\nexport type Key = keyof typeof KEYS;\n\nexport const isArrowKey = (keyCode: string) =>\n  keyCode === KEYS.ARROW_LEFT ||\n  keyCode === KEYS.ARROW_RIGHT ||\n  keyCode === KEYS.ARROW_DOWN ||\n  keyCode === KEYS.ARROW_UP;\n\nexport const getResizeCenterPointKey = (event: MouseEvent | KeyboardEvent) =>\n  event.altKey || event.which === KEYS.ALT_KEY_CODE;\n\nexport const getResizeWithSidesSameLengthKey = (event: MouseEvent) =>\n  event.shiftKey;\n","import { SHIFT_LOCKING_ANGLE } from \"../constants\";\nimport { rescalePoints } from \"../points\";\n\nimport { rotate, adjustXYWithRotation, getFlipAdjustment } from \"../math\";\nimport {\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport {\n  getElementAbsoluteCoords,\n  getCommonBounds,\n  getResizedElementAbsoluteCoords,\n} from \"./bounds\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { mutateElement } from \"./mutateElement\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\nimport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n} from \"./resizeTest\";\nimport {\n  getResizeCenterPointKey,\n  getResizeWithSidesSameLengthKey,\n} from \"../keys\";\nimport { measureText, getFontString } from \"../utils\";\n\ntype ResizeTestType = ReturnType<typeof resizeTest>;\n\nexport const resizeElements = (\n  resizeHandle: ResizeTestType,\n  setResizeHandle: (nextResizeHandle: ResizeTestType) => void,\n  selectedElements: NonDeletedExcalidrawElement[],\n  resizeArrowDirection: \"origin\" | \"end\",\n  event: PointerEvent, // XXX we want to make it independent?\n  pointerX: number,\n  pointerY: number,\n) => {\n  if (selectedElements.length === 1) {\n    const [element] = selectedElements;\n    if (resizeHandle === \"rotation\") {\n      rotateSingleElement(element, pointerX, pointerY, event.shiftKey);\n    } else if (\n      isLinearElement(element) &&\n      element.points.length === 2 &&\n      (resizeHandle === \"nw\" ||\n        resizeHandle === \"ne\" ||\n        resizeHandle === \"sw\" ||\n        resizeHandle === \"se\")\n    ) {\n      resizeSingleTwoPointElement(\n        element,\n        resizeArrowDirection,\n        event.shiftKey,\n        pointerX,\n        pointerY,\n      );\n    } else if (\n      element.type === \"text\" &&\n      (resizeHandle === \"nw\" ||\n        resizeHandle === \"ne\" ||\n        resizeHandle === \"sw\" ||\n        resizeHandle === \"se\")\n    ) {\n      resizeSingleTextElement(\n        element,\n        resizeHandle,\n        getResizeCenterPointKey(event),\n        pointerX,\n        pointerY,\n      );\n    } else if (resizeHandle) {\n      resizeSingleElement(\n        element,\n        resizeHandle,\n        getResizeWithSidesSameLengthKey(event),\n        getResizeCenterPointKey(event),\n        pointerX,\n        pointerY,\n      );\n      setResizeHandle(normalizeResizeHandle(element, resizeHandle));\n      if (element.width < 0) {\n        mutateElement(element, { width: -element.width });\n      }\n      if (element.height < 0) {\n        mutateElement(element, { height: -element.height });\n      }\n    }\n\n    // update cursor\n    // FIXME it is not very nice to have this here\n    document.documentElement.style.cursor = getCursorForResizingElement({\n      element,\n      resizeHandle,\n    });\n\n    return true;\n  } else if (\n    selectedElements.length > 1 &&\n    (resizeHandle === \"nw\" ||\n      resizeHandle === \"ne\" ||\n      resizeHandle === \"sw\" ||\n      resizeHandle === \"se\")\n  ) {\n    resizeMultipleElements(selectedElements, resizeHandle, pointerX, pointerY);\n    return true;\n  }\n  return false;\n};\n\nconst rotateSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  pointerX: number,\n  pointerY: number,\n  isAngleLocking: boolean,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  let angle = (5 * Math.PI) / 2 + Math.atan2(pointerY - cy, pointerX - cx);\n  if (isAngleLocking) {\n    angle += SHIFT_LOCKING_ANGLE / 2;\n    angle -= angle % SHIFT_LOCKING_ANGLE;\n  }\n  if (angle >= 2 * Math.PI) {\n    angle -= 2 * Math.PI;\n  }\n  mutateElement(element, { angle });\n};\n\nconst resizeSingleTwoPointElement = (\n  element: NonDeleted<ExcalidrawLinearElement>,\n  resizeArrowDirection: \"origin\" | \"end\",\n  isAngleLocking: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const pointOrigin = element.points[0]; // can assume always [0, 0]?\n  const pointEnd = element.points[1];\n  if (resizeArrowDirection === \"end\") {\n    if (isAngleLocking) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        pointerX - element.x,\n        pointerY - element.y,\n      );\n      mutateElement(element, {\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        points: [\n          pointOrigin,\n          [\n            pointerX - pointOrigin[0] - element.x,\n            pointerY - pointOrigin[1] - element.y,\n          ],\n        ],\n      });\n    }\n  } else {\n    // resizeArrowDirection === \"origin\"\n    if (isAngleLocking) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        element.x + pointEnd[0] - pointOrigin[0] - pointerX,\n        element.y + pointEnd[1] - pointOrigin[1] - pointerY,\n      );\n      mutateElement(element, {\n        x: element.x + pointEnd[0] - pointOrigin[0] - width,\n        y: element.y + pointEnd[1] - pointOrigin[1] - height,\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        x: pointerX,\n        y: pointerY,\n        points: [\n          pointOrigin,\n          [\n            pointEnd[0] - (pointerX - pointOrigin[0] - element.x),\n            pointEnd[1] - (pointerY - pointOrigin[1] - element.y),\n          ],\n        ],\n      });\n    }\n  }\n};\n\nconst rescalePointsInElement = (\n  element: NonDeletedExcalidrawElement,\n  width: number,\n  height: number,\n) =>\n  isLinearElement(element)\n    ? {\n        points: rescalePoints(\n          0,\n          width,\n          rescalePoints(1, height, element.points),\n        ),\n      }\n    : {};\n\nconst resizeSingleTextElement = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  resizeHandle: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scale;\n  switch (resizeHandle) {\n    case \"se\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n  }\n  if (scale > 0) {\n    const newFontSize = Math.max(element.fontSize * scale, 10);\n    const metrics = measureText(\n      element.text,\n      getFontString({ fontSize: newFontSize, fontFamily: element.fontFamily }),\n    );\n    if (\n      Math.abs(metrics.width - element.width) <= 1 ||\n      Math.abs(metrics.height - element.height) <= 1\n    ) {\n      // we ignore 1px change to avoid janky behavior\n      return;\n    }\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      metrics.width,\n      metrics.height,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n    const [nextElementX, nextElementY] = adjustXYWithRotation(\n      resizeHandle,\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n      isResizeFromCenter,\n    );\n    mutateElement(element, {\n      fontSize: newFontSize,\n      width: metrics.width,\n      height: metrics.height,\n      baseline: metrics.baseline,\n      x: nextElementX,\n      y: nextElementY,\n    });\n  }\n};\n\nconst resizeSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  resizeHandle: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  sidesWithSameLength: boolean,\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scaleX = 1;\n  let scaleY = 1;\n  if (resizeHandle === \"e\" || resizeHandle === \"ne\" || resizeHandle === \"se\") {\n    scaleX = (rotatedX - x1) / (x2 - x1);\n  }\n  if (resizeHandle === \"s\" || resizeHandle === \"sw\" || resizeHandle === \"se\") {\n    scaleY = (rotatedY - y1) / (y2 - y1);\n  }\n  if (resizeHandle === \"w\" || resizeHandle === \"nw\" || resizeHandle === \"sw\") {\n    scaleX = (x2 - rotatedX) / (x2 - x1);\n  }\n  if (resizeHandle === \"n\" || resizeHandle === \"nw\" || resizeHandle === \"ne\") {\n    scaleY = (y2 - rotatedY) / (y2 - y1);\n  }\n  let nextWidth = element.width * scaleX;\n  let nextHeight = element.height * scaleY;\n  if (sidesWithSameLength) {\n    nextWidth = nextHeight = Math.max(nextWidth, nextHeight);\n  }\n  const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n    element,\n    nextWidth,\n    nextHeight,\n  );\n  const deltaX1 = (x1 - nextX1) / 2;\n  const deltaY1 = (y1 - nextY1) / 2;\n  const deltaX2 = (x2 - nextX2) / 2;\n  const deltaY2 = (y2 - nextY2) / 2;\n  const rescaledPoints = rescalePointsInElement(element, nextWidth, nextHeight);\n  const [finalX1, finalY1, finalX2, finalY2] = getResizedElementAbsoluteCoords(\n    {\n      ...element,\n      ...rescaledPoints,\n    },\n    Math.abs(nextWidth),\n    Math.abs(nextHeight),\n  );\n  const [flipDiffX, flipDiffY] = getFlipAdjustment(\n    resizeHandle,\n    nextWidth,\n    nextHeight,\n    nextX1,\n    nextY1,\n    nextX2,\n    nextY2,\n    finalX1,\n    finalY1,\n    finalX2,\n    finalY2,\n    isLinearElement(element),\n    element.angle,\n  );\n  const [nextElementX, nextElementY] = adjustXYWithRotation(\n    resizeHandle,\n    element.x - flipDiffX,\n    element.y - flipDiffY,\n    element.angle,\n    deltaX1,\n    deltaY1,\n    deltaX2,\n    deltaY2,\n    isResizeFromCenter,\n  );\n  if (\n    nextWidth !== 0 &&\n    nextHeight !== 0 &&\n    Number.isFinite(nextElementX) &&\n    Number.isFinite(nextElementY)\n  ) {\n    mutateElement(element, {\n      width: nextWidth,\n      height: nextHeight,\n      x: nextElementX,\n      y: nextElementY,\n      ...rescaledPoints,\n    });\n  }\n};\n\nconst resizeMultipleElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  resizeHandle: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n  switch (resizeHandle) {\n    case \"se\": {\n      const scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      if (scale > 0) {\n        elements.forEach((element) => {\n          const width = element.width * scale;\n          const height = element.height * scale;\n          const [origX1, origY1] = getElementAbsoluteCoords(element);\n          const rescaledPoints = rescalePointsInElement(element, width, height);\n          const [finalX1, finalY1] = getResizedElementAbsoluteCoords(\n            {\n              ...element,\n              ...rescaledPoints,\n            },\n            width,\n            height,\n          );\n          const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n          const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n          mutateElement(element, { width, height, x, y, ...rescaledPoints });\n        });\n      }\n      break;\n    }\n    case \"nw\": {\n      const scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      if (scale > 0) {\n        elements.forEach((element) => {\n          const width = element.width * scale;\n          const height = element.height * scale;\n          const [, , origX2, origY2] = getElementAbsoluteCoords(element);\n          const rescaledPoints = rescalePointsInElement(element, width, height);\n          const [, , finalX2, finalY2] = getResizedElementAbsoluteCoords(\n            {\n              ...element,\n              ...rescaledPoints,\n            },\n            width,\n            height,\n          );\n          const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n          const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n          mutateElement(element, { width, height, x, y, ...rescaledPoints });\n        });\n      }\n      break;\n    }\n    case \"ne\": {\n      const scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      if (scale > 0) {\n        elements.forEach((element) => {\n          const width = element.width * scale;\n          const height = element.height * scale;\n          const [origX1, , , origY2] = getElementAbsoluteCoords(element);\n          const rescaledPoints = rescalePointsInElement(element, width, height);\n          const [finalX1, , , finalY2] = getResizedElementAbsoluteCoords(\n            {\n              ...element,\n              ...rescaledPoints,\n            },\n            width,\n            height,\n          );\n          const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n          const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n          mutateElement(element, { width, height, x, y, ...rescaledPoints });\n        });\n      }\n      break;\n    }\n    case \"sw\": {\n      const scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      if (scale > 0) {\n        elements.forEach((element) => {\n          const width = element.width * scale;\n          const height = element.height * scale;\n          const [, origY1, origX2] = getElementAbsoluteCoords(element);\n          const rescaledPoints = rescalePointsInElement(element, width, height);\n          const [, finalY1, finalX2] = getResizedElementAbsoluteCoords(\n            {\n              ...element,\n              ...rescaledPoints,\n            },\n            width,\n            height,\n          );\n          const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n          const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n          mutateElement(element, { width, height, x, y, ...rescaledPoints });\n        });\n      }\n      break;\n    }\n  }\n};\n\nexport const canResizeMutlipleElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n) => {\n  return elements.every(\n    (element) =>\n      [\"rectangle\", \"diamond\", \"ellipse\"].includes(element.type) ||\n      isLinearElement(element),\n  );\n};\n\nexport const getResizeOffsetXY = (\n  resizeHandle: ResizeTestType,\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1, x2, y2] =\n    selectedElements.length === 1\n      ? getElementAbsoluteCoords(selectedElements[0])\n      : getCommonBounds(selectedElements);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  const angle = selectedElements.length === 1 ? selectedElements[0].angle : 0;\n  [x, y] = rotate(x, y, cx, cy, -angle);\n  switch (resizeHandle) {\n    case \"n\":\n      return rotate(x - (x1 + x2) / 2, y - y1, 0, 0, angle);\n    case \"s\":\n      return rotate(x - (x1 + x2) / 2, y - y2, 0, 0, angle);\n    case \"w\":\n      return rotate(x - x1, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"e\":\n      return rotate(x - x2, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"nw\":\n      return rotate(x - x1, y - y1, 0, 0, angle);\n    case \"ne\":\n      return rotate(x - x2, y - y1, 0, 0, angle);\n    case \"sw\":\n      return rotate(x - x1, y - y2, 0, 0, angle);\n    case \"se\":\n      return rotate(x - x2, y - y2, 0, 0, angle);\n    default:\n      return [0, 0];\n  }\n};\n\nexport const getResizeArrowDirection = (\n  resizeHandle: ResizeTestType,\n  element: NonDeleted<ExcalidrawLinearElement>,\n): \"origin\" | \"end\" => {\n  const [, [px, py]] = element.points;\n  const isResizeEnd =\n    (resizeHandle === \"nw\" && (px < 0 || py < 0)) ||\n    (resizeHandle === \"ne\" && px >= 0) ||\n    (resizeHandle === \"sw\" && px <= 0) ||\n    (resizeHandle === \"se\" && (px > 0 || py > 0));\n  return isResizeEnd ? \"end\" : \"origin\";\n};\n","import { KEYS } from \"../keys\";\nimport { selectNode, isWritableElement, getFontString } from \"../utils\";\nimport { globalSceneState } from \"../scene\";\nimport { isTextElement } from \"./typeChecks\";\nimport { CLASSES } from \"../constants\";\nimport { FontFamily } from \"./types\";\n\nconst trimText = (text: string) => {\n  // whitespace only → trim all because we'd end up inserting invisible element\n  if (!text.trim()) {\n    return \"\";\n  }\n  // replace leading/trailing newlines (only) otherwise it messes up bounding\n  //  box calculation (there's also a bug in FF which inserts trailing newline\n  //  for multiline texts)\n  return text.replace(/^\\n+|\\n+$/g, \"\");\n};\n\ntype TextWysiwygParams = {\n  id: string;\n  initText: string;\n  x: number;\n  y: number;\n  strokeColor: string;\n  fontSize: number;\n  fontFamily: FontFamily;\n  opacity: number;\n  zoom: number;\n  angle: number;\n  textAlign: string;\n  onChange?: (text: string) => void;\n  onSubmit: (text: string) => void;\n  onCancel: () => void;\n};\n\nexport const textWysiwyg = ({\n  id,\n  initText,\n  x,\n  y,\n  strokeColor,\n  fontSize,\n  fontFamily,\n  opacity,\n  zoom,\n  angle,\n  onChange,\n  textAlign,\n  onSubmit,\n  onCancel,\n}: TextWysiwygParams) => {\n  const editable = document.createElement(\"div\");\n  try {\n    editable.contentEditable = \"plaintext-only\";\n  } catch {\n    editable.contentEditable = \"true\";\n  }\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.innerText = initText;\n  editable.dataset.type = \"wysiwyg\";\n\n  const degree = (180 * angle) / Math.PI;\n\n  Object.assign(editable.style, {\n    color: strokeColor,\n    position: \"fixed\",\n    opacity: opacity / 100,\n    top: `${y}px`,\n    left: `${x}px`,\n    transform: `translate(-50%, -50%) scale(${zoom}) rotate(${degree}deg)`,\n    textAlign: textAlign,\n    display: \"inline-block\",\n    font: getFontString({ fontSize, fontFamily }),\n    padding: \"4px\",\n    // This needs to have \"1px solid\" otherwise the carret doesn't show up\n    // the first time on Safari and Chrome!\n    outline: \"1px solid transparent\",\n    whiteSpace: \"nowrap\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\",\n  });\n\n  editable.onpaste = (event) => {\n    try {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) {\n        return;\n      }\n      selection.deleteFromDocument();\n\n      const text = event.clipboardData!.getData(\"text\").replace(/\\r\\n?/g, \"\\n\");\n\n      const span = document.createElement(\"span\");\n      span.innerText = text;\n      const range = selection.getRangeAt(0);\n      range.insertNode(span);\n\n      // deselect\n      window.getSelection()!.removeAllRanges();\n      range.setStart(span, span.childNodes.length);\n      range.setEnd(span, span.childNodes.length);\n      selection.addRange(range);\n\n      event.preventDefault();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  if (onChange) {\n    editable.oninput = () => {\n      onChange(trimText(editable.innerText));\n    };\n  }\n\n  editable.onkeydown = (event) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && !event.altKey) {\n      event.stopPropagation();\n    }\n  };\n\n  const stopEvent = (event: Event) => {\n    event.stopPropagation();\n  };\n\n  const handleSubmit = () => {\n    if (editable.innerText) {\n      onSubmit(trimText(editable.innerText));\n    } else {\n      onCancel();\n    }\n    cleanup();\n  };\n\n  const cleanup = () => {\n    if (isDestroyed) {\n      return;\n    }\n    isDestroyed = true;\n    // remove events to ensure they don't late-fire\n    editable.onblur = null;\n    editable.onpaste = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    window.removeEventListener(\"pointerdown\", onPointerDown);\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    window.removeEventListener(\"blur\", handleSubmit);\n\n    unbindUpdate();\n\n    document.body.removeChild(editable);\n  };\n\n  const rebindBlur = () => {\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    // deferred to guard against focus traps on various UIs that steal focus\n    //  upon pointerUp\n    setTimeout(() => {\n      editable.onblur = handleSubmit;\n      // case: clicking on the same property → no change → no update → no focus\n      editable.focus();\n    });\n  };\n\n  // prevent blur when changing properties from the menu\n  const onPointerDown = (event: MouseEvent) => {\n    if (\n      event.target instanceof HTMLElement &&\n      event.target.closest(`.${CLASSES.SHAPE_ACTIONS_MENU}`) &&\n      !isWritableElement(event.target)\n    ) {\n      editable.onblur = null;\n      window.addEventListener(\"pointerup\", rebindBlur);\n      // handle edge-case where pointerup doesn't fire e.g. due to user\n      //  alt-tabbing away\n      window.addEventListener(\"blur\", handleSubmit);\n    }\n  };\n\n  // handle updates of textElement properties of editing element\n  const unbindUpdate = globalSceneState.addCallback(() => {\n    const editingElement = globalSceneState\n      .getElementsIncludingDeleted()\n      .find((element) => element.id === id);\n    if (editingElement && isTextElement(editingElement)) {\n      Object.assign(editable.style, {\n        font: getFontString(editingElement),\n        textAlign: editingElement.textAlign,\n        color: editingElement.strokeColor,\n        opacity: editingElement.opacity / 100,\n      });\n    }\n    editable.focus();\n  });\n\n  let isDestroyed = false;\n\n  editable.onblur = handleSubmit;\n  window.addEventListener(\"pointerdown\", onPointerDown);\n  window.addEventListener(\"wheel\", stopEvent, true);\n  document.body.appendChild(editable);\n  editable.focus();\n  selectNode(editable);\n};\n","import { measureText, getFontString } from \"../utils\";\nimport { ExcalidrawTextElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\n\nexport const redrawTextBoundingBox = (element: ExcalidrawTextElement) => {\n  const metrics = measureText(element.text, getFontString(element));\n  mutateElement(element, {\n    width: metrics.width,\n    height: metrics.height,\n    baseline: metrics.baseline,\n  });\n};\n","import { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\nimport { getSelectedElements } from \"../scene\";\n\nexport const showSelectedShapeActions = (\n  appState: AppState,\n  elements: readonly NonDeletedExcalidrawElement[],\n) =>\n  Boolean(\n    appState.editingElement ||\n      getSelectedElements(elements, appState).length ||\n      appState.elementType !== \"selection\",\n  );\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport { isInvisiblySmallElement } from \"./sizeHelpers\";\n\nexport {\n  newElement,\n  newTextElement,\n  newLinearElement,\n  duplicateElement,\n} from \"./newElement\";\nexport {\n  getElementAbsoluteCoords,\n  getElementBounds,\n  getCommonBounds,\n  getDiamondPoints,\n  getArrowPoints,\n  getClosestElementBounds,\n} from \"./bounds\";\n\nexport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nexport { hitTest } from \"./collision\";\nexport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n  getElementWithResizeHandler,\n  getResizeHandlerFromCoords,\n} from \"./resizeTest\";\nexport {\n  resizeElements,\n  canResizeMutlipleElements,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n} from \"./resizeElements\";\nexport { isTextElement, isExcalidrawElement } from \"./typeChecks\";\nexport { textWysiwyg } from \"./textWysiwyg\";\nexport { redrawTextBoundingBox } from \"./textElement\";\nexport {\n  getPerfectElementSize,\n  isInvisiblySmallElement,\n  resizePerfectLineForNWHandler,\n  getNormalizedDimensions,\n} from \"./sizeHelpers\";\nexport { showSelectedShapeActions } from \"./showSelectedShapeActions\";\n\nexport const getSyncableElements = (\n  elements: readonly ExcalidrawElement[], // There are places in Excalidraw where synthetic invisibly small elements are added and removed.\n) =>\n  // It's probably best to keep those local otherwise there might be a race condition that\n  // gets the app into an invalid state. I've never seen it happen but I'm worried about it :)\n  elements.filter((el) => el.isDeleted || !isInvisiblySmallElement(el));\n\nexport const getElementMap = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce(\n    (acc: { [key: string]: ExcalidrawElement }, element: ExcalidrawElement) => {\n      acc[element.id] = element;\n      return acc;\n    },\n    {},\n  );\n\nexport const getDrawingVersion = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce((acc, el) => acc + el.version, 0);\n\nexport const getNonDeletedElements = (elements: readonly ExcalidrawElement[]) =>\n  elements.filter(\n    (element) => !element.isDeleted,\n  ) as readonly NonDeletedExcalidrawElement[];\n\nexport const isNonDeletedElement = <T extends ExcalidrawElement>(\n  element: T,\n): element is NonDeleted<T> => !element.isDeleted;\n","import oc from \"open-color\";\nimport { AppState, FlooredNumber } from \"./types\";\nimport { getDateTime } from \"./utils\";\nimport { t } from \"./i18n\";\nimport { FontFamily } from \"./element/types\";\n\nexport const DEFAULT_FONT_SIZE = 20;\nexport const DEFAULT_FONT_FAMILY: FontFamily = 1;\nexport const DEFAULT_TEXT_ALIGN = \"left\";\n\nexport const getDefaultAppState = (): AppState => {\n  return {\n    isLoading: false,\n    errorMessage: null,\n    draggingElement: null,\n    resizingElement: null,\n    multiElement: null,\n    editingElement: null,\n    editingLinearElement: null,\n    elementType: \"selection\",\n    elementLocked: false,\n    exportBackground: true,\n    shouldAddWatermark: false,\n    currentItemStrokeColor: oc.black,\n    currentItemBackgroundColor: \"transparent\",\n    currentItemFillStyle: \"hachure\",\n    currentItemStrokeWidth: 1,\n    currentItemStrokeStyle: \"solid\",\n    currentItemRoughness: 1,\n    currentItemOpacity: 100,\n    currentItemFontSize: DEFAULT_FONT_SIZE,\n    currentItemFontFamily: DEFAULT_FONT_FAMILY,\n    currentItemTextAlign: DEFAULT_TEXT_ALIGN,\n    viewBackgroundColor: oc.white,\n    scrollX: 0 as FlooredNumber,\n    scrollY: 0 as FlooredNumber,\n    cursorX: 0,\n    cursorY: 0,\n    cursorButton: \"up\",\n    scrolledOutside: false,\n    name: `${t(\"labels.untitled\")}-${getDateTime()}`,\n    username: \"\",\n    isCollaborating: false,\n    isResizing: false,\n    isRotating: false,\n    selectionElement: null,\n    zoom: 1,\n    openMenu: null,\n    lastPointerDownWith: \"mouse\",\n    selectedElementIds: {},\n    collaborators: new Map(),\n    shouldCacheIgnoreZoom: false,\n    showShortcutsDialog: false,\n    zenModeEnabled: false,\n    editingGroupId: null,\n    selectedGroupIds: {},\n  };\n};\n\nexport const clearAppStateForLocalStorage = (appState: AppState) => {\n  const {\n    draggingElement,\n    resizingElement,\n    multiElement,\n    editingElement,\n    selectionElement,\n    isResizing,\n    isRotating,\n    collaborators,\n    isCollaborating,\n    isLoading,\n    errorMessage,\n    showShortcutsDialog,\n    editingLinearElement,\n    ...exportedState\n  } = appState;\n  return exportedState;\n};\n\nexport const cleanAppStateForExport = (appState: AppState) => {\n  return {\n    viewBackgroundColor: appState.viewBackgroundColor,\n  };\n};\n","/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  context.stroke();\n};\n","import oc from \"open-color\";\n\nconst shades = (i: number) => [\n  oc.red[i],\n  oc.pink[i],\n  oc.grape[i],\n  oc.violet[i],\n  oc.indigo[i],\n  oc.blue[i],\n  oc.cyan[i],\n  oc.teal[i],\n  oc.green[i],\n  oc.lime[i],\n  oc.yellow[i],\n  oc.orange[i],\n];\n\nexport default {\n  canvasBackground: [oc.white, oc.gray[0], oc.gray[1], ...shades(0)],\n  elementBackground: [\"transparent\", oc.gray[4], oc.gray[6], ...shades(6)],\n  elementStroke: [oc.black, oc.gray[8], oc.gray[7], ...shades(9)],\n};\n","import {\n  NonDeleted,\n  ExcalidrawLinearElement,\n  ExcalidrawElement,\n} from \"./types\";\nimport { distance2d, rotate, isPathALoop } from \"../math\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { getElementPointsCoords } from \"./bounds\";\nimport { Point, AppState } from \"../types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { SceneHistory } from \"../history\";\nimport { globalSceneState } from \"../scene\";\n\nexport class LinearElementEditor {\n  public elementId: ExcalidrawElement[\"id\"];\n  public activePointIndex: number | null;\n  public draggingElementPointIndex: number | null;\n  public lastUncommittedPoint: Point | null;\n\n  constructor(element: NonDeleted<ExcalidrawLinearElement>) {\n    LinearElementEditor.normalizePoints(element);\n\n    this.elementId = element.id;\n    this.activePointIndex = null;\n    this.lastUncommittedPoint = null;\n    this.draggingElementPointIndex = null;\n  }\n\n  // ---------------------------------------------------------------------------\n  // static methods\n  // ---------------------------------------------------------------------------\n\n  static POINT_HANDLE_SIZE = 20;\n\n  static getElement(id: ExcalidrawElement[\"id\"]) {\n    const element = globalSceneState.getNonDeletedElement(id);\n    if (element) {\n      return element as NonDeleted<ExcalidrawLinearElement>;\n    }\n    return null;\n  }\n\n  /** @returns whether point was dragged */\n  static handlePointDragging(\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    scenePointerX: number,\n    scenePointerY: number,\n    lastX: number,\n    lastY: number,\n  ): boolean {\n    if (!appState.editingLinearElement) {\n      return false;\n    }\n    const { editingLinearElement } = appState;\n    let { draggingElementPointIndex, elementId } = editingLinearElement;\n\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return false;\n    }\n\n    const clickedPointIndex =\n      draggingElementPointIndex ??\n      LinearElementEditor.getPointIndexUnderCursor(\n        element,\n        appState.zoom,\n        scenePointerX,\n        scenePointerY,\n      );\n\n    draggingElementPointIndex = draggingElementPointIndex ?? clickedPointIndex;\n    if (draggingElementPointIndex > -1) {\n      if (\n        editingLinearElement.draggingElementPointIndex !==\n          draggingElementPointIndex ||\n        editingLinearElement.activePointIndex !== clickedPointIndex\n      ) {\n        setState({\n          editingLinearElement: {\n            ...editingLinearElement,\n            draggingElementPointIndex,\n            activePointIndex: clickedPointIndex,\n          },\n        });\n      }\n\n      const [deltaX, deltaY] = rotate(\n        scenePointerX - lastX,\n        scenePointerY - lastY,\n        0,\n        0,\n        -element.angle,\n      );\n      const targetPoint = element.points[clickedPointIndex];\n      LinearElementEditor.movePoint(element, clickedPointIndex, [\n        targetPoint[0] + deltaX,\n        targetPoint[1] + deltaY,\n      ]);\n      return true;\n    }\n    return false;\n  }\n\n  static handlePointerUp(\n    editingLinearElement: LinearElementEditor,\n  ): LinearElementEditor {\n    const { elementId, draggingElementPointIndex } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    if (\n      draggingElementPointIndex !== null &&\n      (draggingElementPointIndex === 0 ||\n        draggingElementPointIndex === element.points.length - 1) &&\n      isPathALoop(element.points)\n    ) {\n      LinearElementEditor.movePoint(\n        element,\n        draggingElementPointIndex,\n        draggingElementPointIndex === 0\n          ? element.points[element.points.length - 1]\n          : element.points[0],\n      );\n    }\n    if (draggingElementPointIndex !== null) {\n      return {\n        ...editingLinearElement,\n        draggingElementPointIndex: null,\n      };\n    }\n    return editingLinearElement;\n  }\n\n  static handlePointerDown(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    history: SceneHistory,\n    scenePointerX: number,\n    scenePointerY: number,\n  ): {\n    didAddPoint: boolean;\n    hitElement: ExcalidrawElement | null;\n  } {\n    const ret: ReturnType<typeof LinearElementEditor[\"handlePointerDown\"]> = {\n      didAddPoint: false,\n      hitElement: null,\n    };\n\n    if (!appState.editingLinearElement) {\n      return ret;\n    }\n\n    const { elementId } = appState.editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n\n    if (!element) {\n      return ret;\n    }\n\n    if (event.altKey) {\n      if (!appState.editingLinearElement.lastUncommittedPoint) {\n        mutateElement(element, {\n          points: [\n            ...element.points,\n            LinearElementEditor.createPointAt(\n              element,\n              scenePointerX,\n              scenePointerY,\n            ),\n          ],\n        });\n      }\n      if (appState.editingLinearElement.lastUncommittedPoint !== null) {\n        history.resumeRecording();\n      }\n      setState({\n        editingLinearElement: {\n          ...appState.editingLinearElement,\n          activePointIndex: element.points.length - 1,\n          lastUncommittedPoint: null,\n        },\n      });\n      ret.didAddPoint = true;\n      return ret;\n    }\n\n    const clickedPointIndex = LinearElementEditor.getPointIndexUnderCursor(\n      element,\n      appState.zoom,\n      scenePointerX,\n      scenePointerY,\n    );\n\n    // if we clicked on a point, set the element as hitElement otherwise\n    //  it would get deselected if the point is outside the hitbox area\n    if (clickedPointIndex > -1) {\n      ret.hitElement = element;\n    }\n\n    setState({\n      editingLinearElement: {\n        ...appState.editingLinearElement,\n        activePointIndex: clickedPointIndex > -1 ? clickedPointIndex : null,\n      },\n    });\n    return ret;\n  }\n\n  static handlePointerMove(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n    editingLinearElement: LinearElementEditor,\n  ): LinearElementEditor {\n    const { elementId, lastUncommittedPoint } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    const { points } = element;\n    const lastPoint = points[points.length - 1];\n\n    if (!event.altKey) {\n      if (lastPoint === lastUncommittedPoint) {\n        LinearElementEditor.movePoint(element, points.length - 1, \"delete\");\n      }\n      return editingLinearElement;\n    }\n\n    const newPoint = LinearElementEditor.createPointAt(\n      element,\n      scenePointerX,\n      scenePointerY,\n    );\n\n    if (lastPoint === lastUncommittedPoint) {\n      LinearElementEditor.movePoint(\n        element,\n        element.points.length - 1,\n        newPoint,\n      );\n    } else {\n      LinearElementEditor.movePoint(element, \"new\", newPoint);\n    }\n\n    return {\n      ...editingLinearElement,\n      lastUncommittedPoint: element.points[element.points.length - 1],\n    };\n  }\n\n  static getPointsGlobalCoordinates(\n    element: NonDeleted<ExcalidrawLinearElement>,\n  ) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    return element.points.map((point) => {\n      let { x, y } = element;\n      [x, y] = rotate(x + point[0], y + point[1], cx, cy, element.angle);\n      return [x, y];\n    });\n  }\n\n  static getPointIndexUnderCursor(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    zoom: AppState[\"zoom\"],\n    x: number,\n    y: number,\n  ) {\n    const pointHandles = this.getPointsGlobalCoordinates(element);\n    let idx = pointHandles.length;\n    // loop from right to left because points on the right are rendered over\n    //  points on the left, thus should take precedence when clicking, if they\n    //  overlap\n    while (--idx > -1) {\n      const point = pointHandles[idx];\n      if (\n        distance2d(x, y, point[0], point[1]) * zoom <\n        // +1px to account for outline stroke\n        this.POINT_HANDLE_SIZE / 2 + 1\n      ) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n\n  static createPointAt(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n  ): Point {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const [rotatedX, rotatedY] = rotate(\n      scenePointerX,\n      scenePointerY,\n      cx,\n      cy,\n      -element.angle,\n    );\n\n    return [rotatedX - element.x, rotatedY - element.y];\n  }\n\n  // element-mutating methods\n  // ---------------------------------------------------------------------------\n\n  /**\n   * Normalizes line points so that the start point is at [0,0]. This is\n   *  expected in various parts of the codebase.\n   */\n  static normalizePoints(element: NonDeleted<ExcalidrawLinearElement>) {\n    const { points } = element;\n\n    const offsetX = points[0][0];\n    const offsetY = points[0][1];\n\n    mutateElement(element, {\n      points: points.map((point, _idx) => {\n        return [point[0] - offsetX, point[1] - offsetY] as const;\n      }),\n      x: element.x + offsetX,\n      y: element.y + offsetY,\n    });\n  }\n\n  static movePoint(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    pointIndex: number | \"new\",\n    targetPosition: Point | \"delete\",\n  ) {\n    const { points } = element;\n\n    // in case we're moving start point, instead of modifying its position\n    //  which would break the invariant of it being at [0,0], we move\n    //  all the other points in the opposite direction by delta to\n    //  offset it. We do the same with actual element.x/y position, so\n    //  this hacks are completely transparent to the user.\n    let offsetX = 0;\n    let offsetY = 0;\n\n    let nextPoints: (readonly [number, number])[];\n    if (targetPosition === \"delete\") {\n      // remove point\n      if (pointIndex === \"new\") {\n        throw new Error(\"invalid args in movePoint\");\n      }\n      nextPoints = points.slice();\n      nextPoints.splice(pointIndex, 1);\n      if (pointIndex === 0) {\n        // if deleting first point, make the next to be [0,0] and recalculate\n        //  positions of the rest with respect to it\n        offsetX = nextPoints[0][0];\n        offsetY = nextPoints[0][1];\n        nextPoints = nextPoints.map((point, idx) => {\n          if (idx === 0) {\n            return [0, 0];\n          }\n          return [point[0] - offsetX, point[1] - offsetY];\n        });\n      }\n    } else if (pointIndex === \"new\") {\n      nextPoints = [...points, targetPosition];\n    } else {\n      const deltaX = targetPosition[0] - points[pointIndex][0];\n      const deltaY = targetPosition[1] - points[pointIndex][1];\n      nextPoints = points.map((point, idx) => {\n        if (idx === pointIndex) {\n          if (idx === 0) {\n            offsetX = deltaX;\n            offsetY = deltaY;\n            return point;\n          }\n          offsetX = 0;\n          offsetY = 0;\n\n          return [point[0] + deltaX, point[1] + deltaY] as const;\n        }\n        return offsetX || offsetY\n          ? ([point[0] - offsetX, point[1] - offsetY] as const)\n          : point;\n      });\n    }\n\n    const nextCoords = getElementPointsCoords(element, nextPoints);\n    const prevCoords = getElementPointsCoords(element, points);\n    const nextCenterX = (nextCoords[0] + nextCoords[2]) / 2;\n    const nextCenterY = (nextCoords[1] + nextCoords[3]) / 2;\n    const prevCenterX = (prevCoords[0] + prevCoords[2]) / 2;\n    const prevCenterY = (prevCoords[1] + prevCoords[3]) / 2;\n    const dX = prevCenterX - nextCenterX;\n    const dY = prevCenterY - nextCenterY;\n    const rotated = rotate(offsetX, offsetY, dX, dY, element.angle);\n\n    mutateElement(element, {\n      points: nextPoints,\n      x: element.x + rotated[0],\n      y: element.y + rotated[1],\n    });\n  }\n}\n","import { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport oc from \"open-color\";\n\nimport { FlooredNumber, AppState } from \"../types\";\nimport {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  ExcalidrawLinearElement,\n  NonDeleted,\n  GroupId,\n} from \"../element/types\";\nimport {\n  getElementAbsoluteCoords,\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n  getCommonBounds,\n  canResizeMutlipleElements,\n} from \"../element\";\n\nimport { roundRect } from \"./roundRect\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  getScrollBars,\n  SCROLLBAR_COLOR,\n  SCROLLBAR_WIDTH,\n} from \"../scene/scrollbars\";\nimport { getSelectedElements } from \"../scene/selection\";\n\nimport { renderElement, renderElementToSvg } from \"./renderElement\";\nimport colors from \"../colors\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  isSelectedViaGroup,\n  getSelectedGroupIds,\n  getElementsInGroup,\n} from \"../groups\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nconst colorsForClientId = (clientId: string) => {\n  // Naive way of getting an integer out of the clientId\n  const sum = clientId.split(\"\").reduce((a, str) => a + str.charCodeAt(0), 0);\n\n  // Skip transparent background.\n  const backgrounds = colors.elementBackground.slice(1);\n  const strokes = colors.elementStroke.slice(1);\n  return {\n    background: backgrounds[sum % backgrounds.length],\n    stroke: strokes[sum % strokes.length],\n  };\n};\n\nconst strokeRectWithRotation = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n  fill?: boolean,\n) => {\n  context.translate(cx, cy);\n  context.rotate(angle);\n  if (fill) {\n    context.fillRect(x - cx, y - cy, width, height);\n  }\n  context.strokeRect(x - cx, y - cy, width, height);\n  context.rotate(-angle);\n  context.translate(-cx, -cy);\n};\n\nconst strokeCircle = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) => {\n  context.beginPath();\n  context.arc(x + width / 2, y + height / 2, width / 2, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n};\n\nconst renderLinearPointHandles = (\n  context: CanvasRenderingContext2D,\n  appState: AppState,\n  sceneState: SceneState,\n  element: NonDeleted<ExcalidrawLinearElement>,\n) => {\n  context.translate(sceneState.scrollX, sceneState.scrollY);\n  const origStrokeStyle = context.strokeStyle;\n  const lineWidth = context.lineWidth;\n  context.lineWidth = 1 / sceneState.zoom;\n\n  LinearElementEditor.getPointsGlobalCoordinates(element).forEach(\n    (point, idx) => {\n      context.strokeStyle = \"red\";\n      context.setLineDash([]);\n      context.fillStyle =\n        appState.editingLinearElement?.activePointIndex === idx\n          ? \"rgba(255, 127, 127, 0.9)\"\n          : \"rgba(255, 255, 255, 0.9)\";\n      const { POINT_HANDLE_SIZE } = LinearElementEditor;\n      strokeCircle(\n        context,\n        point[0] - POINT_HANDLE_SIZE / 2 / sceneState.zoom,\n        point[1] - POINT_HANDLE_SIZE / 2 / sceneState.zoom,\n        POINT_HANDLE_SIZE / sceneState.zoom,\n        POINT_HANDLE_SIZE / sceneState.zoom,\n      );\n    },\n  );\n  context.setLineDash([]);\n  context.lineWidth = lineWidth;\n  context.translate(-sceneState.scrollX, -sceneState.scrollY);\n  context.strokeStyle = origStrokeStyle;\n};\n\nexport const renderScene = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  selectionElement: NonDeletedExcalidrawElement | null,\n  scale: number,\n  rc: RoughCanvas,\n  canvas: HTMLCanvasElement,\n  sceneState: SceneState,\n  // extra options, currently passed by export helper\n  {\n    renderScrollbars = true,\n    renderSelection = true,\n    // Whether to employ render optimizations to improve performance.\n    // Should not be turned on for export operations and similar, because it\n    //  doesn't guarantee pixel-perfect output.\n    renderOptimizations = false,\n  }: {\n    renderScrollbars?: boolean;\n    renderSelection?: boolean;\n    renderOptimizations?: boolean;\n  } = {},\n) => {\n  if (!canvas) {\n    return { atLeastOneVisibleElement: false };\n  }\n\n  const context = canvas.getContext(\"2d\")!;\n  context.scale(scale, scale);\n\n  // When doing calculations based on canvas width we should used normalized one\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  // Paint background\n  if (typeof sceneState.viewBackgroundColor === \"string\") {\n    const hasTransparence =\n      sceneState.viewBackgroundColor === \"transparent\" ||\n      sceneState.viewBackgroundColor.length === 5 || // #RGBA\n      sceneState.viewBackgroundColor.length === 9 || // #RRGGBBA\n      /(hsla|rgba)\\(/.test(sceneState.viewBackgroundColor);\n    if (hasTransparence) {\n      context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    }\n    const fillStyle = context.fillStyle;\n    context.fillStyle = sceneState.viewBackgroundColor;\n    context.fillRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    context.fillStyle = fillStyle;\n  } else {\n    context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n  }\n\n  // Apply zoom\n  const zoomTranslationX = (-normalizedCanvasWidth * (sceneState.zoom - 1)) / 2;\n  const zoomTranslationY =\n    (-normalizedCanvasHeight * (sceneState.zoom - 1)) / 2;\n  context.translate(zoomTranslationX, zoomTranslationY);\n  context.scale(sceneState.zoom, sceneState.zoom);\n\n  // Paint visible elements\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(\n      element,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    ),\n  );\n\n  visibleElements.forEach((element) => {\n    renderElement(element, rc, context, renderOptimizations, sceneState);\n    if (\n      isLinearElement(element) &&\n      appState.editingLinearElement &&\n      appState.editingLinearElement.elementId === element.id\n    ) {\n      renderLinearPointHandles(context, appState, sceneState, element);\n    }\n  });\n\n  // Paint selection element\n  if (selectionElement) {\n    renderElement(\n      selectionElement,\n      rc,\n      context,\n      renderOptimizations,\n      sceneState,\n    );\n  }\n\n  // Paint selected elements\n  if (\n    renderSelection &&\n    !appState.multiElement &&\n    !appState.editingLinearElement\n  ) {\n    context.translate(sceneState.scrollX, sceneState.scrollY);\n\n    const selections = elements.reduce((acc, element) => {\n      const selectionColors = [];\n      // local user\n      if (\n        appState.selectedElementIds[element.id] &&\n        !isSelectedViaGroup(appState, element)\n      ) {\n        selectionColors.push(oc.black);\n      }\n      // remote users\n      if (sceneState.remoteSelectedElementIds[element.id]) {\n        selectionColors.push(\n          ...sceneState.remoteSelectedElementIds[element.id].map((socketId) => {\n            const { background } = colorsForClientId(socketId);\n            return background;\n          }),\n        );\n      }\n      if (selectionColors.length) {\n        const [\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n        ] = getElementAbsoluteCoords(element);\n        acc.push({\n          angle: element.angle,\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n          selectionColors,\n        });\n      }\n      return acc;\n    }, [] as { angle: number; elementX1: number; elementY1: number; elementX2: number; elementY2: number; selectionColors: string[] }[]);\n\n    function addSelectionForGroupId(groupId: GroupId) {\n      const groupElements = getElementsInGroup(elements, groupId);\n      const [elementX1, elementY1, elementX2, elementY2] = getCommonBounds(\n        groupElements,\n      );\n      selections.push({\n        angle: 0,\n        elementX1,\n        elementX2,\n        elementY1,\n        elementY2,\n        selectionColors: [oc.black],\n      });\n    }\n\n    for (const groupId of getSelectedGroupIds(appState)) {\n      // TODO: support multiplayer selected group IDs\n      addSelectionForGroupId(groupId);\n    }\n\n    if (appState.editingGroupId) {\n      addSelectionForGroupId(appState.editingGroupId);\n    }\n\n    selections.forEach(\n      ({\n        angle,\n        elementX1,\n        elementY1,\n        elementX2,\n        elementY2,\n        selectionColors,\n      }) => {\n        const elementWidth = elementX2 - elementX1;\n        const elementHeight = elementY2 - elementY1;\n\n        const initialLineDash = context.getLineDash();\n        const lineWidth = context.lineWidth;\n        const lineDashOffset = context.lineDashOffset;\n        const strokeStyle = context.strokeStyle;\n\n        const dashedLinePadding = 4 / sceneState.zoom;\n        const dashWidth = 8 / sceneState.zoom;\n        const spaceWidth = 4 / sceneState.zoom;\n\n        context.lineWidth = 1 / sceneState.zoom;\n\n        const count = selectionColors.length;\n        for (var i = 0; i < count; ++i) {\n          context.strokeStyle = selectionColors[i];\n          context.setLineDash([\n            dashWidth,\n            spaceWidth + (dashWidth + spaceWidth) * (count - 1),\n          ]);\n          context.lineDashOffset = (dashWidth + spaceWidth) * i;\n          strokeRectWithRotation(\n            context,\n            elementX1 - dashedLinePadding,\n            elementY1 - dashedLinePadding,\n            elementWidth + dashedLinePadding * 2,\n            elementHeight + dashedLinePadding * 2,\n            elementX1 + elementWidth / 2,\n            elementY1 + elementHeight / 2,\n            angle,\n          );\n        }\n        context.lineDashOffset = lineDashOffset;\n        context.strokeStyle = strokeStyle;\n        context.lineWidth = lineWidth;\n        context.setLineDash(initialLineDash);\n      },\n    );\n    context.translate(-sceneState.scrollX, -sceneState.scrollY);\n\n    const locallySelectedElements = getSelectedElements(elements, appState);\n\n    // Paint resize handlers\n    if (locallySelectedElements.length === 1) {\n      context.translate(sceneState.scrollX, sceneState.scrollY);\n      context.fillStyle = oc.white;\n      const handlers = handlerRectangles(\n        locallySelectedElements[0],\n        sceneState.zoom,\n      );\n      Object.keys(handlers).forEach((key) => {\n        const handler = handlers[key as HandlerRectanglesRet];\n        if (handler !== undefined) {\n          const lineWidth = context.lineWidth;\n          context.lineWidth = 1 / sceneState.zoom;\n          if (key === \"rotation\") {\n            strokeCircle(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n            );\n          } else {\n            strokeRectWithRotation(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n              handler[0] + handler[2] / 2,\n              handler[1] + handler[3] / 2,\n              locallySelectedElements[0].angle,\n              true, // fill before stroke\n            );\n          }\n          context.lineWidth = lineWidth;\n        }\n      });\n      context.translate(-sceneState.scrollX, -sceneState.scrollY);\n    } else if (locallySelectedElements.length > 1) {\n      if (canResizeMutlipleElements(locallySelectedElements)) {\n        const dashedLinePadding = 4 / sceneState.zoom;\n        context.translate(sceneState.scrollX, sceneState.scrollY);\n        context.fillStyle = oc.white;\n        const [x1, y1, x2, y2] = getCommonBounds(locallySelectedElements);\n        const initialLineDash = context.getLineDash();\n        context.setLineDash([2 / sceneState.zoom]);\n        const lineWidth = context.lineWidth;\n        context.lineWidth = 1 / sceneState.zoom;\n        strokeRectWithRotation(\n          context,\n          x1 - dashedLinePadding,\n          y1 - dashedLinePadding,\n          x2 - x1 + dashedLinePadding * 2,\n          y2 - y1 + dashedLinePadding * 2,\n          (x1 + x2) / 2,\n          (y1 + y2) / 2,\n          0,\n        );\n        context.lineWidth = lineWidth;\n        context.setLineDash(initialLineDash);\n        const handlers = handlerRectanglesFromCoords(\n          [x1, y1, x2, y2],\n          0,\n          sceneState.zoom,\n          undefined,\n          OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n        );\n        Object.keys(handlers).forEach((key) => {\n          const handler = handlers[key as HandlerRectanglesRet];\n          if (handler !== undefined) {\n            const lineWidth = context.lineWidth;\n            context.lineWidth = 1 / sceneState.zoom;\n            strokeRectWithRotation(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n              handler[0] + handler[2] / 2,\n              handler[1] + handler[3] / 2,\n              0,\n              true, // fill before stroke\n            );\n            context.lineWidth = lineWidth;\n          }\n        });\n        context.translate(-sceneState.scrollX, -sceneState.scrollY);\n      }\n    }\n  }\n\n  // Reset zoom\n  context.scale(1 / sceneState.zoom, 1 / sceneState.zoom);\n  context.translate(-zoomTranslationX, -zoomTranslationY);\n\n  // Paint remote pointers\n  for (const clientId in sceneState.remotePointerViewportCoords) {\n    let { x, y } = sceneState.remotePointerViewportCoords[clientId];\n    const username = sceneState.remotePointerUsernames[clientId];\n\n    const width = 9;\n    const height = 14;\n\n    const isOutOfBounds =\n      x < 0 ||\n      x > normalizedCanvasWidth - width ||\n      y < 0 ||\n      y > normalizedCanvasHeight - height;\n\n    x = Math.max(x, 0);\n    x = Math.min(x, normalizedCanvasWidth - width);\n    y = Math.max(y, 0);\n    y = Math.min(y, normalizedCanvasHeight - height);\n\n    const { background, stroke } = colorsForClientId(clientId);\n\n    const strokeStyle = context.strokeStyle;\n    const fillStyle = context.fillStyle;\n    const globalAlpha = context.globalAlpha;\n    context.strokeStyle = stroke;\n    context.fillStyle = background;\n    if (isOutOfBounds) {\n      context.globalAlpha = 0.2;\n    }\n\n    if (\n      sceneState.remotePointerButton &&\n      sceneState.remotePointerButton[clientId] === \"down\"\n    ) {\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 3;\n      context.strokeStyle = \"#ffffff88\";\n      context.stroke();\n      context.closePath();\n\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 1;\n      context.strokeStyle = stroke;\n      context.stroke();\n      context.closePath();\n    }\n\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x + 1, y + 14);\n    context.lineTo(x + 4, y + 9);\n    context.lineTo(x + 9, y + 10);\n    context.lineTo(x, y);\n    context.fill();\n    context.stroke();\n\n    if (!isOutOfBounds && username) {\n      const offsetX = x + width;\n      const offsetY = y + height;\n      const paddingHorizontal = 4;\n      const paddingVertical = 4;\n      const measure = context.measureText(username);\n      const measureHeight =\n        measure.actualBoundingBoxDescent + measure.actualBoundingBoxAscent;\n\n      // Border\n      context.fillStyle = stroke;\n      context.globalAlpha = globalAlpha;\n      context.fillRect(\n        offsetX - 1,\n        offsetY - 1,\n        measure.width + 2 * paddingHorizontal + 2,\n        measureHeight + 2 * paddingVertical + 2,\n      );\n      // Background\n      context.fillStyle = background;\n      context.fillRect(\n        offsetX,\n        offsetY,\n        measure.width + 2 * paddingHorizontal,\n        measureHeight + 2 * paddingVertical,\n      );\n      context.fillStyle = oc.white;\n      context.fillText(\n        username,\n        offsetX + paddingHorizontal,\n        offsetY + paddingVertical + measure.actualBoundingBoxAscent,\n      );\n    }\n\n    context.strokeStyle = strokeStyle;\n    context.fillStyle = fillStyle;\n    context.globalAlpha = globalAlpha;\n    context.closePath();\n  }\n\n  // Paint scrollbars\n  let scrollBars;\n  if (renderScrollbars) {\n    scrollBars = getScrollBars(\n      elements,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    );\n\n    const fillStyle = context.fillStyle;\n    const strokeStyle = context.strokeStyle;\n    context.fillStyle = SCROLLBAR_COLOR;\n    context.strokeStyle = \"rgba(255,255,255,0.8)\";\n    [scrollBars.horizontal, scrollBars.vertical].forEach((scrollBar) => {\n      if (scrollBar) {\n        roundRect(\n          context,\n          scrollBar.x,\n          scrollBar.y,\n          scrollBar.width,\n          scrollBar.height,\n          SCROLLBAR_WIDTH / 2,\n        );\n      }\n    });\n    context.fillStyle = fillStyle;\n    context.strokeStyle = strokeStyle;\n  }\n\n  context.scale(1 / scale, 1 / scale);\n\n  return { atLeastOneVisibleElement: visibleElements.length > 0, scrollBars };\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  return (\n    x2 + scrollX - viewportWidthDiff / 2 >= 0 &&\n    x1 + scrollX - viewportWidthDiff / 2 <= viewportWidthWithZoom &&\n    y2 + scrollY - viewportHeightDiff / 2 >= 0 &&\n    y1 + scrollY - viewportHeightDiff / 2 <= viewportHeightWithZoom\n  );\n};\n\n// This should be only called for exporting purposes\nexport const renderSceneToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  {\n    offsetX = 0,\n    offsetY = 0,\n  }: {\n    offsetX?: number;\n    offsetY?: number;\n  } = {},\n) => {\n  if (!svgRoot) {\n    return;\n  }\n  // render elements\n  elements.forEach((element) => {\n    if (!element.isDeleted) {\n      renderElementToSvg(\n        element,\n        rsvg,\n        svgRoot,\n        element.x + offsetX,\n        element.y + offsetY,\n      );\n    }\n  });\n};\n","import rough from \"roughjs/bin/rough\";\nimport oc from \"open-color\";\nimport { newTextElement } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element/bounds\";\nimport { renderScene, renderSceneToSvg } from \"../renderer/renderScene\";\nimport { distance, SVG_NS, measureText, getFontString } from \"../utils\";\nimport { normalizeScroll } from \"./scroll\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\nimport { DEFAULT_FONT_FAMILY } from \"../appState\";\n\nexport const SVG_EXPORT_TAG = `<!-- svg-source:excalidraw -->`;\n\nexport const exportToCanvas = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    scale?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n  createCanvas: (width: number, height: number) => any = (width, height) => {\n    const tempCanvas = document.createElement(\"canvas\");\n    tempCanvas.width = width * scale;\n    tempCanvas.height = height * scale;\n    return tempCanvas;\n  },\n) => {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate smallest area to fit the contents in\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  const tempCanvas: any = createCanvas(width, height);\n\n  renderScene(\n    sceneElements,\n    appState,\n    null,\n    scale,\n    rough.canvas(tempCanvas),\n    tempCanvas,\n    {\n      viewBackgroundColor: exportBackground ? viewBackgroundColor : null,\n      scrollX: normalizeScroll(-minX + exportPadding),\n      scrollY: normalizeScroll(-minY + exportPadding),\n      zoom: 1,\n      remotePointerViewportCoords: {},\n      remoteSelectedElementIds: {},\n      shouldCacheIgnoreZoom: false,\n      remotePointerUsernames: {},\n    },\n    {\n      renderScrollbars: false,\n      renderSelection: false,\n      renderOptimizations: false,\n    },\n  );\n\n  return tempCanvas;\n};\n\nexport const exportToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n): SVGSVGElement => {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate canvas dimensions\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  // initialze SVG root\n  const svgRoot = document.createElementNS(SVG_NS, \"svg\");\n  svgRoot.setAttribute(\"version\", \"1.1\");\n  svgRoot.setAttribute(\"xmlns\", SVG_NS);\n  svgRoot.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n  svgRoot.innerHTML = `\n  ${SVG_EXPORT_TAG}\n  <defs>\n    <style>\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"https://excalidraw.com/FG_Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"https://excalidraw.com/Cascadia.woff2\");\n      }\n    </style>\n  </defs>\n  `;\n\n  // render backgroiund rect\n  if (exportBackground && viewBackgroundColor) {\n    const rect = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"width\", `${width}`);\n    rect.setAttribute(\"height\", `${height}`);\n    rect.setAttribute(\"fill\", viewBackgroundColor);\n    svgRoot.appendChild(rect);\n  }\n\n  const rsvg = rough.svg(svgRoot);\n  renderSceneToSvg(sceneElements, rsvg, svgRoot, {\n    offsetX: -minX + exportPadding,\n    offsetY: -minY + exportPadding,\n  });\n\n  return svgRoot;\n};\n\nconst getWatermarkElement = (maxX: number, maxY: number) => {\n  const text = t(\"labels.madeWithExcalidraw\");\n  const fontSize = 16;\n  const fontFamily = DEFAULT_FONT_FAMILY;\n  const { width: textWidth } = measureText(\n    text,\n    getFontString({ fontSize, fontFamily }),\n  );\n\n  return newTextElement({\n    text,\n    fontSize,\n    fontFamily,\n    textAlign: \"center\",\n    x: maxX - textWidth / 2,\n    y: maxY + 16,\n    strokeColor: oc.gray[5],\n    backgroundColor: \"transparent\",\n    fillStyle: \"hachure\",\n    strokeWidth: 1,\n    strokeStyle: \"solid\",\n    roughness: 1,\n    opacity: 100,\n  });\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"./element/types\";\nimport { getSelectedElements } from \"./scene\";\nimport { AppState } from \"./types\";\nimport { SVG_EXPORT_TAG } from \"./scene/export\";\n\nlet CLIPBOARD = \"\";\nlet PREFER_APP_CLIPBOARD = false;\n\nexport const probablySupportsClipboardReadText =\n  \"clipboard\" in navigator && \"readText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardWriteText =\n  \"clipboard\" in navigator && \"writeText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardBlob =\n  \"clipboard\" in navigator &&\n  \"write\" in navigator.clipboard &&\n  \"ClipboardItem\" in window &&\n  \"toBlob\" in HTMLCanvasElement.prototype;\n\nexport const copyToAppClipboard = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  CLIPBOARD = JSON.stringify(getSelectedElements(elements, appState));\n  try {\n    // when copying to in-app clipboard, clear system clipboard so that if\n    //  system clip contains text on paste we know it was copied *after* user\n    //  copied elements, and thus we should prefer the text content.\n    await copyTextToSystemClipboard(null);\n    PREFER_APP_CLIPBOARD = false;\n  } catch {\n    // if clearing system clipboard didn't work, we should prefer in-app\n    //  clipboard even if there's text in system clipboard on paste, because\n    //  we can't be sure of the order of copy operations\n    PREFER_APP_CLIPBOARD = true;\n  }\n};\n\nexport const getAppClipboard = (): {\n  elements?: readonly ExcalidrawElement[];\n} => {\n  if (!CLIPBOARD) {\n    return {};\n  }\n\n  try {\n    const clipboardElements = JSON.parse(CLIPBOARD);\n\n    if (\n      Array.isArray(clipboardElements) &&\n      clipboardElements.length > 0 &&\n      clipboardElements[0].type // need to implement a better check here...\n    ) {\n      return { elements: clipboardElements };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return {};\n};\n\nexport const getClipboardContent = async (\n  event: ClipboardEvent | null,\n): Promise<{\n  text?: string;\n  elements?: readonly ExcalidrawElement[];\n}> => {\n  try {\n    const text = event\n      ? event.clipboardData?.getData(\"text/plain\").trim()\n      : probablySupportsClipboardReadText &&\n        (await navigator.clipboard.readText());\n\n    if (text && !PREFER_APP_CLIPBOARD && !text.includes(SVG_EXPORT_TAG)) {\n      return { text };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return getAppClipboard();\n};\n\nexport const copyCanvasToClipboardAsPng = async (canvas: HTMLCanvasElement) =>\n  new Promise((resolve, reject) => {\n    try {\n      canvas.toBlob(async (blob: any) => {\n        try {\n          await navigator.clipboard.write([\n            new window.ClipboardItem({ \"image/png\": blob }),\n          ]);\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n\nexport const copyCanvasToClipboardAsSvg = async (svgroot: SVGSVGElement) => {\n  try {\n    await navigator.clipboard.writeText(svgroot.outerHTML);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const copyTextToSystemClipboard = async (text: string | null) => {\n  let copied = false;\n  if (probablySupportsClipboardWriteText) {\n    try {\n      // NOTE: doesn't work on FF on non-HTTPS domains, or when document\n      //  not focused\n      await navigator.clipboard.writeText(text || \"\");\n      copied = true;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Note that execCommand doesn't allow copying empty strings, so if we're\n  //  clearing clipboard using this API, we must copy at least an empty char\n  if (!copied && !copyTextViaExecCommand(text || \" \")) {\n    throw new Error(\"couldn't copy\");\n  }\n};\n\n// adapted from https://github.com/zenorocha/clipboard.js/blob/ce79f170aa655c408b6aab33c9472e8e4fa52e19/src/clipboard-action.js#L48\nconst copyTextViaExecCommand = (text: string) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const textarea = document.createElement(\"textarea\");\n\n  textarea.style.border = \"0\";\n  textarea.style.padding = \"0\";\n  textarea.style.margin = \"0\";\n  textarea.style.position = \"absolute\";\n  textarea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\";\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  textarea.style.top = `${yPosition}px`;\n  // Prevent zooming on iOS\n  textarea.style.fontSize = \"12pt\";\n\n  textarea.setAttribute(\"readonly\", \"\");\n  textarea.value = text;\n\n  document.body.appendChild(textarea);\n\n  let success = false;\n\n  try {\n    textarea.select();\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    success = document.execCommand(\"copy\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  textarea.remove();\n\n  return success;\n};\n","import {\n  ExcalidrawElement,\n  FontFamily,\n  ExcalidrawSelectionElement,\n} from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { DataState } from \"./types\";\nimport { isInvisiblySmallElement, getNormalizedDimensions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { randomId } from \"../random\";\nimport { DEFAULT_TEXT_ALIGN, DEFAULT_FONT_FAMILY } from \"../appState\";\nimport { FONT_FAMILY } from \"../constants\";\n\nconst getFontFamilyByName = (fontFamilyName: string): FontFamily => {\n  for (const [id, fontFamilyString] of Object.entries(FONT_FAMILY)) {\n    if (fontFamilyString.includes(fontFamilyName)) {\n      return parseInt(id) as FontFamily;\n    }\n  }\n  return DEFAULT_FONT_FAMILY;\n};\n\nfunction migrateElementWithProperties<T extends ExcalidrawElement>(\n  element: T,\n  extra: Omit<T, keyof ExcalidrawElement>,\n): T {\n  const base: Pick<T, keyof ExcalidrawElement> = {\n    type: element.type,\n    // all elements must have version > 0 so getDrawingVersion() will pick up\n    //  newly added elements\n    version: element.version || 1,\n    versionNonce: element.versionNonce ?? 0,\n    isDeleted: false,\n    id: element.id || randomId(),\n    fillStyle: element.fillStyle || \"hachure\",\n    strokeWidth: element.strokeWidth || 1,\n    strokeStyle: element.strokeStyle ?? \"solid\",\n    roughness: element.roughness ?? 1,\n    opacity: element.opacity == null ? 100 : element.opacity,\n    angle: element.angle || 0,\n    x: element.x || 0,\n    y: element.y || 0,\n    strokeColor: element.strokeColor,\n    backgroundColor: element.backgroundColor,\n    width: element.width || 0,\n    height: element.height || 0,\n    seed: element.seed ?? 1,\n    groupIds: element.groupIds || [],\n  };\n\n  return {\n    ...base,\n    ...getNormalizedDimensions(base),\n    ...extra,\n  } as T;\n}\n\nconst migrateElement = (\n  element: Exclude<ExcalidrawElement, ExcalidrawSelectionElement>,\n): typeof element => {\n  switch (element.type) {\n    case \"text\":\n      let fontSize = element.fontSize;\n      let fontFamily = element.fontFamily;\n      if (\"font\" in element) {\n        const [fontPx, _fontFamily]: [\n          string,\n          string,\n        ] = (element as any).font.split(\" \");\n        fontSize = parseInt(fontPx, 10);\n        fontFamily = getFontFamilyByName(_fontFamily);\n      }\n      return migrateElementWithProperties(element, {\n        fontSize,\n        fontFamily,\n        text: element.text ?? \"\",\n        baseline: element.baseline,\n        textAlign: element.textAlign ?? DEFAULT_TEXT_ALIGN,\n      });\n    case \"draw\":\n    case \"line\":\n    case \"arrow\": {\n      return migrateElementWithProperties(element, {\n        points:\n          // migrate old arrow model to new one\n          !Array.isArray(element.points) || element.points.length < 2\n            ? [\n                [0, 0],\n                [element.width, element.height],\n              ]\n            : element.points,\n      });\n    }\n    // generic elements\n    case \"ellipse\":\n    case \"rectangle\":\n    case \"diamond\":\n      return migrateElementWithProperties(element, {});\n\n    // don't use default case so as to catch a missing an element type case\n    //  (we also don't want to throw, but instead return void so we\n    //   filter out these unsupported elements from the restored array)\n  }\n};\n\nexport const restore = (\n  savedElements: readonly ExcalidrawElement[],\n  savedState: AppState | null,\n  opts?: { scrollToContent: boolean },\n): DataState => {\n  const elements = savedElements.reduce((elements, element) => {\n    // filtering out selection, which is legacy, no longer kept in elements,\n    //  and causing issues if retained\n    if (element.type !== \"selection\" && !isInvisiblySmallElement(element)) {\n      const migratedElement = migrateElement(element);\n      if (migratedElement) {\n        elements.push(migratedElement);\n      }\n    }\n    return elements;\n  }, [] as ExcalidrawElement[]);\n\n  if (opts?.scrollToContent && savedState) {\n    savedState = {\n      ...savedState,\n      ...calculateScrollCenter(elements, savedState, null),\n    };\n  }\n\n  return {\n    elements: elements,\n    appState: savedState,\n  };\n};\n","import { getDefaultAppState } from \"../appState\";\nimport { restore } from \"./restore\";\nimport { t } from \"../i18n\";\n\nexport const loadFromBlob = async (blob: any) => {\n  const updateAppState = (contents: string) => {\n    const defaultAppState = getDefaultAppState();\n    let elements = [];\n    let appState = defaultAppState;\n    try {\n      const data = JSON.parse(contents);\n      if (data.type !== \"excalidraw\") {\n        throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n      }\n      elements = data.elements || [];\n      appState = { ...defaultAppState, ...data.appState };\n    } catch {\n      throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n    }\n    return { elements, appState };\n  };\n\n  if (blob.handle) {\n    (window as any).handle = blob.handle;\n  }\n  let contents;\n  if (\"text\" in Blob) {\n    contents = await blob.text();\n  } else {\n    contents = await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsText(blob, \"utf8\");\n      reader.onloadend = () => {\n        if (reader.readyState === FileReader.DONE) {\n          resolve(reader.result as string);\n        }\n      };\n    });\n  }\n\n  const { elements, appState } = updateAppState(contents);\n  return restore(elements, appState, { scrollToContent: true });\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { cleanAppStateForExport } from \"../appState\";\n\nimport { fileOpen, fileSave } from \"browser-nativefs\";\nimport { loadFromBlob } from \"./blob\";\n\nexport const serializeAsJSON = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n): string =>\n  JSON.stringify(\n    {\n      type: \"excalidraw\",\n      version: 2,\n      source: window.location.origin,\n      elements: elements.filter((element) => !element.isDeleted),\n      appState: cleanAppStateForExport(appState),\n    },\n    null,\n    2,\n  );\n\nexport const saveAsJSON = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const serialized = serializeAsJSON(elements, appState);\n\n  const name = `${appState.name}.excalidraw`;\n  await fileSave(\n    new Blob([serialized], {\n      type: /\\b(iPad|iPhone|iPod)\\b/.test(navigator.userAgent)\n        ? \"application/json\"\n        : \"application/vnd.excalidraw+json\",\n    }),\n    {\n      fileName: name,\n      description: \"Excalidraw file\",\n    },\n    (window as any).handle,\n  );\n};\nexport const loadFromJSON = async () => {\n  const blob = await fileOpen({\n    description: \"Excalidraw files\",\n    extensions: [\"json\", \"excalidraw\"],\n    mimeTypes: [\"application/json\", \"application/vnd.excalidraw+json\"],\n  });\n  return loadFromBlob(blob);\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { clearAppStateForLocalStorage } from \"../appState\";\nimport { restore } from \"./restore\";\n\nconst LOCAL_STORAGE_KEY = \"excalidraw\";\nconst LOCAL_STORAGE_KEY_STATE = \"excalidraw-state\";\nconst LOCAL_STORAGE_KEY_COLLAB = \"excalidraw-collab\";\n\nexport const saveUsernameToLocalStorage = (username: string) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_COLLAB,\n      JSON.stringify({ username }),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const restoreUsernameFromLocalStorage = (): string | null => {\n  try {\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY_COLLAB);\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n};\n\nexport const saveToLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY,\n      JSON.stringify(elements.filter((element) => !element.isDeleted)),\n    );\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const restoreFromLocalStorage = () => {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(LOCAL_STORAGE_KEY);\n    savedState = localStorage.getItem(LOCAL_STORAGE_KEY_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements = [];\n  if (savedElements) {\n    try {\n      elements = JSON.parse(savedElements);\n    } catch {\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = JSON.parse(savedState) as AppState;\n      // If we're retrieving from local storage, we should not be collaborating\n      appState.isCollaborating = false;\n      appState.collaborators = new Map();\n    } catch {\n      // Do nothing because appState is already null\n    }\n  }\n  return restore(elements, appState);\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getDefaultAppState } from \"../appState\";\n\nimport { AppState } from \"../types\";\nimport { exportToCanvas, exportToSvg } from \"../scene/export\";\nimport { fileSave } from \"browser-nativefs\";\n\nimport { t } from \"../i18n\";\nimport {\n  copyCanvasToClipboardAsPng,\n  copyCanvasToClipboardAsSvg,\n} from \"../clipboard\";\nimport { serializeAsJSON } from \"./json\";\n\nimport { ExportType } from \"../scene/types\";\nimport { restore } from \"./restore\";\nimport { restoreFromLocalStorage } from \"./localStorage\";\n\nexport { loadFromBlob } from \"./blob\";\nexport { saveAsJSON, loadFromJSON } from \"./json\";\nexport { saveToLocalStorage } from \"./localStorage\";\n\nconst BACKEND_GET = \"https://json.excalidraw.com/api/v1/\";\n\nconst BACKEND_V2_POST = \"https://json.excalidraw.com/api/v2/post/\";\nconst BACKEND_V2_GET = \"https://json.excalidraw.com/api/v2/\";\n\nexport const SOCKET_SERVER = \"https://excalidraw-socket.herokuapp.com\";\n\nexport type EncryptedData = {\n  data: ArrayBuffer;\n  iv: Uint8Array;\n};\n\nexport type SocketUpdateDataSource = {\n  SCENE_INIT: {\n    type: \"SCENE_INIT\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  SCENE_UPDATE: {\n    type: \"SCENE_UPDATE\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  MOUSE_LOCATION: {\n    type: \"MOUSE_LOCATION\";\n    payload: {\n      socketID: string;\n      pointerCoords: { x: number; y: number };\n      button: \"down\" | \"up\";\n      selectedElementIds: AppState[\"selectedElementIds\"];\n      username: string;\n    };\n  };\n};\n\nexport type SocketUpdateDataIncoming =\n  | SocketUpdateDataSource[keyof SocketUpdateDataSource]\n  | {\n      type: \"INVALID_RESPONSE\";\n    };\n\n// TODO: Defined globally, since file handles aren't yet serializable.\n// Once `FileSystemFileHandle` can be serialized, make this\n// part of `AppState`.\n(window as any).handle = null;\n\nconst byteToHex = (byte: number): string => `0${byte.toString(16)}`.slice(-2);\n\nconst generateRandomID = async () => {\n  const arr = new Uint8Array(10);\n  window.crypto.getRandomValues(arr);\n  return Array.from(arr, byteToHex).join(\"\");\n};\n\nconst generateEncryptionKey = async () => {\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  return (await window.crypto.subtle.exportKey(\"jwk\", key)).k;\n};\n\nconst createIV = () => {\n  const arr = new Uint8Array(12);\n  return window.crypto.getRandomValues(arr);\n};\n\nexport const getCollaborationLinkData = (link: string) => {\n  if (link.length === 0) {\n    return;\n  }\n  const hash = new URL(link).hash;\n  return hash.match(/^#room=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/);\n};\n\nexport const generateCollaborationLink = async () => {\n  const id = await generateRandomID();\n  const key = await generateEncryptionKey();\n  return `${window.location.origin}${window.location.pathname}#room=${id},${key}`;\n};\n\nconst getImportedKey = (key: string, usage: KeyUsage) =>\n  window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      alg: \"A128GCM\",\n      ext: true,\n      k: key,\n      key_ops: [\"encrypt\", \"decrypt\"],\n      kty: \"oct\",\n    },\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    false, // extractable\n    [usage],\n  );\n\nexport const encryptAESGEM = async (\n  data: Uint8Array,\n  key: string,\n): Promise<EncryptedData> => {\n  const importedKey = await getImportedKey(key, \"encrypt\");\n  const iv = createIV();\n  return {\n    data: await window.crypto.subtle.encrypt(\n      {\n        name: \"AES-GCM\",\n        iv,\n      },\n      importedKey,\n      data,\n    ),\n    iv,\n  };\n};\n\nexport const decryptAESGEM = async (\n  data: ArrayBuffer,\n  key: string,\n  iv: Uint8Array,\n): Promise<SocketUpdateDataIncoming> => {\n  try {\n    const importedKey = await getImportedKey(key, \"decrypt\");\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: iv,\n      },\n      importedKey,\n      data,\n    );\n\n    const decodedData = new TextDecoder(\"utf-8\").decode(\n      new Uint8Array(decrypted) as any,\n    );\n    return JSON.parse(decodedData);\n  } catch (error) {\n    window.alert(t(\"alerts.decryptFailed\"));\n    console.error(error);\n  }\n  return {\n    type: \"INVALID_RESPONSE\",\n  };\n};\n\nexport const exportToBackend = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const json = serializeAsJSON(elements, appState);\n  const encoded = new TextEncoder().encode(json);\n\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  // The iv is set to 0. We are never going to reuse the same key so we don't\n  // need to have an iv. (I hope that's correct...)\n  const iv = new Uint8Array(12);\n  // We use symmetric encryption. AES-GCM is the recommended algorithm and\n  // includes checks that the ciphertext has not been modified by an attacker.\n  const encrypted = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv,\n    },\n    key,\n    encoded,\n  );\n  // We use jwk encoding to be able to extract just the base64 encoded key.\n  // We will hardcode the rest of the attributes when importing back the key.\n  const exportedKey = await window.crypto.subtle.exportKey(\"jwk\", key);\n\n  try {\n    const response = await fetch(BACKEND_V2_POST, {\n      method: \"POST\",\n      body: encrypted,\n    });\n    const json = await response.json();\n    if (json.id) {\n      const url = new URL(window.location.href);\n      // We need to store the key (and less importantly the id) as hash instead\n      // of queryParam in order to never send it to the server\n      url.hash = `json=${json.id},${exportedKey.k!}`;\n      const urlString = url.toString();\n\n      window.prompt(`🔒${t(\"alerts.uploadedSecurly\")}`, urlString);\n    } else {\n      window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n    }\n  } catch (error) {\n    console.error(error);\n    window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n  }\n};\n\nexport const importFromBackend = async (\n  id: string | null,\n  privateKey: string | undefined,\n) => {\n  let elements: readonly ExcalidrawElement[] = [];\n  let appState: AppState = getDefaultAppState();\n\n  try {\n    const response = await fetch(\n      privateKey ? `${BACKEND_V2_GET}${id}` : `${BACKEND_GET}${id}.json`,\n    );\n    if (!response.ok) {\n      window.alert(t(\"alerts.importBackendFailed\"));\n      return restore(elements, appState, { scrollToContent: true });\n    }\n    let data;\n    if (privateKey) {\n      const buffer = await response.arrayBuffer();\n      const key = await getImportedKey(privateKey, \"decrypt\");\n      const iv = new Uint8Array(12);\n      const decrypted = await window.crypto.subtle.decrypt(\n        {\n          name: \"AES-GCM\",\n          iv: iv,\n        },\n        key,\n        buffer,\n      );\n      // We need to convert the decrypted array buffer to a string\n      const string = new window.TextDecoder(\"utf-8\").decode(\n        new Uint8Array(decrypted) as any,\n      );\n      data = JSON.parse(string);\n    } else {\n      // Legacy format\n      data = await response.json();\n    }\n\n    elements = data.elements || elements;\n    appState = { ...appState, ...data.appState };\n  } catch (error) {\n    window.alert(t(\"alerts.importBackendFailed\"));\n    console.error(error);\n  } finally {\n    return restore(elements, appState, { scrollToContent: true });\n  }\n};\n\nexport const exportCanvas = async (\n  type: ExportType,\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    name,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    name: string;\n    scale?: number;\n    shouldAddWatermark: boolean;\n  },\n) => {\n  if (elements.length === 0) {\n    return window.alert(t(\"alerts.cannotExportEmptyCanvas\"));\n  }\n  if (type === \"svg\" || type === \"clipboard-svg\") {\n    const tempSvg = exportToSvg(elements, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      shouldAddWatermark,\n    });\n    if (type === \"svg\") {\n      await fileSave(new Blob([tempSvg.outerHTML], { type: \"image/svg+xml\" }), {\n        fileName: `${name}.svg`,\n      });\n      return;\n    } else if (type === \"clipboard-svg\") {\n      copyCanvasToClipboardAsSvg(tempSvg);\n      return;\n    }\n  }\n\n  const tempCanvas = exportToCanvas(elements, appState, {\n    exportBackground,\n    viewBackgroundColor,\n    exportPadding,\n    scale,\n    shouldAddWatermark,\n  });\n  tempCanvas.style.display = \"none\";\n  document.body.appendChild(tempCanvas);\n\n  if (type === \"png\") {\n    const fileName = `${name}.png`;\n    tempCanvas.toBlob(async (blob: any) => {\n      if (blob) {\n        await fileSave(blob, {\n          fileName: fileName,\n        });\n      }\n    });\n  } else if (type === \"clipboard\") {\n    try {\n      copyCanvasToClipboardAsPng(tempCanvas);\n    } catch {\n      window.alert(t(\"alerts.couldNotCopyToClipboard\"));\n    }\n  } else if (type === \"backend\") {\n    const appState = getDefaultAppState();\n    if (exportBackground) {\n      appState.viewBackgroundColor = viewBackgroundColor;\n    }\n    exportToBackend(elements, appState);\n  }\n\n  // clean up the DOM\n  if (tempCanvas !== canvas) {\n    tempCanvas.remove();\n  }\n};\n\nexport const loadScene = async (id: string | null, privateKey?: string) => {\n  let data;\n  if (id != null) {\n    // the private key is used to decrypt the content from the server, take\n    // extra care not to leak it\n    data = await importFromBackend(id, privateKey);\n    window.history.replaceState({}, \"Excalidraw\", window.location.origin);\n  } else {\n    data = restoreFromLocalStorage();\n  }\n\n  return {\n    elements: data.elements,\n    appState: data.appState && { ...data.appState },\n    commitToHistory: false,\n  };\n};\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\n\nimport \"./ContextMenu.scss\";\n\ntype ContextMenuOption = {\n  label: string;\n  action(): void;\n};\n\ntype Props = {\n  options: ContextMenuOption[];\n  onCloseRequest?(): void;\n  top: number;\n  left: number;\n};\n\nconst ContextMenu = ({ options, onCloseRequest, top, left }: Props) => (\n  <Popover\n    onCloseRequest={onCloseRequest}\n    top={top}\n    left={left}\n    fitInViewport={true}\n  >\n    <ul\n      className=\"context-menu\"\n      onContextMenu={(event) => event.preventDefault()}\n    >\n      {options.map((option, idx) => (\n        <li key={idx} onClick={onCloseRequest}>\n          <ContextMenuOption {...option} />\n        </li>\n      ))}\n    </ul>\n  </Popover>\n);\n\nconst ContextMenuOption = ({ label, action }: ContextMenuOption) => (\n  <button className=\"context-menu-option\" onClick={action}>\n    {label}\n  </button>\n);\n\nlet contextMenuNode: HTMLDivElement;\nconst getContextMenuNode = (): HTMLDivElement => {\n  if (contextMenuNode) {\n    return contextMenuNode;\n  }\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  return (contextMenuNode = div);\n};\n\ntype ContextMenuParams = {\n  options: (ContextMenuOption | false | null | undefined)[];\n  top: number;\n  left: number;\n};\n\nconst handleClose = () => {\n  unmountComponentAtNode(getContextMenuNode());\n};\n\nexport default {\n  push(params: ContextMenuParams) {\n    const options = Array.of<ContextMenuOption>();\n    params.options.forEach((option) => {\n      if (option) {\n        options.push(option);\n      }\n    });\n    if (options.length) {\n      render(\n        <ContextMenu\n          top={params.top}\n          left={params.left}\n          options={options}\n          onCloseRequest={handleClose}\n        />,\n        getContextMenuNode(),\n      );\n    }\n  },\n};\n","import { encryptAESGEM } from \"../data\";\n\nimport { SocketUpdateData } from \"../types\";\nimport { BROADCAST, SCENE } from \"../constants\";\nimport App from \"./App\";\n\nclass Portal {\n  app: App;\n  socket: SocketIOClient.Socket | null = null;\n  socketInitialized: boolean = false; // we don't want the socket to emit any updates until it is fully initialized\n  roomID: string | null = null;\n  roomKey: string | null = null;\n\n  constructor(app: App) {\n    this.app = app;\n  }\n\n  open(socket: SocketIOClient.Socket, id: string, key: string) {\n    this.socket = socket;\n    this.roomID = id;\n    this.roomKey = key;\n\n    // Initialize socket listeners (moving from App)\n    this.socket.on(\"init-room\", () => {\n      if (this.socket) {\n        this.socket.emit(\"join-room\", this.roomID);\n\n        this.app.restoreUserName();\n      }\n    });\n    this.socket.on(\"new-user\", async (_socketID: string) => {\n      this.app.broadcastScene(SCENE.INIT, /* syncAll */ true);\n    });\n    this.socket.on(\"room-user-change\", (clients: string[]) => {\n      this.app.setCollaborators(clients);\n    });\n  }\n\n  close() {\n    if (!this.socket) {\n      return;\n    }\n    this.socket.close();\n    this.socket = null;\n    this.roomID = null;\n    this.roomKey = null;\n  }\n\n  isOpen() {\n    return !!(\n      this.socketInitialized &&\n      this.socket &&\n      this.roomID &&\n      this.roomKey\n    );\n  }\n\n  async _broadcastSocketData(\n    data: SocketUpdateData,\n    volatile: boolean = false,\n  ) {\n    if (this.isOpen()) {\n      const json = JSON.stringify(data);\n      const encoded = new TextEncoder().encode(json);\n      const encrypted = await encryptAESGEM(encoded, this.roomKey!);\n      this.socket!.emit(\n        volatile ? BROADCAST.SERVER_VOLATILE : BROADCAST.SERVER,\n        this.roomID,\n        encrypted.data,\n        encrypted.iv,\n      );\n    }\n  }\n}\nexport default Portal;\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// We inline font-awesome icons in order to save on js size rather than including the font awesome react library\nexport const SHAPES = [\n  {\n    icon: (\n      // fa-mouse-pointer\n      <svg viewBox=\"0 0 320 512\" className=\"\">\n        <path d=\"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\" />\n      </svg>\n    ),\n    value: \"selection\",\n    key: \"s\",\n  },\n  {\n    icon: (\n      // fa-square\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\" />\n      </svg>\n    ),\n    value: \"rectangle\",\n    key: \"r\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 223.646 223.646\">\n        <path d=\"M111.823 0L16.622 111.823 111.823 223.646 207.025 111.823z\" />\n      </svg>\n    ),\n    value: \"diamond\",\n    key: \"d\",\n  },\n  {\n    icon: (\n      // fa-circle\n      <svg viewBox=\"0 0 512 512\">\n        <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />\n      </svg>\n    ),\n    value: \"ellipse\",\n    key: \"e\",\n  },\n  {\n    icon: (\n      // fa-long-arrow-alt-right\n      <svg viewBox=\"0 0 448 512\" className=\"rtl-mirror\">\n        <path d=\"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\" />\n      </svg>\n    ),\n    value: \"arrow\",\n    key: \"a\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 6 6\">\n        <line\n          x1=\"0\"\n          y1=\"3\"\n          x2=\"6\"\n          y2=\"3\"\n          stroke={oc.black}\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    ),\n    value: \"line\",\n    key: \"l\",\n  },\n  {\n    icon: (\n      // fa-pencil\n      <svg viewBox=\"0 0 512 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n        ></path>\n      </svg>\n    ),\n    value: \"draw\",\n    key: \"x\",\n  },\n  {\n    icon: (\n      // fa-font\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M432 416h-23.41L277.88 53.69A32 32 0 0 0 247.58 32h-47.16a32 32 0 0 0-30.3 21.69L39.41 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-19.58l23.3-64h152.56l23.3 64H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM176.85 272L224 142.51 271.15 272z\" />\n      </svg>\n    ),\n    value: \"text\",\n    key: \"t\",\n  },\n] as const;\n\nexport const shapesShortcutKeys = SHAPES.map((shape, index) => [\n  shape.key,\n  (index + 1).toString(),\n]).flat(1);\n\nexport const findShapeByKey = (key: string) =>\n  SHAPES.find((shape, index) => {\n    return shape.key === key.toLowerCase() || key === (index + 1).toString();\n  })?.value || \"selection\";\n","import { AppState } from \"./types\";\nimport { ExcalidrawElement } from \"./element/types\";\nimport { isLinearElement } from \"./element/typeChecks\";\nimport { deepCopyElement } from \"./element/newElement\";\n\nexport interface HistoryEntry {\n  appState: ReturnType<typeof clearAppStatePropertiesForHistory>;\n  elements: ExcalidrawElement[];\n}\n\ninterface DehydratedExcalidrawElement {\n  id: string;\n  versionNonce: number;\n}\n\ninterface DehydratedHistoryEntry {\n  appState: string;\n  elements: DehydratedExcalidrawElement[];\n}\n\nconst clearAppStatePropertiesForHistory = (appState: AppState) => {\n  return {\n    selectedElementIds: appState.selectedElementIds,\n    viewBackgroundColor: appState.viewBackgroundColor,\n    editingLinearElement: appState.editingLinearElement,\n    editingGroupId: appState.editingGroupId,\n    name: appState.name,\n  };\n};\n\nexport class SceneHistory {\n  private elementCache = new Map<string, Map<number, ExcalidrawElement>>();\n  private recording: boolean = true;\n  private stateHistory: DehydratedHistoryEntry[] = [];\n  private redoStack: DehydratedHistoryEntry[] = [];\n  private lastEntry: HistoryEntry | null = null;\n\n  private hydrateHistoryEntry({\n    appState,\n    elements,\n  }: DehydratedHistoryEntry): HistoryEntry {\n    return {\n      appState: JSON.parse(appState),\n      elements: elements.map((dehydratedExcalidrawElement) => {\n        const element = this.elementCache\n          .get(dehydratedExcalidrawElement.id)\n          ?.get(dehydratedExcalidrawElement.versionNonce);\n        if (!element) {\n          throw new Error(\n            `Element not found: ${dehydratedExcalidrawElement.id}:${dehydratedExcalidrawElement.versionNonce}`,\n          );\n        }\n        return element;\n      }),\n    };\n  }\n\n  private dehydrateHistoryEntry({\n    appState,\n    elements,\n  }: HistoryEntry): DehydratedHistoryEntry {\n    return {\n      appState: JSON.stringify(appState),\n      elements: elements.map((element: ExcalidrawElement) => {\n        if (!this.elementCache.has(element.id)) {\n          this.elementCache.set(element.id, new Map());\n        }\n        const versions = this.elementCache.get(element.id)!;\n        if (!versions.has(element.versionNonce)) {\n          versions.set(element.versionNonce, deepCopyElement(element));\n        }\n        return {\n          id: element.id,\n          versionNonce: element.versionNonce,\n        };\n      }),\n    };\n  }\n\n  getSnapshotForTest() {\n    return {\n      recording: this.recording,\n      stateHistory: this.stateHistory.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n      redoStack: this.redoStack.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n    };\n  }\n\n  clear() {\n    this.stateHistory.length = 0;\n    this.redoStack.length = 0;\n    this.lastEntry = null;\n    this.elementCache.clear();\n  }\n\n  private generateEntry = (\n    appState: AppState,\n    elements: readonly ExcalidrawElement[],\n  ): DehydratedHistoryEntry =>\n    this.dehydrateHistoryEntry({\n      appState: clearAppStatePropertiesForHistory(appState),\n      elements: elements.reduce((elements, element) => {\n        if (\n          isLinearElement(element) &&\n          appState.multiElement &&\n          appState.multiElement.id === element.id\n        ) {\n          // don't store multi-point arrow if still has only one point\n          if (\n            appState.multiElement &&\n            appState.multiElement.id === element.id &&\n            element.points.length < 2\n          ) {\n            return elements;\n          }\n\n          elements.push({\n            ...element,\n            // don't store last point if not committed\n            points:\n              element.lastCommittedPoint !==\n              element.points[element.points.length - 1]\n                ? element.points.slice(0, -1)\n                : element.points,\n          });\n        } else {\n          elements.push(element);\n        }\n        return elements;\n      }, [] as Mutable<typeof elements>),\n    });\n\n  shouldCreateEntry(nextEntry: HistoryEntry): boolean {\n    const { lastEntry } = this;\n\n    if (!lastEntry) {\n      return true;\n    }\n\n    if (nextEntry.elements.length !== lastEntry.elements.length) {\n      return true;\n    }\n\n    // loop from right to left as changes are likelier to happen on new elements\n    for (let i = nextEntry.elements.length - 1; i > -1; i--) {\n      const prev = nextEntry.elements[i];\n      const next = lastEntry.elements[i];\n      if (\n        !prev ||\n        !next ||\n        prev.id !== next.id ||\n        prev.versionNonce !== next.versionNonce\n      ) {\n        return true;\n      }\n    }\n\n    // note: this is safe because entry's appState is guaranteed no excess props\n    let key: keyof typeof nextEntry.appState;\n    for (key in nextEntry.appState) {\n      if (key === \"editingLinearElement\") {\n        if (\n          nextEntry.appState[key]?.elementId ===\n          lastEntry.appState[key]?.elementId\n        ) {\n          continue;\n        }\n      }\n      if (key === \"selectedElementIds\") {\n        continue;\n      }\n      if (nextEntry.appState[key] !== lastEntry.appState[key]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  pushEntry(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    const newEntryDehydrated = this.generateEntry(appState, elements);\n    const newEntry: HistoryEntry = this.hydrateHistoryEntry(newEntryDehydrated);\n\n    if (newEntry) {\n      if (!this.shouldCreateEntry(newEntry)) {\n        return;\n      }\n\n      this.stateHistory.push(newEntryDehydrated);\n      this.lastEntry = newEntry;\n      // As a new entry was pushed, we invalidate the redo stack\n      this.clearRedoStack();\n    }\n  }\n\n  clearRedoStack() {\n    this.redoStack.splice(0, this.redoStack.length);\n  }\n\n  redoOnce(): HistoryEntry | null {\n    if (this.redoStack.length === 0) {\n      return null;\n    }\n\n    const entryToRestore = this.redoStack.pop();\n\n    if (entryToRestore !== undefined) {\n      this.stateHistory.push(entryToRestore);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  undoOnce(): HistoryEntry | null {\n    if (this.stateHistory.length === 1) {\n      return null;\n    }\n\n    const currentEntry = this.stateHistory.pop();\n\n    const entryToRestore = this.stateHistory[this.stateHistory.length - 1];\n\n    if (currentEntry !== undefined) {\n      this.redoStack.push(currentEntry);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  /**\n   * Updates history's `lastEntry` to latest app state. This is necessary\n   *  when doing undo/redo which itself doesn't commit to history, but updates\n   *  app state in a way that would break `shouldCreateEntry` which relies on\n   *  `lastEntry` to reflect last comittable history state.\n   * We can't update `lastEntry` from within history when calling undo/redo\n   *  because the action potentially mutates appState/elements before storing\n   *  it.\n   */\n  setCurrentState(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    this.lastEntry = this.hydrateHistoryEntry(\n      this.generateEntry(appState, elements),\n    );\n  }\n\n  // Suspicious that this is called so many places. Seems error-prone.\n  resumeRecording() {\n    this.recording = true;\n  }\n\n  record(state: AppState, elements: readonly ExcalidrawElement[]) {\n    if (this.recording) {\n      this.pushEntry(state, elements);\n      this.recording = false;\n    }\n  }\n}\n\nexport const createHistory: () => { history: SceneHistory } = () => {\n  const history = new SceneHistory();\n  return { history };\n};\n","import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.css\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\ntype Props = {\n  top?: number;\n  left?: number;\n  children?: React.ReactNode;\n  onCloseRequest?(event: PointerEvent): void;\n  fitInViewport?: boolean;\n};\n\nexport const Popover = ({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false,\n}: Props) => {\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  // ensure the popover doesn't overflow the viewport\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current) {\n      const element = popoverRef.current;\n      const { x, y, width, height } = element.getBoundingClientRect();\n\n      const viewportWidth = window.innerWidth;\n      if (x + width > viewportWidth) {\n        element.style.left = `${viewportWidth - width}px`;\n      }\n      const viewportHeight = window.innerHeight;\n      if (y + height > viewportHeight) {\n        element.style.top = `${viewportHeight - height}px`;\n      }\n    }\n  }, [fitInViewport]);\n\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = (event: PointerEvent) => {\n        if (!popoverRef.current?.contains(event.target as Node)) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n\n  return (\n    <div className=\"popover\" style={{ top: top, left: left }} ref={popoverRef}>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Action,\n  ActionsManagerInterface,\n  UpdaterFn,\n  ActionFilterFn,\n  ActionName,\n} from \"./types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\nimport { globalSceneState } from \"../scene\";\n\nexport class ActionManager implements ActionsManagerInterface {\n  actions = {} as ActionsManagerInterface[\"actions\"];\n\n  updater: UpdaterFn;\n\n  getAppState: () => AppState;\n\n  getElementsIncludingDeleted: () => readonly ExcalidrawElement[];\n\n  constructor(\n    updater: UpdaterFn,\n    getAppState: () => AppState,\n    getElementsIncludingDeleted: () => ReturnType<\n      typeof globalSceneState[\"getElementsIncludingDeleted\"]\n    >,\n  ) {\n    this.updater = updater;\n    this.getAppState = getAppState;\n    this.getElementsIncludingDeleted = getElementsIncludingDeleted;\n  }\n\n  registerAction(action: Action) {\n    this.actions[action.name] = action;\n  }\n\n  registerAll(actions: readonly Action[]) {\n    actions.forEach((action) => this.registerAction(action));\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const data = Object.values(this.actions)\n      .sort((a, b) => (b.keyPriority || 0) - (a.keyPriority || 0))\n      .filter(\n        (action) =>\n          action.keyTest &&\n          action.keyTest(\n            event,\n            this.getAppState(),\n            this.getElementsIncludingDeleted(),\n          ),\n      );\n\n    if (data.length === 0) {\n      return false;\n    }\n\n    event.preventDefault();\n    this.updater(\n      data[0].perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n    return true;\n  }\n\n  executeAction(action: Action) {\n    this.updater(\n      action.perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n  }\n\n  getContextMenuItems(actionFilter: ActionFilterFn = (action) => action) {\n    return Object.values(this.actions)\n      .filter(actionFilter)\n      .filter((action) => \"contextItemLabel\" in action)\n      .sort(\n        (a, b) =>\n          (a.contextMenuOrder !== undefined ? a.contextMenuOrder : 999) -\n          (b.contextMenuOrder !== undefined ? b.contextMenuOrder : 999),\n      )\n      .map((action) => ({\n        label: action.contextItemLabel ? t(action.contextItemLabel) : \"\",\n        action: () => {\n          this.updater(\n            action.perform(\n              this.getElementsIncludingDeleted(),\n              this.getAppState(),\n              null,\n            ),\n          );\n        },\n      }));\n  }\n\n  renderAction = (name: ActionName) => {\n    if (this.actions[name] && \"PanelComponent\" in this.actions[name]) {\n      const action = this.actions[name];\n      const PanelComponent = action.PanelComponent!;\n      const updateData = (formState?: any) => {\n        this.updater(\n          action.perform(\n            this.getElementsIncludingDeleted(),\n            this.getAppState(),\n            formState,\n          ),\n        );\n      };\n\n      return (\n        <PanelComponent\n          elements={this.getElementsIncludingDeleted()}\n          appState={this.getAppState()}\n          updateData={updateData}\n        />\n      );\n    }\n\n    return null;\n  };\n}\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype ToolIconSize = \"s\" | \"m\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolIconSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  className?: string;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n\n      checked: boolean;\n      onChange?(): void;\n    });\n\nconst DEFAULT_SIZE: ToolIconSize = \"m\";\n\nexport const ToolButton = React.forwardRef((props: ToolButtonProps, ref) => {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return (\n      <button\n        className={`ToolIcon_type_button ToolIcon ${sizeCn}${\n          props.selected ? \" ToolIcon--selected\" : \"\"\n        } ${props.className} ${\n          props.visible\n            ? \"ToolIcon_type_button--show\"\n            : \"ToolIcon_type_button--hide\"\n        }`}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type=\"button\"\n        onClick={props.onClick}\n        ref={innerRef}\n      >\n        <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n          {props.icon || props.label}\n        </div>\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">{props[\"aria-label\"]}</div>\n        )}\n        {props.children}\n      </button>\n    );\n  }\n\n  return (\n    <label className=\"ToolIcon\" title={props.title}>\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        data-testid={props[\"data-testid\"]}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n\nToolButton.defaultProps = {\n  visible: true,\n  className: \"\",\n};\n","//\n// All icons are imported from https://fontawesome.com/icons?d=gallery\n// Icons are under the license https://fontawesome.com/license\n//\n\nimport React from \"react\";\n\nimport oc from \"open-color\";\n\nconst ACTIVE_ELEMENT_COLOR = oc.orange[4];\ntype Opts = { width?: number; height?: number; mirror?: true } & React.SVGProps<\n  SVGSVGElement\n>;\n\nconst createIcon = (d: string | React.ReactNode, opts: number | Opts = 512) => {\n  const { width = 512, height = width, mirror, style } =\n    typeof opts === \"number\" ? ({ width: opts } as Opts) : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      className={mirror && \"rtl-mirror\"}\n      style={style}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nexport const link = createIcon(\n  \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\",\n  { mirror: true },\n);\n\nexport const save = createIcon(\n  \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\",\n  { width: 448, height: 512 },\n);\n\nexport const load = createIcon(\n  \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const clipboard = createIcon(\n  \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\",\n  { width: 384, height: 512 },\n);\n\nexport const trash = createIcon(\n  \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\",\n  { width: 448, height: 512 },\n);\n\nexport const palette = createIcon(\n  \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\",\n);\n\nexport const exportFile = createIcon(\n  \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const zoomIn = createIcon(\n  \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const zoomOut = createIcon(\n  \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const done = createIcon(\n  \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\",\n  { mirror: true },\n);\n\nexport const menu = createIcon(\n  \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\",\n);\n\nexport const undo = createIcon(\n  \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\",\n  { mirror: true },\n);\n\nexport const redo = createIcon(\n  \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\",\n  { mirror: true },\n);\n\n// Icon imported form Storybook\n// Storybook is licensed under MIT https://github.com/storybookjs/storybook/blob/next/LICENSE\nexport const resetZoom = createIcon(\n  <path\n    stroke=\"currentColor\"\n    strokeWidth=\"40\"\n    fill=\"currentColor\"\n    d=\"M148 560a318 318 0 0 0 522 110 316 316 0 0 0 0-450 316 316 0 0 0-450 0c-11 11-21 22-30 34v4h47c25 0 46 21 46 46s-21 45-46 45H90c-13 0-25-6-33-14-9-9-14-20-14-33V156c0-25 20-45 45-45s45 20 45 45v32l1 1a401 401 0 0 1 623 509l212 212a42 42 0 0 1-59 59L698 757A401 401 0 0 1 65 570a42 42 0 0 1 83-10z\"\n  />,\n  { width: 1024 },\n);\n\nexport const bringForward = createIcon(\n  <>\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H16v8H8v4.444C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendBackward = createIcon(\n  <>\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H9.556C8.696 8 8 8.697 8 9.556v10.888C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const bringToFront = createIcon(\n  <>\n    <path\n      d=\"M13 21a1 1 0 001 1h7a1 1 0 001-1v-7a1 1 0 00-1-1h-3v5h-5v3zM11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h3V6h5V3z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendToBack = createIcon(\n  <>\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h8V3zM22 14a1 1 0 00-1-1h-7a1 1 0 00-1 1v7a1 1 0 001 1h8v-8z\"\n      stroke={oc.black}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const users = createIcon(\n  \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\",\n  { width: 640, height: 512, mirror: true },\n);\n\nexport const start = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\",\n);\n\nexport const stop = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\",\n);\n\nexport const close = createIcon(\n  \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\",\n  { width: 352, height: 512 },\n);\n\nexport const back = createIcon(\n  \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\",\n  { width: 320, height: 512, style: { marginLeft: \"-0.2rem\" }, mirror: true },\n);\n\nexport const clone = createIcon(\n  \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\",\n  { mirror: true },\n);\n\n// modified https://feathericons.com/?query=shield\nexport const shield = createIcon(\n  \"M11.553 22.894a.998.998 0 00.894 0s3.037-1.516 5.465-4.097C19.616 16.987 21 14.663 21 12V5a1 1 0 00-.649-.936l-8-3a.998.998 0 00-.702 0l-8 3A1 1 0 003 5v7c0 2.663 1.384 4.987 3.088 6.797 2.428 2.581 5.465 4.097 5.465 4.097zm-1.303-8.481l6.644-6.644a.856.856 0 111.212 1.212l-7.25 7.25a.856.856 0 01-1.212 0l-3.75-3.75a.856.856 0 111.212-1.212l3.144 3.144z\",\n  { width: 24 },\n);\n","import { Action } from \"./types\";\n\nexport let actions: readonly Action[] = [];\n\nexport const register = (action: Action): Action => {\n  actions = actions.concat(action);\n  return action;\n};\n","import { isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport React from \"react\";\nimport { trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getElementsInGroup } from \"../groups\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\nconst deleteSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return {\n    elements: elements.map((el) => {\n      if (appState.selectedElementIds[el.id]) {\n        return newElementWith(el, { isDeleted: true });\n      }\n      return el;\n    }),\n    appState: {\n      ...appState,\n      selectedElementIds: {},\n    },\n  };\n};\n\nfunction handleGroupEditingState(\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n): AppState {\n  if (appState.editingGroupId) {\n    const siblingElements = getElementsInGroup(\n      getNonDeletedElements(elements),\n      appState.editingGroupId!,\n    );\n    if (siblingElements.length) {\n      return {\n        ...appState,\n        selectedElementIds: { [siblingElements[0].id]: true },\n      };\n    }\n  }\n  return appState;\n}\n\nexport const actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  perform: (elements, appState) => {\n    if (\n      appState.editingLinearElement?.activePointIndex != null &&\n      appState.editingLinearElement?.activePointIndex > -1\n    ) {\n      const { elementId } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n      if (element) {\n        // case: deleting last point\n        if (element.points.length < 2) {\n          const nextElements = elements.filter((el) => el.id !== element.id);\n          const nextAppState = handleGroupEditingState(appState, nextElements);\n\n          return {\n            elements: nextElements,\n            appState: {\n              ...nextAppState,\n              editingLinearElement: null,\n            },\n            commitToHistory: false,\n          };\n        }\n\n        LinearElementEditor.movePoint(\n          element,\n          appState.editingLinearElement.activePointIndex,\n          \"delete\",\n        );\n\n        return {\n          elements: elements,\n          appState: {\n            ...appState,\n            editingLinearElement: {\n              ...appState.editingLinearElement,\n              activePointIndex:\n                appState.editingLinearElement.activePointIndex > 0\n                  ? appState.editingLinearElement.activePointIndex - 1\n                  : 0,\n            },\n          },\n          commitToHistory: true,\n        };\n      }\n    }\n\n    let {\n      elements: nextElements,\n      appState: nextAppState,\n    } = deleteSelectedElements(elements, appState);\n\n    nextAppState = handleGroupEditingState(nextAppState, nextElements);\n\n    return {\n      elements: nextElements,\n      appState: {\n        ...nextAppState,\n        elementType: \"selection\",\n        multiElement: null,\n      },\n      commitToHistory: isSomeElementSelected(\n        getNonDeletedElements(elements),\n        appState,\n      ),\n    };\n  },\n  contextItemLabel: \"labels.delete\",\n  contextMenuOrder: 3,\n  keyTest: (event) => event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"labels.delete\")}\n      aria-label={t(\"labels.delete\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","const swap = <T>(elements: T[], indexA: number, indexB: number) => {\n  const element = elements[indexA];\n  elements[indexA] = elements[indexB];\n  elements[indexB] = element;\n};\n\nexport const moveOneLeft = <T>(elements: T[], indicesToMove: number[]) => {\n  indicesToMove.sort((a: number, b: number) => a - b);\n  let isSorted = true;\n  // We go from left to right to avoid overriding the wrong elements\n  indicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === i;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index - 1, index);\n  });\n\n  return elements;\n};\n\nexport const moveOneRight = <T>(elements: T[], indicesToMove: number[]) => {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n  let isSorted = true;\n\n  // We go from right to left to avoid overriding the wrong elements\n  reversedIndicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === elements.length - i - 1;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index + 1, index);\n  });\n  return elements;\n};\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [c, f, a, b, d, e, g]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the right.\n//\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//          -> ->\n//\n// which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//\n// Now, we need to move all the elements from marker 1 to the beginning by two (not one)\n// slots to the right, which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//  ---|--^  ^\n//     ------|\n//\n// which gives us\n//\n//        |1       |0\n// [_, _, a, b, d, e, g]\n//\n// At this point, we can fill back the leftmost elements with the array we saved at\n// the beginning\n//\n//        |1       |0\n// [c, f, a, b, d, e, g]\n//\n// And we are done!\nexport const moveAllLeft = <T>(elements: T[], indicesToMove: number[]) => {\n  indicesToMove.sort((a: number, b: number) => a - b);\n\n  // Copy the elements to move\n  const leftMostElements = indicesToMove.map((index) => elements[index]);\n\n  const reversedIndicesToMove = indicesToMove\n    // We go from right to left to avoid overriding elements.\n    .reverse()\n    // We add 0 for the final marker\n    .concat([0]);\n\n  reversedIndicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the right (i - 1) to the current one (index)\n    for (let pos = reversedIndicesToMove[i - 1] - 1; pos >= index; --pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos + i] = elements[pos];\n    }\n  });\n\n  // The final step\n  leftMostElements.forEach((element, i) => {\n    elements[i] = element;\n  });\n\n  return elements;\n};\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [a, b, d, e, g, c, f]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the left.\n//\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//          <- <-\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//\n// Now, we need to move all the elements from marker 1 to the end by two (not one)\n// slots to the left, which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//              ^------\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, g, _, _]\n//\n// At this point, we can fill back the rightmost elements with the array we saved at\n// the beginning\n//\n//        |0       |1\n// [a, b, d, e, g, c, f]\n//\n// And we are done!\nexport const moveAllRight = <T>(elements: T[], indicesToMove: number[]) => {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n\n  // Copy the elements to move\n  const rightMostElements = reversedIndicesToMove.map(\n    (index) => elements[index],\n  );\n\n  indicesToMove = reversedIndicesToMove\n    // We go from left to right to avoid overriding elements.\n    .reverse()\n    // We last element index for the final marker\n    .concat([elements.length]);\n\n  indicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the left (i - 1) to the current one (index)\n    for (let pos = indicesToMove[i - 1] + 1; pos < index; ++pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos - i] = elements[pos];\n    }\n  });\n\n  // The final step\n  rightMostElements.forEach((element, i) => {\n    elements[elements.length - i - 1] = element;\n  });\n\n  return elements;\n};\n","import React from \"react\";\nimport {\n  moveOneLeft,\n  moveOneRight,\n  moveAllLeft,\n  moveAllRight,\n} from \"../zindex\";\nimport { KEYS, isDarwin } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport {\n  sendBackward,\n  bringToFront,\n  sendToBack,\n  bringForward,\n} from \"../components/icons\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\n\nconst getElementIndices = (\n  direction: \"left\" | \"right\",\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const selectedIndices: number[] = [];\n  let deletedIndicesCache: number[] = [];\n\n  const cb = (element: ExcalidrawElement, index: number) => {\n    if (element.isDeleted) {\n      // we want to build an array of deleted elements that are preceeding\n      //  a selected element so that we move them together\n      deletedIndicesCache.push(index);\n    } else {\n      if (appState.selectedElementIds[element.id]) {\n        selectedIndices.push(...deletedIndicesCache, index);\n      }\n      // always empty cache of deleted elements after either pushing a group\n      //  of selected/deleted elements, of after encountering non-deleted elem\n      deletedIndicesCache = [];\n    }\n  };\n\n  // sending back → select contiguous deleted elements that are to the left of\n  //  selected element(s)\n  if (direction === \"left\") {\n    let i = -1;\n    const len = elements.length;\n    while (++i < len) {\n      cb(elements[i], i);\n    }\n    // moving to front → loop from right to left so that we don't need to\n    //  backtrack when gathering deleted elements\n  } else {\n    let i = elements.length;\n    while (--i > -1) {\n      cb(elements[i], i);\n    }\n  }\n  // sort in case we were gathering indexes from right to left\n  return selectedIndices.sort();\n};\n\nconst moveElements = (\n  func: typeof moveOneLeft,\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const _elements = elements.slice();\n  const direction =\n    func === moveOneLeft || func === moveAllLeft ? \"left\" : \"right\";\n  const indices = getElementIndices(direction, _elements, appState);\n  return func(_elements, indices);\n};\n\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendBackward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketLeft\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendBackward\")} — ${getShortcutKey(\"CtrlOrCmd+[\")}`}\n    >\n      {sendBackward}\n    </button>\n  ),\n});\n\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringForward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketRight\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.bringForward\")} — ${getShortcutKey(\"CtrlOrCmd+]\")}`}\n    >\n      {bringForward}\n    </button>\n  ),\n});\n\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendToBack\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketLeft\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketLeft\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendToBack\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+[\")\n      }`}\n    >\n      {sendToBack}\n    </button>\n  ),\n});\n\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringToFront\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketRight\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketRight\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={(event) => updateData(null)}\n      title={`${t(\"labels.bringToFront\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+]\")\n      }`}\n    >\n      {bringToFront}\n    </button>\n  ),\n});\n","import React from \"react\";\n\nexport const ButtonSelect = <T extends Object>({\n  options,\n  value,\n  onChange,\n  group,\n}: {\n  options: { value: T; text: string }[];\n  value: T | null;\n  onChange: (value: T) => void;\n  group: string;\n}) => (\n  <div className=\"buttonList\">\n    {options.map((option) => (\n      <label\n        key={option.text}\n        className={value === option.value ? \"active\" : \"\"}\n      >\n        <input\n          type=\"radio\"\n          name={group}\n          onChange={() => onChange(option.value)}\n          checked={value === option.value ? true : false}\n        />\n        {option.text}\n      </label>\n    ))}\n  </div>\n);\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { selectGroupsForSelectedElements } from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    return {\n      appState: selectGroupsForSelectedElements(\n        {\n          ...appState,\n          editingGroupId: null,\n          selectedElementIds: elements.reduce((map, element) => {\n            if (!element.isDeleted) {\n              map[element.id] = true;\n            }\n            return map;\n          }, {} as any),\n        },\n        getNonDeletedElements(elements),\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"a\",\n});\n","import React from \"react\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { duplicateElement, getNonDeletedElements } from \"../element\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { clone } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\n\nexport const actionDuplicateSelection = register({\n  name: \"duplicateSelection\",\n  perform: (elements, appState) => {\n    const groupIdMap = new Map();\n    return {\n      appState,\n      elements: elements.reduce(\n        (acc: Array<ExcalidrawElement>, element: ExcalidrawElement) => {\n          if (appState.selectedElementIds[element.id]) {\n            const newElement = duplicateElement(\n              appState.editingGroupId,\n              groupIdMap,\n              element,\n              {\n                x: element.x + 10,\n                y: element.y + 10,\n              },\n            );\n            appState.selectedElementIds[newElement.id] = true;\n            delete appState.selectedElementIds[element.id];\n            return acc.concat([element, newElement]);\n          }\n          return acc.concat(element);\n        },\n        [],\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.duplicateSelection\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"d\",\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={clone}\n      title={`${t(\"labels.duplicateSelection\")} — ${getShortcutKey(\n        \"CtrlOrCmd+D\",\n      )}`}\n      aria-label={t(\"labels.duplicateSelection\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./ColorPicker.scss\";\nimport { KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\n\nconst isValidColor = (color: string) => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nconst getColor = (color: string): string | null => {\n  if (color === \"transparent\") {\n    return color;\n  }\n\n  return isValidColor(color)\n    ? color\n    : isValidColor(`#${color}`)\n    ? `#${color}`\n    : null;\n};\n\n// This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\nconst keyBindings = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n].flat();\n\nconst Picker = ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n}: {\n  colors: string[];\n  color: string | null;\n  onChange: (color: string) => void;\n  onClose: () => void;\n  label: string;\n  showInput: boolean;\n}) => {\n  const firstItem = React.useRef<HTMLButtonElement>();\n  const activeItem = React.useRef<HTMLButtonElement>();\n  const gallery = React.useRef<HTMLDivElement>();\n  const colorInput = React.useRef<HTMLInputElement>();\n\n  React.useEffect(() => {\n    // After the component is first mounted\n    // focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.TAB) {\n      const { activeElement } = document;\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          colorInput.current?.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (activeElement === colorInput.current) {\n          firstItem.current?.focus();\n          event.preventDefault();\n        }\n      }\n    } else if (\n      event.key === KEYS.ARROW_RIGHT ||\n      event.key === KEYS.ARROW_LEFT ||\n      event.key === KEYS.ARROW_UP ||\n      event.key === KEYS.ARROW_DOWN\n    ) {\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        gallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = gallery!.current!.children.length - (showInput ? 1 : 0);\n        const nextIndex =\n          event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT)\n            ? (index + 1) % length\n            : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT)\n            ? (length + index - 1) % length\n            : event.key === KEYS.ARROW_DOWN\n            ? (index + 5) % length\n            : event.key === KEYS.ARROW_UP\n            ? (length + index - 5) % length\n            : index;\n        (gallery!.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (\n      keyBindings.includes(event.key.toLowerCase()) &&\n      !isWritableElement(event.target)\n    ) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      (gallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return (\n    <div\n      className=\"color-picker\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={t(\"labels.colorPicker\")}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"color-picker-triangle color-picker-triangle-shadow\"></div>\n      <div className=\"color-picker-triangle\"></div>\n      <div\n        className=\"color-picker-content\"\n        ref={(el) => {\n          if (el) {\n            gallery.current = el;\n          }\n        }}\n      >\n        {colors.map((_color, i) => (\n          <button\n            className=\"color-picker-swatch\"\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(_color);\n            }}\n            title={`${_color} — ${keyBindings[i].toUpperCase()}`}\n            aria-label={_color}\n            aria-keyshortcuts={keyBindings[i]}\n            style={{ color: _color }}\n            key={_color}\n            ref={(el) => {\n              if (el && i === 0) {\n                firstItem.current = el;\n              }\n              if (el && _color === color) {\n                activeItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(_color);\n            }}\n          >\n            {_color === \"transparent\" ? (\n              <div className=\"color-picker-transparent\"></div>\n            ) : undefined}\n            <span className=\"color-picker-keybinding\">{keyBindings[i]}</span>\n          </button>\n        ))}\n        {showInput && (\n          <ColorInput\n            color={color}\n            label={label}\n            onChange={(color) => {\n              onChange(color);\n            }}\n            ref={colorInput}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ColorInput = React.forwardRef(\n  (\n    {\n      color,\n      onChange,\n      label,\n    }: {\n      color: string | null;\n      onChange: (color: string) => void;\n      label: string;\n    },\n    ref,\n  ) => {\n    const [innerValue, setInnerValue] = React.useState(color);\n    const inputRef = React.useRef(null);\n\n    React.useEffect(() => {\n      setInnerValue(color);\n    }, [color]);\n\n    React.useImperativeHandle(ref, () => inputRef.current);\n\n    const changeColor = React.useCallback(\n      (inputValue: string) => {\n        const value = inputValue.toLowerCase();\n        const color = getColor(value);\n        if (color) {\n          onChange(color);\n        }\n        setInnerValue(value);\n      },\n      [onChange],\n    );\n\n    return (\n      <label className=\"color-input-container\">\n        <div className=\"color-picker-hash\">#</div>\n        <input\n          spellCheck={false}\n          className=\"color-picker-input\"\n          aria-label={label}\n          onChange={(event) => changeColor(event.target.value)}\n          value={(innerValue || \"\").replace(/^#/, \"\")}\n          onBlur={() => setInnerValue(color)}\n          ref={inputRef}\n        />\n      </label>\n    );\n  },\n);\n\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label,\n}: {\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  color: string | null;\n  onChange: (color: string) => void;\n  label: string;\n}) => {\n  const [isActive, setActive] = React.useState(false);\n  const pickerButton = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <div>\n      <div className=\"color-picker-control-container\">\n        <button\n          className=\"color-picker-label-swatch\"\n          aria-label={label}\n          style={\n            color\n              ? ({ \"--swatch-color\": color } as React.CSSProperties)\n              : undefined\n          }\n          onClick={() => setActive(!isActive)}\n          ref={pickerButton}\n        />\n        <ColorInput\n          color={color}\n          label={label}\n          onChange={(color) => {\n            onChange(color);\n          }}\n        />\n      </div>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <Popover\n            onCloseRequest={(event) =>\n              event.target !== pickerButton.current && setActive(false)\n            }\n          >\n            <Picker\n              colors={colors[type]}\n              color={color || null}\n              onChange={(changedColor) => {\n                onChange(changedColor);\n              }}\n              onClose={() => {\n                setActive(false);\n                pickerButton.current?.focus();\n              }}\n              label={label}\n              showInput={false}\n            />\n          </Popover>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  TextAlign,\n  FontFamily,\n} from \"../element/types\";\nimport {\n  getCommonAttributeOfSelectedElements,\n  isSomeElementSelected,\n} from \"../scene\";\nimport { ButtonSelect } from \"../components/ButtonSelect\";\nimport {\n  isTextElement,\n  redrawTextBoundingBox,\n  getNonDeletedElements,\n} from \"../element\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { AppState } from \"../../src/types\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_FAMILY } from \"../appState\";\n\nconst changeProperty = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  callback: (element: ExcalidrawElement) => ExcalidrawElement,\n) => {\n  return elements.map((element) => {\n    if (\n      appState.selectedElementIds[element.id] ||\n      element.id === appState.editingElement?.id\n    ) {\n      return callback(element);\n    }\n    return element;\n  });\n};\n\nconst getFormValue = function <T>(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n  defaultValue?: T,\n): T | null {\n  const editingElement = appState.editingElement;\n  const nonDeletedElements = getNonDeletedElements(elements);\n  return (\n    (editingElement && getAttribute(editingElement)) ??\n    (isSomeElementSelected(nonDeletedElements, appState)\n      ? getCommonAttributeOfSelectedElements(\n          nonDeletedElements,\n          appState,\n          getAttribute,\n        )\n      : defaultValue) ??\n    null\n  );\n};\n\nexport const actionChangeStrokeColor = register({\n  name: \"changeStrokeColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.stroke\")}</h3>\n      <ColorPicker\n        type=\"elementStroke\"\n        label={t(\"labels.stroke\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeColor,\n          appState.currentItemStrokeColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeBackgroundColor = register({\n  name: \"changeBackgroundColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          backgroundColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.background\")}</h3>\n      <ColorPicker\n        type=\"elementBackground\"\n        label={t(\"labels.background\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.backgroundColor,\n          appState.currentItemBackgroundColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeFillStyle = register({\n  name: \"changeFillStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          fillStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemFillStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fill\")}</legend>\n      <ButtonSelect\n        options={[\n          { value: \"hachure\", text: t(\"labels.hachure\") },\n          { value: \"cross-hatch\", text: t(\"labels.crossHatch\") },\n          { value: \"solid\", text: t(\"labels.solid\") },\n        ]}\n        group=\"fill\"\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.fillStyle,\n          appState.currentItemFillStyle,\n        )}\n        onChange={(value) => {\n          updateData(value);\n        }}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeWidth = register({\n  name: \"changeStrokeWidth\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeWidth: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeWidth: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeWidth\")}</legend>\n      <ButtonSelect\n        group=\"stroke-width\"\n        options={[\n          { value: 1, text: t(\"labels.thin\") },\n          { value: 2, text: t(\"labels.bold\") },\n          { value: 4, text: t(\"labels.extraBold\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeWidth,\n          appState.currentItemStrokeWidth,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSloppiness = register({\n  name: \"changeSloppiness\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          roughness: value,\n        }),\n      ),\n      appState: { ...appState, currentItemRoughness: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.sloppiness\")}</legend>\n      <ButtonSelect\n        group=\"sloppiness\"\n        options={[\n          { value: 0, text: t(\"labels.architect\") },\n          { value: 1, text: t(\"labels.artist\") },\n          { value: 2, text: t(\"labels.cartoonist\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.roughness,\n          appState.currentItemRoughness,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeStyle = register({\n  name: \"changeStrokeStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeStyle\")}</legend>\n      <ButtonSelect\n        group=\"strokeStyle\"\n        options={[\n          { value: \"solid\", text: t(\"labels.strokeStyle_solid\") },\n          { value: \"dashed\", text: t(\"labels.strokeStyle_dashed\") },\n          { value: \"dotted\", text: t(\"labels.strokeStyle_dotted\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeStyle,\n          appState.currentItemStrokeStyle,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeOpacity = register({\n  name: \"changeOpacity\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          opacity: value,\n        }),\n      ),\n      appState: { ...appState, currentItemOpacity: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <label className=\"control-label\">\n      {t(\"labels.opacity\")}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"10\"\n        onChange={(event) => updateData(+event.target.value)}\n        onWheel={(event) => {\n          event.stopPropagation();\n          const target = event.target as HTMLInputElement;\n          const STEP = 10;\n          const MAX = 100;\n          const MIN = 0;\n          const value = +target.value;\n\n          if (event.deltaY < 0 && value < MAX) {\n            updateData(value + STEP);\n          } else if (event.deltaY > 0 && value > MIN) {\n            updateData(value - STEP);\n          }\n        }}\n        value={\n          getFormValue(\n            elements,\n            appState,\n            (element) => element.opacity,\n            appState.currentItemOpacity,\n          ) ?? undefined\n        }\n      />\n    </label>\n  ),\n});\n\nexport const actionChangeFontSize = register({\n  name: \"changeFontSize\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontSize: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontSize: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontSize\")}</legend>\n      <ButtonSelect\n        group=\"font-size\"\n        options={[\n          { value: 16, text: t(\"labels.small\") },\n          { value: 20, text: t(\"labels.medium\") },\n          { value: 28, text: t(\"labels.large\") },\n          { value: 36, text: t(\"labels.veryLarge\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.fontSize,\n          appState.currentItemFontSize || DEFAULT_FONT_SIZE,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeFontFamily = register({\n  name: \"changeFontFamily\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontFamily: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontFamily: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const options: { value: FontFamily; text: string }[] = [\n      { value: 1, text: t(\"labels.handDrawn\") },\n      { value: 2, text: t(\"labels.normal\") },\n      { value: 3, text: t(\"labels.code\") },\n    ];\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fontFamily\")}</legend>\n        <ButtonSelect<FontFamily | false>\n          group=\"font-family\"\n          options={options}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => isTextElement(element) && element.fontFamily,\n            appState.currentItemFontFamily || DEFAULT_FONT_FAMILY,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeTextAlign = register({\n  name: \"changeTextAlign\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            textAlign: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemTextAlign: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.textAlign\")}</legend>\n      <ButtonSelect<TextAlign | false>\n        group=\"text-align\"\n        options={[\n          { value: \"left\", text: t(\"labels.left\") },\n          { value: \"center\", text: t(\"labels.center\") },\n          { value: \"right\", text: t(\"labels.right\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.textAlign,\n          appState.currentItemTextAlign,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nconst context = React.createContext(false);\n\nexport const IsMobileProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const query = useRef<MediaQueryList>();\n  if (!query.current) {\n    query.current = window.matchMedia\n      ? window.matchMedia(\n          \"(max-width: 640px), (max-height: 500px) and (max-width: 1000px)\",\n        )\n      : (({\n          matches: false,\n          addListener: () => {},\n          removeListener: () => {},\n        } as any) as MediaQueryList);\n  }\n  const [isMobile, setMobile] = useState(query.current.matches);\n\n  useEffect(() => {\n    const handler = () => setMobile(query.current!.matches);\n    query.current!.addListener(handler);\n    return () => query.current!.removeListener(handler);\n  }, []);\n\n  return <context.Provider value={isMobile}>{children}</context.Provider>;\n};\n\nexport default function useIsMobile() {\n  return useContext(context);\n}\n","import React from \"react\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { getDefaultAppState } from \"../appState\";\nimport { trash, zoomIn, zoomOut, resetZoom } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { getNormalizedZoom, normalizeScroll } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { AppState, FlooredNumber } from \"../types\";\nimport { getCommonBounds } from \"../element\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, viewBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={(color) => updateData(color)}\n        />\n      </div>\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState: AppState) => {\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        username: appState.username,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"buttons.clearReset\")}\n      aria-label={t(\"buttons.clearReset\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          // TODO: Defined globally, since file handles aren't yet serializable.\n          // Once `FileSystemFileHandle` can be serialized, make this\n          // part of `AppState`.\n          (window as any).handle = null;\n          updateData(null);\n        }\n      }}\n    />\n  ),\n});\n\nconst ZOOM_STEP = 0.1;\n\nconst KEY_CODES = {\n  MINUS: \"Minus\",\n  EQUAL: \"Equal\",\n  ONE: \"Digit1\",\n  ZERO: \"Digit0\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_ZERO: \"Numpad0\",\n};\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom + ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.EQUAL || event.code === KEY_CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom - ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.MINUS || event.code === KEY_CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: 1,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={resetZoom}\n      title={t(\"buttons.resetZoom\")}\n      aria-label={t(\"buttons.resetZoom\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.ZERO || event.code === KEY_CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nconst calculateZoom = (\n  commonBounds: number[],\n  currentZoom: number,\n  {\n    scrollX,\n    scrollY,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n  },\n): number => {\n  const { innerWidth, innerHeight } = window;\n  const [x, y] = commonBounds;\n  const zoomX = -innerWidth / (2 * scrollX + 2 * x - innerWidth);\n  const zoomY = -innerHeight / (2 * scrollY + 2 * y - innerHeight);\n  const margin = 0.01;\n  let newZoom;\n\n  if (zoomX < zoomY) {\n    newZoom = zoomX - margin;\n  } else if (zoomY <= zoomX) {\n    newZoom = zoomY - margin;\n  } else {\n    newZoom = currentZoom;\n  }\n\n  if (newZoom <= 0.1) {\n    return 0.1;\n  }\n  if (newZoom >= 1) {\n    return 1;\n  }\n\n  return newZoom;\n};\n\nexport const actionZoomToFit = register({\n  name: \"zoomToFit\",\n  perform: (elements, appState) => {\n    const nonDeletedElements = elements.filter((element) => !element.isDeleted);\n    const commonBounds = getCommonBounds(nonDeletedElements);\n    const [x1, y1, x2, y2] = commonBounds;\n    const centerX = (x1 + x2) / 2;\n    const centerY = (y1 + y2) / 2;\n    const scrollX = normalizeScroll(window.innerWidth / 2 - centerX);\n    const scrollY = normalizeScroll(window.innerHeight / 2 - centerY);\n    const zoom = calculateZoom(commonBounds, appState.zoom, {\n      scrollX,\n      scrollY,\n    });\n\n    return {\n      appState: {\n        ...appState,\n        scrollX,\n        scrollY,\n        zoom,\n      },\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) =>\n    event.code === KEY_CODES.ONE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n","import { KEYS } from \"../keys\";\nimport { isInvisiblySmallElement } from \"../element\";\nimport { resetCursor } from \"../utils\";\nimport React from \"react\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { done } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { isPathALoop } from \"../math\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\nexport const actionFinalize = register({\n  name: \"finalize\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      const { elementId } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n\n      if (element) {\n        return {\n          elements:\n            element.points.length < 2 || isInvisiblySmallElement(element)\n              ? elements.filter((el) => el.id !== element.id)\n              : undefined,\n          appState: {\n            ...appState,\n            editingLinearElement: null,\n          },\n          commitToHistory: true,\n        };\n      }\n    }\n\n    let newElements = elements;\n    if (window.document.activeElement instanceof HTMLElement) {\n      window.document.activeElement.blur();\n    }\n\n    const multiPointElement = appState.multiElement\n      ? appState.multiElement\n      : appState.editingElement?.type === \"draw\"\n      ? appState.editingElement\n      : null;\n\n    if (multiPointElement) {\n      // pen and mouse have hover\n      if (\n        multiPointElement.type !== \"draw\" &&\n        appState.lastPointerDownWith !== \"touch\"\n      ) {\n        const { points, lastCommittedPoint } = multiPointElement;\n        if (\n          !lastCommittedPoint ||\n          points[points.length - 1] !== lastCommittedPoint\n        ) {\n          mutateElement(multiPointElement, {\n            points: multiPointElement.points.slice(0, -1),\n          });\n        }\n      }\n      if (isInvisiblySmallElement(multiPointElement)) {\n        newElements = newElements.slice(0, -1);\n      }\n\n      // If the multi point line closes the loop,\n      // set the last point to first point.\n      // This ensures that loop remains closed at different scales.\n      if (\n        multiPointElement.type === \"line\" ||\n        multiPointElement.type === \"draw\"\n      ) {\n        if (isPathALoop(multiPointElement.points)) {\n          const linePoints = multiPointElement.points;\n          const firstPoint = linePoints[0];\n          mutateElement(multiPointElement, {\n            points: linePoints.map((point, i) =>\n              i === linePoints.length - 1\n                ? ([firstPoint[0], firstPoint[1]] as const)\n                : point,\n            ),\n          });\n        }\n      }\n\n      if (!appState.elementLocked) {\n        appState.selectedElementIds[multiPointElement.id] = true;\n      }\n    }\n    if (!appState.elementLocked || !multiPointElement) {\n      resetCursor();\n    }\n    return {\n      elements: newElements,\n      appState: {\n        ...appState,\n        elementType:\n          appState.elementLocked && multiPointElement\n            ? appState.elementType\n            : \"selection\",\n        draggingElement: null,\n        multiElement: null,\n        editingElement: null,\n        selectedElementIds:\n          multiPointElement && !appState.elementLocked\n            ? {\n                ...appState.selectedElementIds,\n                [multiPointElement.id]: true,\n              }\n            : appState.selectedElementIds,\n      },\n      commitToHistory: appState.elementType === \"draw\",\n    };\n  },\n  keyTest: (event, appState) =>\n    (event.key === KEYS.ESCAPE &&\n      (appState.editingLinearElement !== null ||\n        (!appState.draggingElement && appState.multiElement === null))) ||\n    ((event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) &&\n      appState.multiElement !== null),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={done}\n      title={t(\"buttons.done\")}\n      aria-label={t(\"buttons.done\")}\n      onClick={updateData}\n      visible={appState.multiElement != null}\n    />\n  ),\n});\n","import \"./TextInput.scss\";\n\nimport React, { Component } from \"react\";\nimport { selectNode, removeSelection } from \"../utils\";\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n};\n\nexport class ProjectName extends Component<Props> {\n  private handleFocus = (event: React.FocusEvent<HTMLElement>) => {\n    selectNode(event.currentTarget);\n  };\n\n  private handleBlur = (event: React.FocusEvent<HTMLElement>) => {\n    const value = event.currentTarget.innerText.trim();\n    if (value !== this.props.value) {\n      this.props.onChange(value);\n    }\n    removeSelection();\n  };\n\n  private handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      if (event.nativeEvent.isComposing || event.keyCode === 229) {\n        return;\n      }\n      event.currentTarget.blur();\n    }\n  };\n  private makeEditable = (editable: HTMLSpanElement | null) => {\n    if (!editable) {\n      return;\n    }\n    try {\n      editable.contentEditable = \"plaintext-only\";\n    } catch {\n      editable.contentEditable = \"true\";\n    }\n  };\n\n  public render() {\n    return (\n      <span\n        suppressContentEditableWarning\n        ref={this.makeEditable}\n        data-type=\"wysiwyg\"\n        className=\"TextInput\"\n        role=\"textbox\"\n        aria-label={this.props.label}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        onFocus={this.handleFocus}\n      >\n        {this.props.value}\n      </span>\n    );\n  }\n}\n","import {\n  isTextElement,\n  isExcalidrawElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { KEYS } from \"../keys\";\nimport {\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n} from \"../appState\";\nimport { register } from \"./register\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\n\nlet copiedStyles: string = \"{}\";\n\nexport const actionCopyStyles = register({\n  name: \"copyStyles\",\n  perform: (elements, appState) => {\n    const element = elements.find((el) => appState.selectedElementIds[el.id]);\n    if (element) {\n      copiedStyles = JSON.stringify(element);\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.copyStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"C\",\n  contextMenuOrder: 0,\n});\n\nexport const actionPasteStyles = register({\n  name: \"pasteStyles\",\n  perform: (elements, appState) => {\n    const pastedElement = JSON.parse(copiedStyles);\n    if (!isExcalidrawElement(pastedElement)) {\n      return { elements, commitToHistory: false };\n    }\n    return {\n      elements: elements.map((element) => {\n        if (appState.selectedElementIds[element.id]) {\n          const newElement = newElementWith(element, {\n            backgroundColor: pastedElement?.backgroundColor,\n            strokeWidth: pastedElement?.strokeWidth,\n            strokeColor: pastedElement?.strokeColor,\n            fillStyle: pastedElement?.fillStyle,\n            opacity: pastedElement?.opacity,\n            roughness: pastedElement?.roughness,\n          });\n          if (isTextElement(newElement)) {\n            mutateElement(newElement, {\n              fontSize: pastedElement?.fontSize || DEFAULT_FONT_SIZE,\n              fontFamily: pastedElement?.fontFamily || DEFAULT_FONT_FAMILY,\n              textAlign: pastedElement?.textAlign || DEFAULT_TEXT_ALIGN,\n            });\n            redrawTextBoundingBox(newElement);\n          }\n          return newElement;\n        }\n        return element;\n      }),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.pasteStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"V\",\n  contextMenuOrder: 1,\n});\n","import React from \"react\";\nimport { ProjectName } from \"../components/ProjectName\";\nimport { saveAsJSON, loadFromJSON } from \"../data\";\nimport { load, save } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { KEYS } from \"../keys\";\n\nexport const actionChangeProjectName = register({\n  name: \"changeProjectName\",\n  perform: (_elements, appState, value) => {\n    return { appState: { ...appState, name: value }, commitToHistory: false };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <ProjectName\n      label={t(\"labels.fileTitle\")}\n      value={appState.name || \"Unnamed\"}\n      onChange={(name: string) => updateData(name)}\n    />\n  ),\n});\n\nexport const actionChangeExportBackground = register({\n  name: \"changeExportBackground\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportBackground: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.exportBackground}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.withBackground\")}\n    </label>\n  ),\n});\n\nexport const actionChangeShouldAddWatermark = register({\n  name: \"changeShouldAddWatermark\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, shouldAddWatermark: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.shouldAddWatermark}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.addWatermark\")}\n    </label>\n  ),\n});\n\nexport const actionSaveScene = register({\n  name: \"saveScene\",\n  perform: (elements, appState, value) => {\n    saveAsJSON(elements, appState).catch((error) => console.error(error));\n    return { commitToHistory: false };\n  },\n  keyTest: (event) => {\n    return event.key === \"s\" && event[KEYS.CTRL_OR_CMD];\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={save}\n      title={t(\"buttons.save\")}\n      aria-label={t(\"buttons.save\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => updateData(null)}\n    />\n  ),\n});\n\nexport const actionLoadScene = register({\n  name: \"loadScene\",\n  perform: (\n    elements,\n    appState,\n    { elements: loadedElements, appState: loadedAppState, error },\n  ) => {\n    return {\n      elements: loadedElements,\n      appState: {\n        ...loadedAppState,\n        errorMessage: error,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={load}\n      title={t(\"buttons.load\")}\n      aria-label={t(\"buttons.load\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        loadFromJSON()\n          .then(({ elements, appState }) => {\n            updateData({ elements: elements, appState: appState });\n          })\n          .catch((error) => {\n            // if user cancels, ignore the error\n            if (error.name === \"AbortError\") {\n              return;\n            }\n            updateData({ error: error.message });\n          });\n      }}\n    />\n  ),\n});\n","import React from \"react\";\n\ntype HelpIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  onClick?(): void;\n};\n\nconst ICON = (\n  <svg\n    width=\"30\"\n    height=\"22\"\n    viewBox=\"0 0 512 512\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\" />\n  </svg>\n);\n\nexport const HelpIcon = (props: HelpIconProps) => (\n  <label title={`${props.title} — ?`} className=\"help-icon\">\n    <div onClick={props.onClick}>{ICON}</div>\n  </label>\n);\n","import { PointerCoords } from \"./types\";\nimport { normalizeScroll } from \"./scene\";\n\nexport const getCenter = (pointers: Map<number, PointerCoords>) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: normalizeScroll(sum(allCoords, (coords) => coords.x) / allCoords.length),\n    y: normalizeScroll(sum(allCoords, (coords) => coords.y) / allCoords.length),\n  };\n};\n\nexport const getDistance = ([a, b]: readonly PointerCoords[]) =>\n  Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = <T>(array: readonly T[], mapper: (item: T) => number): number =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import React from \"react\";\nimport { menu, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { allowFullScreen, exitFullScreen, isFullScreen } from \"../utils\";\nimport { KEYS } from \"../keys\";\nimport { HelpIcon } from \"../components/HelpIcon\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={menu}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(\n        appState,\n        getNonDeletedElements(elements),\n      )}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n\nexport const actionFullScreen = register({\n  name: \"toggleFullScreen\",\n  perform: () => {\n    if (!isFullScreen()) {\n      allowFullScreen();\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) => event.keyCode === KEYS.F_KEY_CODE,\n});\n\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        showShortcutsDialog: true,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <HelpIcon title={t(\"shortcutsDialog.title\")} onClick={updateData} />\n  ),\n  keyTest: (event) => event.key === KEYS.QUESTION_MARK,\n});\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getSelectedElements } from \"../scene\";\nimport {\n  getSelectedGroupIds,\n  selectGroup,\n  selectGroupsForSelectedElements,\n  getElementsInGroup,\n  addToGroup,\n  removeFromSelectedGroups,\n  isElementInGroup,\n} from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\nimport { randomId } from \"../random\";\n\nexport const actionGroup = register({\n  name: \"group\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    if (selectedElements.length < 2) {\n      // nothing to group\n      return { appState, elements, commitToHistory: false };\n    }\n    // if everything is already grouped into 1 group, there is nothing to do\n    const selectedGroupIds = getSelectedGroupIds(appState);\n    if (selectedGroupIds.length === 1) {\n      const selectedGroupId = selectedGroupIds[0];\n      const elementIdsInGroup = new Set(\n        getElementsInGroup(elements, selectedGroupId).map(\n          (element) => element.id,\n        ),\n      );\n      const selectedElementIds = new Set(\n        selectedElements.map((element) => element.id),\n      );\n      const combinedSet = new Set([\n        ...Array.from(elementIdsInGroup),\n        ...Array.from(selectedElementIds),\n      ]);\n      if (combinedSet.size === elementIdsInGroup.size) {\n        // no incremental ids in the selected ids\n        return { appState, elements, commitToHistory: false };\n      }\n    }\n    const newGroupId = randomId();\n    const updatedElements = elements.map((element) => {\n      if (!appState.selectedElementIds[element.id]) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: addToGroup(\n          element.groupIds,\n          newGroupId,\n          appState.editingGroupId,\n        ),\n      });\n    });\n    // keep the z order within the group the same, but move them\n    // to the z order of the highest element in the layer stack\n    const elementsInGroup = getElementsInGroup(updatedElements, newGroupId);\n    const lastElementInGroup = elementsInGroup[elementsInGroup.length - 1];\n    const lastGroupElementIndex = updatedElements.lastIndexOf(\n      lastElementInGroup,\n    );\n    const elementsAfterGroup = updatedElements.slice(lastGroupElementIndex + 1);\n    const elementsBeforeGroup = updatedElements\n      .slice(0, lastGroupElementIndex)\n      .filter(\n        (updatedElement) => !isElementInGroup(updatedElement, newGroupId),\n      );\n    const updatedElementsInOrder = [\n      ...elementsBeforeGroup,\n      ...elementsInGroup,\n      ...elementsAfterGroup,\n    ];\n\n    return {\n      appState: selectGroup(\n        newGroupId,\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(updatedElementsInOrder),\n      ),\n      elements: updatedElementsInOrder,\n      commitToHistory: true,\n    };\n  },\n  contextMenuOrder: 4,\n  contextItemLabel: \"labels.group\",\n  keyTest: (event) => {\n    return (\n      !event.shiftKey &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.keyCode === KEYS.G_KEY_CODE\n    );\n  },\n});\n\nexport const actionUngroup = register({\n  name: \"ungroup\",\n  perform: (elements, appState) => {\n    const groupIds = getSelectedGroupIds(appState);\n    if (groupIds.length === 0) {\n      return { appState, elements, commitToHistory: false };\n    }\n    const nextElements = elements.map((element) => {\n      const nextGroupIds = removeFromSelectedGroups(\n        element.groupIds,\n        appState.selectedGroupIds,\n      );\n      if (nextGroupIds.length === element.groupIds.length) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: nextGroupIds,\n      });\n    });\n    return {\n      appState: selectGroupsForSelectedElements(\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(nextElements),\n      ),\n      elements: nextElements,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => {\n    return (\n      event.shiftKey &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.keyCode === KEYS.G_KEY_CODE\n    );\n  },\n  contextMenuOrder: 5,\n  contextItemLabel: \"labels.ungroup\",\n});\n","import { Action, ActionResult } from \"./types\";\nimport React from \"react\";\nimport { undo, redo } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { SceneHistory, HistoryEntry } from \"../history\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { KEYS } from \"../keys\";\nimport { getElementMap } from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\n\nconst writeData = (\n  prevElements: readonly ExcalidrawElement[],\n  appState: AppState,\n  updater: () => HistoryEntry | null,\n): ActionResult => {\n  const commitToHistory = false;\n  if (\n    !appState.multiElement &&\n    !appState.resizingElement &&\n    !appState.editingElement &&\n    !appState.draggingElement\n  ) {\n    const data = updater();\n    if (data === null) {\n      return { commitToHistory };\n    }\n\n    const prevElementMap = getElementMap(prevElements);\n    const nextElements = data.elements;\n    const nextElementMap = getElementMap(nextElements);\n\n    const elements = nextElements\n      .map((nextElement) =>\n        newElementWith(\n          prevElementMap[nextElement.id] || nextElement,\n          nextElement,\n        ),\n      )\n      .concat(\n        prevElements\n          .filter(\n            (prevElement) => !nextElementMap.hasOwnProperty(prevElement.id),\n          )\n          .map((prevElement) =>\n            newElementWith(prevElement, { isDeleted: true }),\n          ),\n      );\n\n    return {\n      elements,\n      appState: { ...appState, ...data.appState },\n      commitToHistory,\n      syncHistory: true,\n    };\n  }\n  return { commitToHistory };\n};\n\nconst testUndo = (shift: boolean) => (event: KeyboardEvent) =>\n  event[KEYS.CTRL_OR_CMD] && /z/i.test(event.key) && event.shiftKey === shift;\n\ntype ActionCreator = (history: SceneHistory) => Action;\n\nexport const createUndoAction: ActionCreator = (history) => ({\n  name: \"undo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.undoOnce()),\n  keyTest: testUndo(false),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={undo}\n      aria-label={t(\"buttons.undo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n\nexport const createRedoAction: ActionCreator = (history) => ({\n  name: \"redo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.redoOnce()),\n  keyTest: testUndo(true),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={redo}\n      aria-label={t(\"buttons.redo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n","import \"./Island.scss\";\n\nimport React from \"react\";\n\ntype IslandProps = {\n  children: React.ReactNode;\n  padding?: number;\n  className?: string | boolean;\n  style?: object;\n};\n\nexport const Island = React.forwardRef<HTMLDivElement, IslandProps>(\n  ({ children, padding, className, style }, ref) => (\n    <div\n      className={`${className ?? \"\"} Island`}\n      style={{ \"--padding\": padding, ...style } as React.CSSProperties}\n      ref={ref}\n    >\n      {children}\n    </div>\n  ),\n);\n","import \"./Stack.css\";\n\nimport React from \"react\";\n\ntype StackProps = {\n  children: React.ReactNode;\n  gap?: number;\n  align?: \"start\" | \"center\" | \"end\" | \"baseline\";\n  justifyContent?: \"center\" | \"space-around\" | \"space-between\";\n  className?: string | boolean;\n};\n\nconst RowStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={`Stack Stack_horizontal ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          alignItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n};\n\nconst ColStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={`Stack Stack_vertical ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          justifyItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default {\n  Row: RowStack,\n  Col: ColStack,\n};\n","import \"./FixedSideContainer.css\";\n\nimport React from \"react\";\n\ntype FixedSideContainerProps = {\n  children: React.ReactNode;\n  side: \"top\" | \"left\" | \"right\";\n  className?: string;\n};\n\nexport const FixedSideContainer = ({\n  children,\n  side,\n  className,\n}: FixedSideContainerProps) => (\n  <div\n    className={`FixedSideContainer FixedSideContainer_side_${side} ${className}`}\n  >\n    {children}\n  </div>\n);\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype LockIconSize = \"s\" | \"m\";\n\ntype LockIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  checked: boolean;\n  onChange?(): void;\n  size?: LockIconSize;\n  zenModeEnabled?: boolean;\n};\n\nconst DEFAULT_SIZE: LockIconSize = \"m\";\n\nconst ICONS = {\n  CHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\" />\n    </svg>\n  ),\n  UNCHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"unlocked-icon rtl-mirror\"\n    >\n      <path d=\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\" />\n    </svg>\n  ),\n};\n\nexport const LockIcon = (props: LockIconProps) => {\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  return (\n    <label\n      className={`ToolIcon ToolIcon__lock ToolIcon_type_floating ${sizeCn} zen-mode-visibility ${\n        props.zenModeEnabled && \"zen-mode-visibility--hidden\"\n      }`}\n      title={`${props.title} — Q`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.checked ? ICONS.CHECKED : ICONS.UNCHECKED}\n      </div>\n    </label>\n  );\n};\n","import \"./Modal.scss\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { KEYS } from \"../keys\";\n\nexport const Modal = (props: {\n  className?: string;\n  children: React.ReactNode;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  labelledBy: string;\n}) => {\n  const modalRoot = useBodyRoot();\n\n  const handleKeydown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      props.onCloseRequest();\n    }\n  };\n  return createPortal(\n    <div\n      className={`Modal ${props.className ?? \"\"}`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onKeyDown={handleKeydown}\n      aria-labelledby={props.labelledBy}\n      tabIndex={-1}\n    >\n      <div className=\"Modal__background\" onClick={props.onCloseRequest}></div>\n      <div\n        className=\"Modal__content\"\n        style={\n          {\n            \"--max-width\": `${props.maxWidth}px`,\n            maxHeight: \"100%\",\n            overflowY: \"scroll\",\n          } as any\n        }\n      >\n        {props.children}\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nconst useBodyRoot = () => {\n  const createDiv = () => {\n    const div = document.createElement(\"div\");\n    document.body.appendChild(div);\n    return div;\n  };\n  const [div] = useState(createDiv);\n  useEffect(() => {\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n  return div;\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { Modal } from \"./Modal\";\nimport { Island } from \"./Island\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { back, close } from \"./icons\";\nimport { KEYS } from \"../keys\";\n\nimport \"./Dialog.scss\";\n\nexport const Dialog = (props: {\n  children: React.ReactNode;\n  className?: string;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  title: React.ReactNode;\n}) => {\n  const islandRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const focusableElements = queryFocusableElements();\n\n    if (focusableElements.length > 0) {\n      // If there's an element other than close, focus it.\n      (focusableElements[1] || focusableElements[0]).focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!islandRef.current) {\n      return;\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements();\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    };\n\n    const node = islandRef.current;\n    node.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => node.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  const queryFocusableElements = () => {\n    const focusableElements = islandRef.current?.querySelectorAll<HTMLElement>(\n      \"button, a, input, select, textarea, div[tabindex]\",\n    );\n\n    return focusableElements ? Array.from(focusableElements) : [];\n  };\n\n  return (\n    <Modal\n      className={`${props.className ?? \"\"} Dialog`}\n      labelledBy=\"dialog-title\"\n      maxWidth={props.maxWidth}\n      onCloseRequest={props.onCloseRequest}\n    >\n      <Island padding={4} ref={islandRef}>\n        <h2 id=\"dialog-title\" className=\"Dialog__title\">\n          <span className=\"Dialog__titleContent\">{props.title}</span>\n          <button\n            className=\"Modal__close\"\n            onClick={props.onCloseRequest}\n            aria-label={t(\"buttons.close\")}\n          >\n            {useIsMobile() ? back : close}\n          </button>\n        </h2>\n        {props.children}\n      </Island>\n    </Modal>\n  );\n};\n","import \"./ExportDialog.scss\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nimport { ToolButton } from \"./ToolButton\";\nimport { clipboard, exportFile, link } from \"./icons\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { exportToCanvas } from \"../scene/export\";\nimport { ActionsManagerInterface } from \"../actions/types\";\nimport Stack from \"./Stack\";\nimport { t } from \"../i18n\";\n\nimport { probablySupportsClipboardBlob } from \"../clipboard\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport useIsMobile from \"../is-mobile\";\nimport { Dialog } from \"./Dialog\";\n\nconst scales = [1, 2, 3];\nconst defaultScale = scales.includes(devicePixelRatio) ? devicePixelRatio : 1;\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst ExportModal = ({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n  onCloseRequest: () => void;\n}) => {\n  const someElementIsSelected = isSomeElementSelected(elements, appState);\n  const [scale, setScale] = useState(defaultScale);\n  const [exportSelected, setExportSelected] = useState(someElementIsSelected);\n  const previewRef = useRef<HTMLDivElement>(null);\n  const {\n    exportBackground,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  } = appState;\n\n  const exportedElements = exportSelected\n    ? getSelectedElements(elements, appState)\n    : elements;\n\n  useEffect(() => {\n    setExportSelected(someElementIsSelected);\n  }, [someElementIsSelected]);\n\n  useEffect(() => {\n    const previewNode = previewRef.current;\n    const canvas = exportToCanvas(exportedElements, appState, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      scale,\n      shouldAddWatermark,\n    });\n    previewNode?.appendChild(canvas);\n    return () => {\n      previewNode?.removeChild(canvas);\n    };\n  }, [\n    appState,\n    exportedElements,\n    exportBackground,\n    exportPadding,\n    viewBackgroundColor,\n    scale,\n    shouldAddWatermark,\n  ]);\n\n  return (\n    <div className=\"ExportDialog\">\n      <div className=\"ExportDialog__preview\" ref={previewRef}></div>\n      <Stack.Col gap={2} align=\"center\">\n        <div className=\"ExportDialog__actions\">\n          <Stack.Row gap={2}>\n            <ToolButton\n              type=\"button\"\n              label=\"PNG\"\n              title={t(\"buttons.exportToPng\")}\n              aria-label={t(\"buttons.exportToPng\")}\n              onClick={() => onExportToPng(exportedElements, scale)}\n            />\n            <ToolButton\n              type=\"button\"\n              label=\"SVG\"\n              title={t(\"buttons.exportToSvg\")}\n              aria-label={t(\"buttons.exportToSvg\")}\n              onClick={() => onExportToSvg(exportedElements, scale)}\n            />\n            {probablySupportsClipboardBlob && (\n              <ToolButton\n                type=\"button\"\n                icon={clipboard}\n                title={t(\"buttons.copyPngToClipboard\")}\n                aria-label={t(\"buttons.copyPngToClipboard\")}\n                onClick={() => onExportToClipboard(exportedElements, scale)}\n              />\n            )}\n            <ToolButton\n              type=\"button\"\n              icon={link}\n              title={t(\"buttons.getShareableLink\")}\n              aria-label={t(\"buttons.getShareableLink\")}\n              onClick={() => onExportToBackend(exportedElements)}\n            />\n          </Stack.Row>\n          <div className=\"ExportDialog__name\">\n            {actionManager.renderAction(\"changeProjectName\")}\n          </div>\n          <Stack.Row gap={2}>\n            {scales.map((s) => (\n              <ToolButton\n                key={s}\n                size=\"s\"\n                type=\"radio\"\n                icon={`x${s}`}\n                name=\"export-canvas-scale\"\n                aria-label={`Scale ${s} x`}\n                id=\"export-canvas-scale\"\n                checked={s === scale}\n                onChange={() => setScale(s)}\n              />\n            ))}\n          </Stack.Row>\n        </div>\n        {actionManager.renderAction(\"changeExportBackground\")}\n        {someElementIsSelected && (\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={exportSelected}\n                onChange={(event) =>\n                  setExportSelected(event.currentTarget.checked)\n                }\n              />{\" \"}\n              {t(\"labels.onlySelected\")}\n            </label>\n          </div>\n        )}\n        {actionManager.renderAction(\"changeShouldAddWatermark\")}\n      </Stack.Col>\n    </div>\n  );\n};\n\nexport const ExportDialog = ({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  return (\n    <>\n      <ToolButton\n        onClick={() => setModalIsShown(true)}\n        icon={exportFile}\n        type=\"button\"\n        aria-label={t(\"buttons.export\")}\n        showAriaLabel={useIsMobile()}\n        title={t(\"buttons.export\")}\n        ref={triggerButton}\n      />\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"buttons.export\")}\n        >\n          <ExportModal\n            elements={elements}\n            appState={appState}\n            exportPadding={exportPadding}\n            actionManager={actionManager}\n            onExportToPng={onExportToPng}\n            onExportToSvg={onExportToSvg}\n            onExportToClipboard={onExportToClipboard}\n            onExportToBackend={onExportToBackend}\n            onCloseRequest={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport * as i18n from \"../i18n\";\n\nexport const LanguageList = ({\n  onChange,\n  languages = i18n.languages,\n  currentLanguage = i18n.getLanguage().lng,\n  floating,\n}: {\n  languages?: { lng: string; label: string }[];\n  onChange: (value: string) => void;\n  currentLanguage?: string;\n  floating?: boolean;\n}) => (\n  <React.Fragment>\n    <select\n      className={`dropdown-select dropdown-select__language${\n        floating ? \" dropdown-select--floating\" : \"\"\n      }`}\n      onChange={({ target }) => onChange(target.value)}\n      value={currentLanguage}\n      aria-label={i18n.t(\"buttons.selectLanguage\")}\n    >\n      {languages.map((language) => (\n        <option key={language.lng} value={language.lng}>\n          {language.label}\n        </option>\n      ))}\n    </select>\n  </React.Fragment>\n);\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getSelectedElements } from \"../scene\";\n\nimport \"./HintViewer.scss\";\nimport { AppState } from \"../types\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { getShortcutKey } from \"../utils\";\n\ninterface Hint {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n}\n\nconst getHints = ({ appState, elements }: Hint) => {\n  const { elementType, isResizing, isRotating, lastPointerDownWith } = appState;\n  const multiMode = appState.multiElement !== null;\n  if (elementType === \"arrow\" || elementType === \"line\") {\n    if (!multiMode) {\n      return t(\"hints.linearElement\");\n    }\n    return t(\"hints.linearElementMulti\");\n  }\n\n  if (elementType === \"draw\") {\n    return t(\"hints.freeDraw\");\n  }\n\n  const selectedElements = getSelectedElements(elements, appState);\n  if (\n    isResizing &&\n    lastPointerDownWith === \"mouse\" &&\n    selectedElements.length === 1\n  ) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length > 2) {\n      return null;\n    }\n    return t(\"hints.resize\");\n  }\n\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n\n  if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n    if (appState.editingLinearElement) {\n      return appState.editingLinearElement.activePointIndex\n        ? t(\"hints.lineEditor_pointSelected\")\n        : t(\"hints.lineEditor_nothingSelected\");\n    }\n    return t(\"hints.lineEditor_info\");\n  }\n\n  return null;\n};\n\nexport const HintViewer = ({ appState, elements }: Hint) => {\n  let hint = getHints({\n    appState,\n    elements,\n  });\n  if (!hint) {\n    return null;\n  }\n\n  hint = getShortcutKey(hint);\n\n  return (\n    <div className=\"HintViewer\">\n      <span>{hint}</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { hasBackground, hasStroke, hasText, getTargetElement } from \"../scene\";\nimport { t } from \"../i18n\";\nimport { SHAPES } from \"../shapes\";\nimport { ToolButton } from \"./ToolButton\";\nimport { capitalizeString, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport useIsMobile from \"../is-mobile\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const SelectedShapeActions = ({\n  appState,\n  elements,\n  renderAction,\n  elementType,\n}: {\n  appState: AppState;\n  elements: readonly ExcalidrawElement[];\n  renderAction: ActionManager[\"renderAction\"];\n  elementType: ExcalidrawElement[\"type\"];\n}) => {\n  const targetElements = getTargetElement(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  const isEditing = Boolean(appState.editingElement);\n  const isMobile = useIsMobile();\n\n  return (\n    <div className=\"panelColumn\">\n      {renderAction(\"changeStrokeColor\")}\n      {(hasBackground(elementType) ||\n        targetElements.some((element) => hasBackground(element.type))) && (\n        <>\n          {renderAction(\"changeBackgroundColor\")}\n\n          {renderAction(\"changeFillStyle\")}\n        </>\n      )}\n\n      {(hasStroke(elementType) ||\n        targetElements.some((element) => hasStroke(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeWidth\")}\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(hasText(elementType) ||\n        targetElements.some((element) => hasText(element.type))) && (\n        <>\n          {renderAction(\"changeFontSize\")}\n\n          {renderAction(\"changeFontFamily\")}\n\n          {renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringToFront\")}\n          {renderAction(\"bringForward\")}\n        </div>\n      </fieldset>\n      {!isMobile && !isEditing && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {renderAction(\"duplicateSelection\")}\n            {renderAction(\"deleteSelectedElements\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nexport const ShapesSwitcher = ({\n  elementType,\n  setAppState,\n}: {\n  elementType: ExcalidrawElement[\"type\"];\n  setAppState: any;\n}) => (\n  <>\n    {SHAPES.map(({ value, icon, key }, index) => {\n      const label = t(`toolBar.${value}`);\n      const shortcut = `${capitalizeString(key)} ${t(\"shortcutsDialog.or\")} ${\n        index + 1\n      }`;\n      return (\n        <ToolButton\n          key={value}\n          type=\"radio\"\n          icon={icon}\n          checked={elementType === value}\n          name=\"editor-current-shape\"\n          title={`${capitalizeString(label)} — ${shortcut}`}\n          keyBindingLabel={`${index + 1}`}\n          aria-label={capitalizeString(label)}\n          aria-keyshortcuts={`${key} ${index + 1}`}\n          data-testid={value}\n          onChange={() => {\n            setAppState({\n              elementType: value,\n              multiElement: null,\n              selectedElementIds: {},\n            });\n            setCursorForShape(value);\n            setAppState({});\n          }}\n        ></ToolButton>\n      );\n    })}\n  </>\n);\n\nexport const ZoomActions = ({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: number;\n}) => (\n  <Stack.Col gap={1}>\n    <Stack.Row gap={1} align=\"center\">\n      {renderAction(\"zoomIn\")}\n      {renderAction(\"zoomOut\")}\n      {renderAction(\"resetZoom\")}\n      <div style={{ marginInlineStart: 4 }}>{(zoom * 100).toFixed(0)}%</div>\n    </Stack.Row>\n  </Stack.Col>\n);\n","import React from \"react\";\nimport { t } from \"../i18n\";\n\ninterface SectionProps extends React.HTMLProps<HTMLElement> {\n  heading: string;\n  children: React.ReactNode | ((header: React.ReactNode) => React.ReactNode);\n}\n\nexport const Section = ({ heading, children, ...props }: SectionProps) => {\n  const header = (\n    <h2 className=\"visually-hidden\" id={`${heading}-title`}>\n      {t(`headings.${heading}`)}\n    </h2>\n  );\n  return (\n    <section {...props} aria-labelledby={`${heading}-title`}>\n      {typeof children === \"function\" ? (\n        children(header)\n      ) : (\n        <>\n          {header}\n          {children}\n        </>\n      )}\n    </section>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { ToolButton } from \"./ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { users, clipboard, start, stop } from \"./icons\";\n\nimport \"./RoomDialog.scss\";\nimport { copyTextToSystemClipboard } from \"../clipboard\";\nimport { Dialog } from \"./Dialog\";\nimport { AppState } from \"../types\";\n\nconst RoomModal = ({\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n  onPressingEnter,\n}: {\n  activeRoomLink: string;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n  onPressingEnter: () => void;\n}) => {\n  const roomLinkInput = useRef<HTMLInputElement>(null);\n\n  const copyRoomLink = () => {\n    copyTextToSystemClipboard(activeRoomLink);\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  };\n  const selectInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).select();\n    }\n  };\n\n  return (\n    <div className=\"RoomDialog-modal\">\n      {!activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_intro\")}</p>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-startSession\"\n              type=\"button\"\n              icon={start}\n              title={t(\"roomDialog.button_startSession\")}\n              aria-label={t(\"roomDialog.button_startSession\")}\n              showAriaLabel={true}\n              onClick={onRoomCreate}\n            />\n          </div>\n        </>\n      )}\n      {activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_inProgressIntro\")}</p>\n          <p>{t(\"roomDialog.desc_shareLink\")}</p>\n          <div className=\"RoomDialog-linkContainer\">\n            <ToolButton\n              type=\"button\"\n              icon={clipboard}\n              title={t(\"labels.copy\")}\n              aria-label={t(\"labels.copy\")}\n              onClick={copyRoomLink}\n            />\n            <input\n              value={activeRoomLink}\n              readOnly={true}\n              className=\"RoomDialog-link\"\n              ref={roomLinkInput}\n              onPointerDown={selectInput}\n            />\n          </div>\n          <div className=\"RoomDialog-usernameContainer\">\n            <label className=\"RoomDialog-usernameLabel\" htmlFor=\"username\">\n              {t(\"labels.yourName\")}\n            </label>\n            <input\n              id=\"username\"\n              value={username || \"\"}\n              className=\"RoomDialog-username TextInput\"\n              onChange={(event) => onUsernameChange(event.target.value)}\n              onKeyPress={(event) => event.key === \"Enter\" && onPressingEnter()}\n            />\n          </div>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <p>\n            <span role=\"img\" aria-hidden=\"true\">\n              ⚠️\n            </span>{\" \"}\n            {t(\"roomDialog.desc_persistenceWarning\")}\n          </p>\n          <p>{t(\"roomDialog.desc_exitSession\")}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-stopSession\"\n              type=\"button\"\n              icon={stop}\n              title={t(\"roomDialog.button_stopSession\")}\n              aria-label={t(\"roomDialog.button_stopSession\")}\n              showAriaLabel={true}\n              onClick={onRoomDestroy}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const RoomDialog = ({\n  isCollaborating,\n  collaboratorCount,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n}: {\n  isCollaborating: AppState[\"isCollaborating\"];\n  collaboratorCount: number;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const [activeRoomLink, setActiveRoomLink] = useState(\"\");\n\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    setActiveRoomLink(isCollaborating ? window.location.href : \"\");\n  }, [isCollaborating]);\n\n  return (\n    <>\n      <ToolButton\n        className={`RoomDialog-modalButton ${\n          isCollaborating ? \"is-collaborating\" : \"\"\n        }`}\n        onClick={() => setModalIsShown(true)}\n        icon={users}\n        type=\"button\"\n        title={t(\"buttons.roomDialog\")}\n        aria-label={t(\"buttons.roomDialog\")}\n        showAriaLabel={useIsMobile()}\n        ref={triggerButton}\n      >\n        {collaboratorCount > 0 && (\n          <div className=\"RoomDialog-modalButton-collaborators\">\n            {collaboratorCount}\n          </div>\n        )}\n      </ToolButton>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"labels.createRoom\")}\n        >\n          <RoomModal\n            activeRoomLink={activeRoomLink}\n            username={username}\n            onUsernameChange={onUsernameChange}\n            onRoomCreate={onRoomCreate}\n            onRoomDestroy={onRoomDestroy}\n            onPressingEnter={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const LoadingMessage = () => {\n  // !! KEEP THIS IN SYNC WITH index.html !!\n  return (\n    <div className=\"LoadingMessage\">\n      <span>{\"Loading scene...\"}</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t, setLanguage } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { LanguageList } from \"./LanguageList\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockIcon } from \"./LockIcon\";\nimport { LoadingMessage } from \"./LoadingMessage\";\n\ntype MobileMenuProps = {\n  appState: AppState;\n  actionManager: ActionManager;\n  exportButton: React.ReactNode;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n  canvas: HTMLCanvasElement | null;\n};\n\nexport const MobileMenu = ({\n  appState,\n  elements,\n  actionManager,\n  exportButton,\n  setAppState,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n  canvas,\n}: MobileMenuProps) => (\n  <>\n    {appState.isLoading && <LoadingMessage />}\n    <FixedSideContainer side=\"top\">\n      <Section heading=\"shapes\">\n        {(heading) => (\n          <Stack.Col gap={4} align=\"center\">\n            <Stack.Row gap={1}>\n              <Island padding={1}>\n                {heading}\n                <Stack.Row gap={1}>\n                  <ShapesSwitcher\n                    elementType={appState.elementType}\n                    setAppState={setAppState}\n                  />\n                </Stack.Row>\n              </Island>\n              <LockIcon\n                checked={appState.elementLocked}\n                onChange={onLockToggle}\n                title={t(\"toolBar.lock\")}\n              />\n            </Stack.Row>\n          </Stack.Col>\n        )}\n      </Section>\n      <HintViewer appState={appState} elements={elements} />\n    </FixedSideContainer>\n    <div\n      className=\"App-bottom-bar\"\n      style={{\n        marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n      }}\n    >\n      <Island padding={3}>\n        {appState.openMenu === \"canvas\" ? (\n          <Section className=\"App-mobile-menu\" heading=\"canvasActions\">\n            <div className=\"panelColumn\">\n              <Stack.Col gap={4}>\n                {actionManager.renderAction(\"loadScene\")}\n                {actionManager.renderAction(\"saveScene\")}\n                {exportButton}\n                {actionManager.renderAction(\"clearCanvas\")}\n                <RoomDialog\n                  isCollaborating={appState.isCollaborating}\n                  collaboratorCount={appState.collaborators.size}\n                  username={appState.username}\n                  onUsernameChange={onUsernameChange}\n                  onRoomCreate={onRoomCreate}\n                  onRoomDestroy={onRoomDestroy}\n                />\n                {actionManager.renderAction(\"changeViewBackgroundColor\")}\n                <fieldset>\n                  <legend>{t(\"labels.language\")}</legend>\n                  <LanguageList\n                    onChange={(lng) => {\n                      setLanguage(lng);\n                      setAppState({});\n                    }}\n                  />\n                </fieldset>\n              </Stack.Col>\n            </div>\n          </Section>\n        ) : appState.openMenu === \"shape\" &&\n          showSelectedShapeActions(appState, elements) ? (\n          <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n            <SelectedShapeActions\n              appState={appState}\n              elements={elements}\n              renderAction={actionManager.renderAction}\n              elementType={appState.elementType}\n            />\n          </Section>\n        ) : null}\n        <footer className=\"App-toolbar\">\n          <div className=\"App-toolbar-content\">\n            {actionManager.renderAction(\"toggleCanvasMenu\")}\n            {actionManager.renderAction(\"toggleEditMenu\")}\n            {actionManager.renderAction(\"undo\")}\n            {actionManager.renderAction(\"redo\")}\n            {actionManager.renderAction(\n              appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n            )}\n            {actionManager.renderAction(\"deleteSelectedElements\")}\n          </div>\n          {appState.scrolledOutside && (\n            <button\n              className=\"scroll-back-to-content\"\n              onClick={() => {\n                setAppState({\n                  ...calculateScrollCenter(elements, appState, canvas),\n                });\n              }}\n            >\n              {t(\"buttons.scrollBackToContent\")}\n            </button>\n          )}\n        </footer>\n      </Island>\n    </div>\n  </>\n);\n","import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\n\nexport const ErrorDialog = ({\n  message,\n  onClose,\n}: {\n  message: string;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={500}\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div>{message}</div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport oc from \"open-color\";\nimport { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { Dialog } from \"./Dialog\";\nimport { getShortcutKey } from \"../utils\";\n\nconst Columns = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst Column = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      width: \"49%\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst ShortcutIsland = (props: {\n  caption: string;\n  children: React.ReactNode;\n}) => (\n  <div\n    style={{\n      border: `1px solid ${oc.gray[4]}`,\n      marginBottom: \"16px\",\n    }}\n  >\n    <h3\n      style={{\n        margin: \"0\",\n        padding: \"4px\",\n        backgroundColor: oc.gray[2],\n        textAlign: \"center\",\n      }}\n    >\n      {props.caption}\n    </h3>\n    {props.children}\n  </div>\n);\n\nconst Shortcut = (props: {\n  label: string;\n  shortcuts: string[];\n  isOr: boolean;\n}) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n  return (\n    <div\n      style={{\n        borderTop: `1px solid ${oc.gray[4]}`,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0\",\n          padding: \"4px 8px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            lineHeight: 1.4,\n          }}\n        >\n          {props.label}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"0 0 auto\",\n            justifyContent: \"flex-end\",\n            marginLeft: isRTL ? \"0em\" : \"auto\",\n            marginRight: isRTL ? \"auto\" : \"0em\",\n            minWidth: \"30%\",\n          }}\n        >\n          {props.shortcuts.map((shortcut, index) => (\n            <React.Fragment key={index}>\n              <ShortcutKey>{shortcut}</ShortcutKey>\n              {props.isOr &&\n                index !== props.shortcuts.length - 1 &&\n                t(\"shortcutsDialog.or\")}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShortcut.defaultProps = {\n  isOr: true,\n};\n\nconst ShortcutKey = (props: { children: React.ReactNode }) => (\n  <span\n    style={{\n      wordBreak: \"keep-all\",\n      border: `1px solid ${oc.gray[4]}`,\n      padding: \"2px 8px\",\n      margin: \"auto 4px\",\n      backgroundColor: oc.gray[2],\n      borderRadius: \"2px\",\n      fontSize: \"0.8em\",\n      minHeight: \"26px\",\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      alignItems: \"center\",\n    }}\n    {...props}\n  />\n);\n\nconst Footer = () => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      borderTop: `1px solid ${oc.gray[4]}`,\n      marginTop: 8,\n      paddingTop: 16,\n    }}\n  >\n    <a\n      href=\"https://blog.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.blog\")}\n    </a>\n    <a\n      href=\"https://howto.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.howto\")}\n    </a>\n    <a\n      href=\"https://github.com/excalidraw/excalidraw/issues\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.github\")}\n    </a>\n  </div>\n);\n\nexport const ShortcutsDialog = ({ onClose }: { onClose?: () => void }) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      <Dialog\n        maxWidth={900}\n        onCloseRequest={handleClose}\n        title={t(\"shortcutsDialog.title\")}\n      >\n        <Columns>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.shapes\")}>\n              <Shortcut label={t(\"toolBar.selection\")} shortcuts={[\"S\", \"1\"]} />\n              <Shortcut label={t(\"toolBar.rectangle\")} shortcuts={[\"R\", \"2\"]} />\n              <Shortcut label={t(\"toolBar.diamond\")} shortcuts={[\"D\", \"3\"]} />\n              <Shortcut label={t(\"toolBar.ellipse\")} shortcuts={[\"E\", \"4\"]} />\n              <Shortcut label={t(\"toolBar.arrow\")} shortcuts={[\"A\", \"5\"]} />\n              <Shortcut label={t(\"toolBar.line\")} shortcuts={[\"L\", \"6\"]} />\n              <Shortcut label={t(\"toolBar.draw\")} shortcuts={[\"X\", \"7\"]} />\n              <Shortcut label={t(\"toolBar.text\")} shortcuts={[\"T\", \"8\"]} />\n              <Shortcut\n                label={t(\"shortcutsDialog.textNewLine\")}\n                shortcuts={[\n                  getShortcutKey(\"Enter\"),\n                  getShortcutKey(\"Shift+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.textFinish\")}\n                shortcuts={[\n                  getShortcutKey(\"Esc\"),\n                  getShortcutKey(\"CtrlOrCmd+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedArrow\")}\n                shortcuts={[\n                  \"A\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedLine\")}\n                shortcuts={[\n                  \"L\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut label={t(\"toolBar.lock\")} shortcuts={[\"Q\"]} />\n            </ShortcutIsland>\n            <ShortcutIsland caption={t(\"shortcutsDialog.view\")}>\n              <Shortcut\n                label={t(\"buttons.zoomIn\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd++\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.zoomOut\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+-\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.resetZoom\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+0\")]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.zoomToFit\")}\n                shortcuts={[\"Shift+1\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleFullScreen\")}\n                shortcuts={[\"F\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleZenMode\")}\n                shortcuts={[getShortcutKey(\"Alt+Z\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.editor\")}>\n              <Shortcut\n                label={t(\"labels.selectAll\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+A\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copy\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.paste\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyAsPng\")}\n                shortcuts={[getShortcutKey(\"Shift+Alt+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.pasteStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.delete\")}\n                shortcuts={[getShortcutKey(\"Del\")]}\n              />\n              <Shortcut\n                label={t(\"labels.sendToBack\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.bringToFront\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.sendBackward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+[\")]}\n              />\n              <Shortcut\n                label={t(\"labels.bringForward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+]\")]}\n              />\n              <Shortcut\n                label={t(\"labels.duplicateSelection\")}\n                shortcuts={[\n                  getShortcutKey(\"CtrlOrCmd+D\"),\n                  getShortcutKey(`Alt+${t(\"shortcutsDialog.drag\")}`),\n                ]}\n              />\n              <Shortcut\n                label={t(\"buttons.undo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Z\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.redo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Z\")]}\n              />\n              <Shortcut\n                label={t(\"labels.group\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+G\")]}\n              />\n              <Shortcut\n                label={t(\"labels.ungroup\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+G\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n        </Columns>\n        <Footer />\n      </Dialog>\n    </>\n  );\n};\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// https://github.com/tholman/github-corners\nexport const GitHubCorner = React.memo(() => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 250 250\"\n    className=\"github-corner rtl-mirror\"\n  >\n    <a\n      href=\"https://github.com/excalidraw/excalidraw\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      aria-label=\"GitHub repository\"\n    >\n      <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill={oc.gray[6]} />\n      <path\n        className=\"octo-arm\"\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n        style={{ transformOrigin: \"130px 106px\" }}\n        fill={oc.white}\n      />\n      <path\n        className=\"octo-body\"\n        d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\"\n        fill={oc.white}\n      />\n    </a>\n  </svg>\n));\n","import React from \"react\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { exportCanvas } from \"../data\";\n\nimport { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport { Island } from \"./Island\";\nimport Stack from \"./Stack\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { LockIcon } from \"./LockIcon\";\nimport { ExportDialog, ExportCB } from \"./ExportDialog\";\nimport { LanguageList } from \"./LanguageList\";\nimport { t, languages, setLanguage } from \"../i18n\";\nimport { HintViewer } from \"./HintViewer\";\nimport useIsMobile from \"../is-mobile\";\n\nimport { ExportType } from \"../scene/types\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { ZoomActions, SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ShortcutsDialog } from \"./ShortcutsDialog\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { CLASSES } from \"../constants\";\nimport { shield } from \"./icons\";\nimport { GitHubCorner } from \"./GitHubCorner\";\n\nimport \"./LayerUI.scss\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  canvas: HTMLCanvasElement | null;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n  zenModeEnabled: boolean;\n  toggleZenMode: () => void;\n  lng: string;\n}\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  setAppState,\n  canvas,\n  elements,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n  zenModeEnabled,\n  toggleZenMode,\n}: LayerUIProps) => {\n  const isMobile = useIsMobile();\n\n  const renderEncryptedIcon = () => (\n    <a\n      className={`encrypted-icon tooltip zen-mode-visibility ${\n        zenModeEnabled ? \"zen-mode-visibility--hidden\" : \"\"\n      }`}\n      href=\"https://blog.excalidraw.com/end-to-end-encryption/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <span className=\"tooltip-text\" dir=\"auto\">\n        {t(\"encrypted.tooltip\")}\n      </span>\n      {shield}\n    </a>\n  );\n\n  const renderExportDialog = () => {\n    const createExporter = (type: ExportType): ExportCB => (\n      exportedElements,\n      scale,\n    ) => {\n      if (canvas) {\n        exportCanvas(type, exportedElements, appState, canvas, {\n          exportBackground: appState.exportBackground,\n          name: appState.name,\n          viewBackgroundColor: appState.viewBackgroundColor,\n          scale,\n          shouldAddWatermark: appState.shouldAddWatermark,\n        });\n      }\n    };\n    return (\n      <ExportDialog\n        elements={elements}\n        appState={appState}\n        actionManager={actionManager}\n        onExportToPng={createExporter(\"png\")}\n        onExportToSvg={createExporter(\"svg\")}\n        onExportToClipboard={createExporter(\"clipboard\")}\n        onExportToBackend={(exportedElements) => {\n          if (canvas) {\n            exportCanvas(\n              \"backend\",\n              exportedElements,\n              {\n                ...appState,\n                selectedElementIds: {},\n              },\n              canvas,\n              appState,\n            );\n          }\n        }}\n      />\n    );\n  };\n\n  const renderCanvasActions = () => (\n    <Section\n      heading=\"canvasActions\"\n      className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`}\n    >\n      {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n      <Island padding={4} style={{ zIndex: 1 }}>\n        <Stack.Col gap={4}>\n          <Stack.Row gap={1} justifyContent=\"space-between\">\n            {actionManager.renderAction(\"loadScene\")}\n            {actionManager.renderAction(\"saveScene\")}\n            {renderExportDialog()}\n            {actionManager.renderAction(\"clearCanvas\")}\n            <RoomDialog\n              isCollaborating={appState.isCollaborating}\n              collaboratorCount={appState.collaborators.size}\n              username={appState.username}\n              onUsernameChange={onUsernameChange}\n              onRoomCreate={onRoomCreate}\n              onRoomDestroy={onRoomDestroy}\n            />\n          </Stack.Row>\n          {actionManager.renderAction(\"changeViewBackgroundColor\")}\n        </Stack.Col>\n      </Island>\n    </Section>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section\n      heading=\"selectedShapeActions\"\n      className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`}\n    >\n      <Island className={CLASSES.SHAPE_ACTIONS_MENU} padding={4}>\n        <SelectedShapeActions\n          appState={appState}\n          elements={elements}\n          renderAction={actionManager.renderAction}\n          elementType={appState.elementType}\n        />\n      </Island>\n    </Section>\n  );\n\n  const renderFixedSideContainer = () => {\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(\n      appState,\n      elements,\n    );\n    return (\n      <FixedSideContainer side=\"top\">\n        <HintViewer appState={appState} elements={elements} />\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col\n            gap={4}\n            className={zenModeEnabled && \"disable-pointerEvents\"}\n          >\n            {renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          <Section heading=\"shapes\">\n            {(heading) => (\n              <Stack.Col gap={4} align=\"start\">\n                <Stack.Row gap={1}>\n                  <Island padding={1} className={zenModeEnabled && \"zen-mode\"}>\n                    {heading}\n                    <Stack.Row gap={1}>\n                      <ShapesSwitcher\n                        elementType={appState.elementType}\n                        setAppState={setAppState}\n                      />\n                    </Stack.Row>\n                  </Island>\n                  <LockIcon\n                    zenModeEnabled={zenModeEnabled}\n                    checked={appState.elementLocked}\n                    onChange={onLockToggle}\n                    title={t(\"toolBar.lock\")}\n                  />\n                </Stack.Row>\n              </Stack.Col>\n            )}\n          </Section>\n          <div />\n        </div>\n        {\n          <div\n            className={`App-menu App-menu_bottom zen-mode-transition ${\n              zenModeEnabled && \"App-menu_bottom--transition-left\"\n            }`}\n          >\n            <Stack.Col gap={2}>\n              <Section heading=\"canvasActions\">\n                <Island padding={1}>\n                  <ZoomActions\n                    renderAction={actionManager.renderAction}\n                    zoom={appState.zoom}\n                  />\n                </Island>\n                {renderEncryptedIcon()}\n              </Section>\n            </Stack.Col>\n          </div>\n        }\n      </FixedSideContainer>\n    );\n  };\n\n  const renderFooter = () => (\n    <footer role=\"contentinfo\" className=\"layer-ui__wrapper__footer\">\n      <div\n        className={`zen-mode-transition ${\n          zenModeEnabled && \"transition-right disable-pointerEvents\"\n        }`}\n      >\n        <LanguageList\n          onChange={(lng) => {\n            setLanguage(lng);\n            setAppState({});\n          }}\n          languages={languages}\n          floating\n        />\n        {actionManager.renderAction(\"toggleShortcuts\")}\n      </div>\n      <button\n        className={`disable-zen-mode ${\n          zenModeEnabled && \"disable-zen-mode--visible\"\n        }`}\n        onClick={toggleZenMode}\n      >\n        {t(\"buttons.exitZenMode\")}\n      </button>\n      {appState.scrolledOutside && (\n        <button\n          className=\"scroll-back-to-content\"\n          onClick={() => {\n            setAppState({\n              ...calculateScrollCenter(elements, appState, canvas),\n            });\n          }}\n        >\n          {t(\"buttons.scrollBackToContent\")}\n        </button>\n      )}\n    </footer>\n  );\n\n  return isMobile ? (\n    <MobileMenu\n      appState={appState}\n      elements={elements}\n      actionManager={actionManager}\n      exportButton={renderExportDialog()}\n      setAppState={setAppState}\n      onUsernameChange={onUsernameChange}\n      onRoomCreate={onRoomCreate}\n      onRoomDestroy={onRoomDestroy}\n      onLockToggle={onLockToggle}\n      canvas={canvas}\n    />\n  ) : (\n    <div className=\"layer-ui__wrapper\">\n      {appState.isLoading && <LoadingMessage />}\n      {appState.errorMessage && (\n        <ErrorDialog\n          message={appState.errorMessage}\n          onClose={() => setAppState({ errorMessage: null })}\n        />\n      )}\n      {appState.showShortcutsDialog && (\n        <ShortcutsDialog\n          onClose={() => setAppState({ showShortcutsDialog: null })}\n        />\n      )}\n      {renderFixedSideContainer()}\n      {\n        <aside\n          className={`layer-ui__wrapper__github-corner zen-mode-transition ${\n            zenModeEnabled && \"transition-right\"\n          }`}\n        >\n          <GitHubCorner />\n        </aside>\n      }\n      {renderFooter()}\n    </div>\n  );\n};\n\nconst areEqual = (prev: LayerUIProps, next: LayerUIProps) => {\n  const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n    const {\n      draggingElement,\n      resizingElement,\n      multiElement,\n      editingElement,\n      isResizing,\n      cursorX,\n      cursorY,\n      ...ret\n    } = appState;\n    return ret;\n  };\n  const prevAppState = getNecessaryObj(prev.appState);\n  const nextAppState = getNecessaryObj(next.appState);\n\n  const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n\n  return (\n    prev.lng === next.lng &&\n    prev.elements === next.elements &&\n    keys.every((key) => prevAppState[key] === nextAppState[key])\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n","import React from \"react\";\n\nimport rough from \"roughjs/bin/rough\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { simplify, Point } from \"points-on-curve\";\nimport { FlooredNumber, SocketUpdateData } from \"../types\";\n\nimport {\n  newElement,\n  newTextElement,\n  duplicateElement,\n  resizeTest,\n  isInvisiblySmallElement,\n  isTextElement,\n  textWysiwyg,\n  getCommonBounds,\n  getCursorForResizingElement,\n  getPerfectElementSize,\n  getNormalizedDimensions,\n  getElementMap,\n  getDrawingVersion,\n  getSyncableElements,\n  newLinearElement,\n  resizeElements,\n  getElementWithResizeHandler,\n  canResizeMutlipleElements,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n  getResizeHandlerFromCoords,\n  isNonDeletedElement,\n} from \"../element\";\nimport {\n  getElementsWithinSelection,\n  isOverScrollBars,\n  getElementAtPosition,\n  getElementContainingPosition,\n  getNormalizedZoom,\n  getSelectedElements,\n  globalSceneState,\n  isSomeElementSelected,\n  calculateScrollCenter,\n} from \"../scene\";\nimport {\n  decryptAESGEM,\n  saveToLocalStorage,\n  loadScene,\n  loadFromBlob,\n  SOCKET_SERVER,\n  SocketUpdateDataSource,\n  exportCanvas,\n} from \"../data\";\nimport Portal from \"./Portal\";\n\nimport { renderScene } from \"../renderer\";\nimport { AppState, GestureEvent, Gesture } from \"../types\";\nimport { ExcalidrawElement, ExcalidrawTextElement } from \"../element/types\";\n\nimport { distance2d, isPathALoop } from \"../math\";\n\nimport {\n  isWritableElement,\n  isInputLike,\n  isToolIcon,\n  debounce,\n  distance,\n  resetCursor,\n  viewportCoordsToSceneCoords,\n  sceneCoordsToViewportCoords,\n  setCursorForShape,\n} from \"../utils\";\nimport {\n  KEYS,\n  isArrowKey,\n  getResizeCenterPointKey,\n  getResizeWithSidesSameLengthKey,\n} from \"../keys\";\n\nimport { findShapeByKey, shapesShortcutKeys } from \"../shapes\";\nimport { createHistory, SceneHistory } from \"../history\";\n\nimport ContextMenu from \"./ContextMenu\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport \"../actions\";\nimport { actions } from \"../actions/register\";\n\nimport { ActionResult } from \"../actions/types\";\nimport { getDefaultAppState } from \"../appState\";\nimport { t, getLanguage } from \"../i18n\";\n\nimport {\n  copyToAppClipboard,\n  getClipboardContent,\n  probablySupportsClipboardBlob,\n  probablySupportsClipboardWriteText,\n} from \"../clipboard\";\nimport { normalizeScroll } from \"../scene\";\nimport { getCenter, getDistance } from \"../gesture\";\nimport { createUndoAction, createRedoAction } from \"../actions/actionHistory\";\n\nimport {\n  CURSOR_TYPE,\n  ELEMENT_SHIFT_TRANSLATE_AMOUNT,\n  ELEMENT_TRANSLATE_AMOUNT,\n  POINTER_BUTTON,\n  DRAGGING_THRESHOLD,\n  TEXT_TO_CENTER_SNAP_THRESHOLD,\n  LINE_CONFIRM_THRESHOLD,\n  SCENE,\n  EVENT,\n  ENV,\n  CANVAS_ONLY_ACTIONS,\n} from \"../constants\";\nimport {\n  INITAL_SCENE_UPDATE_TIMEOUT,\n  TAP_TWICE_TIMEOUT,\n  SYNC_FULL_SCENE_INTERVAL_MS,\n} from \"../time_constants\";\n\nimport LayerUI from \"./LayerUI\";\nimport { ScrollBars, SceneState } from \"../scene/types\";\nimport { generateCollaborationLink, getCollaborationLinkData } from \"../data\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { SceneStateCallbackRemover } from \"../scene/globalScene\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { actionFinalize, actionDeleteSelected } from \"../actions\";\nimport {\n  restoreUsernameFromLocalStorage,\n  saveUsernameToLocalStorage,\n} from \"../data/localStorage\";\n\nimport throttle from \"lodash.throttle\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  getSelectedGroupIds,\n  selectGroupsForSelectedElements,\n  isElementInGroup,\n  getSelectedGroupIdForElement,\n} from \"../groups\";\n\n/**\n * @param func handler taking at most single parameter (event).\n */\nconst withBatchedUpdates = <\n  TFunction extends ((event: any) => void) | (() => void)\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) =>\n  ((event) => {\n    unstable_batchedUpdates(func as TFunction, event);\n  }) as TFunction;\n\nconst { history } = createHistory();\n\nlet didTapTwice: boolean = false;\nlet tappedTwiceTimer = 0;\nlet cursorX = 0;\nlet cursorY = 0;\nlet isHoldingSpace: boolean = false;\nlet isPanning: boolean = false;\nlet isDraggingScrollBar: boolean = false;\nlet currentScrollBars: ScrollBars = { horizontal: null, vertical: null };\n\nlet lastPointerUp: ((event: any) => void) | null = null;\nconst gesture: Gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nclass App extends React.Component<any, AppState> {\n  canvas: HTMLCanvasElement | null = null;\n  rc: RoughCanvas | null = null;\n  portal: Portal = new Portal(this);\n  lastBroadcastedOrReceivedSceneVersion: number = -1;\n  broadcastedElementVersions: Map<string, number> = new Map();\n  removeSceneCallback: SceneStateCallbackRemover | null = null;\n  unmounted: boolean = false;\n  actionManager: ActionManager;\n\n  public state: AppState = {\n    ...getDefaultAppState(),\n    isLoading: true,\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.actionManager = new ActionManager(\n      this.syncActionResult,\n      () => this.state,\n      () => globalSceneState.getElementsIncludingDeleted(),\n    );\n    this.actionManager.registerAll(actions);\n\n    this.actionManager.registerAction(createUndoAction(history));\n    this.actionManager.registerAction(createRedoAction(history));\n  }\n\n  public render() {\n    const { zenModeEnabled } = this.state;\n    const canvasDOMWidth = window.innerWidth;\n    const canvasDOMHeight = window.innerHeight;\n\n    const canvasScale = window.devicePixelRatio;\n\n    const canvasWidth = canvasDOMWidth * canvasScale;\n    const canvasHeight = canvasDOMHeight * canvasScale;\n\n    return (\n      <div className=\"container\">\n        <LayerUI\n          canvas={this.canvas}\n          appState={this.state}\n          setAppState={this.setAppState}\n          actionManager={this.actionManager}\n          elements={globalSceneState.getElements()}\n          onRoomCreate={this.openPortal}\n          onRoomDestroy={this.closePortal}\n          onUsernameChange={(username) => {\n            saveUsernameToLocalStorage(username);\n            this.setState({\n              username,\n            });\n          }}\n          onLockToggle={this.toggleLock}\n          zenModeEnabled={zenModeEnabled}\n          toggleZenMode={this.toggleZenMode}\n          lng={getLanguage().lng}\n        />\n        <main>\n          <canvas\n            id=\"canvas\"\n            style={{\n              width: canvasDOMWidth,\n              height: canvasDOMHeight,\n            }}\n            width={canvasWidth}\n            height={canvasHeight}\n            ref={this.handleCanvasRef}\n            onContextMenu={this.handleCanvasContextMenu}\n            onPointerDown={this.handleCanvasPointerDown}\n            onDoubleClick={this.handleCanvasDoubleClick}\n            onPointerMove={this.handleCanvasPointerMove}\n            onPointerUp={this.removePointer}\n            onPointerCancel={this.removePointer}\n            onDrop={this.handleCanvasOnDrop}\n          >\n            {t(\"labels.drawingCanvas\")}\n          </canvas>\n        </main>\n      </div>\n    );\n  }\n\n  private syncActionResult = withBatchedUpdates((res: ActionResult) => {\n    if (this.unmounted) {\n      return;\n    }\n\n    let editingElement: AppState[\"editingElement\"] | null = null;\n    if (res.elements) {\n      res.elements.forEach((element) => {\n        if (\n          this.state.editingElement?.id === element.id &&\n          this.state.editingElement !== element &&\n          isNonDeletedElement(element)\n        ) {\n          editingElement = element;\n        }\n      });\n      globalSceneState.replaceAllElements(res.elements);\n      if (res.commitToHistory) {\n        history.resumeRecording();\n      }\n    }\n\n    if (res.appState || editingElement) {\n      if (res.commitToHistory) {\n        history.resumeRecording();\n      }\n      this.setState(\n        (state) => ({\n          ...res.appState,\n          editingElement:\n            editingElement || res.appState?.editingElement || null,\n          isCollaborating: state.isCollaborating,\n          collaborators: state.collaborators,\n        }),\n        () => {\n          if (res.syncHistory) {\n            history.setCurrentState(\n              this.state,\n              globalSceneState.getElementsIncludingDeleted(),\n            );\n          }\n        },\n      );\n    }\n  });\n\n  // Lifecycle\n\n  private onBlur = withBatchedUpdates(() => {\n    isHoldingSpace = false;\n    this.saveDebounced();\n    this.saveDebounced.flush();\n  });\n\n  private onUnload = () => {\n    this.destroySocketClient();\n    this.onBlur();\n  };\n\n  private disableEvent: EventHandlerNonNull = (event) => {\n    event.preventDefault();\n  };\n\n  private onFontLoaded = () => {\n    globalSceneState.getElementsIncludingDeleted().forEach((element) => {\n      if (isTextElement(element)) {\n        invalidateShapeForElement(element);\n      }\n    });\n    this.onSceneUpdated();\n  };\n\n  private initializeScene = async () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const id = searchParams.get(\"id\");\n    const jsonMatch = window.location.hash.match(\n      /^#json=([0-9]+),([a-zA-Z0-9_-]+)$/,\n    );\n\n    const isCollaborationScene = getCollaborationLinkData(window.location.href);\n\n    if (!isCollaborationScene) {\n      let scene: ResolutionType<typeof loadScene> | undefined;\n      // Backwards compatibility with legacy url format\n      if (id) {\n        scene = await loadScene(id);\n      } else if (jsonMatch) {\n        scene = await loadScene(jsonMatch[1], jsonMatch[2]);\n      } else {\n        scene = await loadScene(null);\n      }\n      if (scene) {\n        this.syncActionResult(scene);\n      }\n    }\n\n    if (this.state.isLoading) {\n      this.setState({ isLoading: false });\n    }\n\n    // run this last else the `isLoading` state\n    if (isCollaborationScene) {\n      this.initializeSocketClient({ showLoadingState: true });\n    }\n  };\n\n  public async componentDidMount() {\n    if (\n      process.env.NODE_ENV === ENV.TEST ||\n      process.env.NODE_ENV === ENV.DEVELOPMENT\n    ) {\n      const setState = this.setState.bind(this);\n      Object.defineProperties(window.h, {\n        state: {\n          configurable: true,\n          get: () => {\n            return this.state;\n          },\n        },\n        setState: {\n          configurable: true,\n          value: (...args: Parameters<typeof setState>) => {\n            return this.setState(...args);\n          },\n        },\n        app: {\n          configurable: true,\n          value: this,\n        },\n      });\n    }\n\n    this.removeSceneCallback = globalSceneState.addCallback(\n      this.onSceneUpdated,\n    );\n\n    this.addEventListeners();\n    this.initializeScene();\n  }\n\n  public componentWillUnmount() {\n    this.unmounted = true;\n    this.removeSceneCallback!();\n    this.removeEventListeners();\n  }\n\n  private onResize = withBatchedUpdates(() => {\n    globalSceneState\n      .getElementsIncludingDeleted()\n      .forEach((element) => invalidateShapeForElement(element));\n    this.setState({});\n  });\n\n  private removeEventListeners() {\n    document.removeEventListener(EVENT.COPY, this.onCopy);\n    document.removeEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.removeEventListener(EVENT.CUT, this.onCut);\n\n    document.removeEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.removeEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n      false,\n    );\n    document.removeEventListener(EVENT.KEYUP, this.onKeyUp);\n    window.removeEventListener(EVENT.RESIZE, this.onResize, false);\n    window.removeEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.removeEventListener(EVENT.BLUR, this.onBlur, false);\n    window.removeEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.removeEventListener(EVENT.DROP, this.disableEvent, false);\n\n    document.removeEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.removeEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n  }\n\n  private addEventListeners() {\n    document.addEventListener(EVENT.COPY, this.onCopy);\n    document.addEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.addEventListener(EVENT.CUT, this.onCut);\n\n    document.addEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.addEventListener(EVENT.KEYUP, this.onKeyUp, { passive: true });\n    document.addEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n    );\n    window.addEventListener(EVENT.RESIZE, this.onResize, false);\n    window.addEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.addEventListener(EVENT.BLUR, this.onBlur, false);\n    window.addEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.addEventListener(EVENT.DROP, this.disableEvent, false);\n\n    // rerender text elements on font load to fix #637 && #1553\n    document.fonts?.addEventListener?.(\"loadingdone\", this.onFontLoaded);\n\n    // Safari-only desktop pinch zoom\n    document.addEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.addEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n  }\n\n  private beforeUnload = withBatchedUpdates((event: BeforeUnloadEvent) => {\n    if (\n      this.state.isCollaborating &&\n      globalSceneState.getElements().length > 0\n    ) {\n      event.preventDefault();\n      // NOTE: modern browsers no longer allow showing a custom message here\n      event.returnValue = \"\";\n    }\n  });\n\n  queueBroadcastAllElements = throttle(() => {\n    this.broadcastScene(SCENE.UPDATE, /* syncAll */ true);\n  }, SYNC_FULL_SCENE_INTERVAL_MS);\n\n  componentDidUpdate() {\n    if (this.state.isCollaborating && !this.portal.socket) {\n      this.initializeSocketClient({ showLoadingState: true });\n    }\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.selectedElementIds[this.state.editingLinearElement.elementId]\n    ) {\n      // defer so that the commitToHistory flag isn't reset via current update\n      setTimeout(() => {\n        this.actionManager.executeAction(actionFinalize);\n      });\n    }\n\n    const cursorButton: {\n      [id: string]: string | undefined;\n    } = {};\n    const pointerViewportCoords: SceneState[\"remotePointerViewportCoords\"] = {};\n    const remoteSelectedElementIds: SceneState[\"remoteSelectedElementIds\"] = {};\n    const pointerUsernames: { [id: string]: string } = {};\n    this.state.collaborators.forEach((user, socketID) => {\n      if (user.selectedElementIds) {\n        for (const id of Object.keys(user.selectedElementIds)) {\n          if (!(id in remoteSelectedElementIds)) {\n            remoteSelectedElementIds[id] = [];\n          }\n          remoteSelectedElementIds[id].push(socketID);\n        }\n      }\n      if (!user.pointer) {\n        return;\n      }\n      if (user.username) {\n        pointerUsernames[socketID] = user.username;\n      }\n      pointerViewportCoords[socketID] = sceneCoordsToViewportCoords(\n        {\n          sceneX: user.pointer.x,\n          sceneY: user.pointer.y,\n        },\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n      cursorButton[socketID] = user.button;\n    });\n    const elements = globalSceneState.getElements();\n    const { atLeastOneVisibleElement, scrollBars } = renderScene(\n      elements.filter((element) => {\n        // don't render text element that's being currently edited (it's\n        //  rendered on remote only)\n        return (\n          !this.state.editingElement ||\n          this.state.editingElement.type !== \"text\" ||\n          element.id !== this.state.editingElement.id\n        );\n      }),\n      this.state,\n      this.state.selectionElement,\n      window.devicePixelRatio,\n      this.rc!,\n      this.canvas!,\n      {\n        scrollX: this.state.scrollX,\n        scrollY: this.state.scrollY,\n        viewBackgroundColor: this.state.viewBackgroundColor,\n        zoom: this.state.zoom,\n        remotePointerViewportCoords: pointerViewportCoords,\n        remotePointerButton: cursorButton,\n        remoteSelectedElementIds: remoteSelectedElementIds,\n        remotePointerUsernames: pointerUsernames,\n        shouldCacheIgnoreZoom: this.state.shouldCacheIgnoreZoom,\n      },\n      {\n        renderOptimizations: true,\n      },\n    );\n    if (scrollBars) {\n      currentScrollBars = scrollBars;\n    }\n    const scrolledOutside = !atLeastOneVisibleElement && elements.length > 0;\n    if (this.state.scrolledOutside !== scrolledOutside) {\n      this.setState({ scrolledOutside: scrolledOutside });\n    }\n    this.saveDebounced();\n\n    if (\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()) >\n      this.lastBroadcastedOrReceivedSceneVersion\n    ) {\n      this.broadcastScene(SCENE.UPDATE, /* syncAll */ false);\n      this.queueBroadcastAllElements();\n    }\n\n    history.record(this.state, globalSceneState.getElementsIncludingDeleted());\n  }\n\n  // Copy/paste\n\n  private onCut = withBatchedUpdates((event: ClipboardEvent) => {\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    this.actionManager.executeAction(actionDeleteSelected);\n    event.preventDefault();\n  });\n\n  private onCopy = withBatchedUpdates((event: ClipboardEvent) => {\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    event.preventDefault();\n  });\n\n  private copyAll = () => {\n    copyToAppClipboard(globalSceneState.getElements(), this.state);\n  };\n\n  private copyToClipboardAsPng = () => {\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    exportCanvas(\n      \"clipboard\",\n      selectedElements.length ? selectedElements : elements,\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private copyToClipboardAsSvg = () => {\n    const selectedElements = getSelectedElements(\n      globalSceneState.getElements(),\n      this.state,\n    );\n    exportCanvas(\n      \"clipboard-svg\",\n      selectedElements.length\n        ? selectedElements\n        : globalSceneState.getElements(),\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private static resetTapTwice() {\n    didTapTwice = false;\n  }\n\n  private onTapStart = (event: TouchEvent) => {\n    if (!didTapTwice) {\n      didTapTwice = true;\n      clearTimeout(tappedTwiceTimer);\n      tappedTwiceTimer = window.setTimeout(\n        App.resetTapTwice,\n        TAP_TWICE_TIMEOUT,\n      );\n      return;\n    }\n    // insert text only if we tapped twice with a single finger\n    // event.touches.length === 1 will also prevent inserting text when user's zooming\n    if (didTapTwice && event.touches.length === 1) {\n      const [touch] = event.touches;\n      // @ts-ignore\n      this.handleCanvasDoubleClick({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n      });\n      didTapTwice = false;\n      clearTimeout(tappedTwiceTimer);\n    }\n    event.preventDefault();\n  };\n\n  private pasteFromClipboard = withBatchedUpdates(\n    async (event: ClipboardEvent | null) => {\n      // #686\n      const target = document.activeElement;\n      const elementUnderCursor = document.elementFromPoint(cursorX, cursorY);\n      if (\n        // if no ClipboardEvent supplied, assume we're pasting via contextMenu\n        //  thus these checks don't make sense\n        event &&\n        (!(elementUnderCursor instanceof HTMLCanvasElement) ||\n          isWritableElement(target))\n      ) {\n        return;\n      }\n      const data = await getClipboardContent(event);\n      if (data.elements) {\n        this.addElementsFromPaste(data.elements);\n      } else if (data.text) {\n        this.addTextFromPaste(data.text);\n      }\n      this.selectShapeTool(\"selection\");\n      event?.preventDefault();\n    },\n  );\n\n  private addElementsFromPaste = (\n    clipboardElements: readonly ExcalidrawElement[],\n  ) => {\n    const [minX, minY, maxX, maxY] = getCommonBounds(clipboardElements);\n\n    const elementsCenterX = distance(minX, maxX) / 2;\n    const elementsCenterY = distance(minY, maxY) / 2;\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const dx = x - elementsCenterX;\n    const dy = y - elementsCenterY;\n    const groupIdMap = new Map();\n\n    const newElements = clipboardElements.map((element) =>\n      duplicateElement(this.state.editingGroupId, groupIdMap, element, {\n        x: element.x + dx - minX,\n        y: element.y + dy - minY,\n      }),\n    );\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      ...newElements,\n    ]);\n    history.resumeRecording();\n    this.setState({\n      selectedElementIds: newElements.reduce((map, element) => {\n        map[element.id] = true;\n        return map;\n      }, {} as any),\n    });\n  };\n\n  private addTextFromPaste(text: any) {\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const element = newTextElement({\n      x: x,\n      y: y,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      text: text,\n      fontSize: this.state.currentItemFontSize,\n      fontFamily: this.state.currentItemFontFamily,\n      textAlign: this.state.currentItemTextAlign,\n    });\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      element,\n    ]);\n    this.setState({ selectedElementIds: { [element.id]: true } });\n    history.resumeRecording();\n  }\n\n  // Collaboration\n\n  setAppState = (obj: any) => {\n    this.setState(obj);\n  };\n\n  removePointer = (event: React.PointerEvent<HTMLElement>) => {\n    gesture.pointers.delete(event.pointerId);\n  };\n\n  openPortal = async () => {\n    window.history.pushState(\n      {},\n      \"Excalidraw\",\n      await generateCollaborationLink(),\n    );\n    this.initializeSocketClient({ showLoadingState: false });\n  };\n\n  closePortal = () => {\n    window.history.pushState({}, \"Excalidraw\", window.location.origin);\n    this.destroySocketClient();\n  };\n\n  toggleLock = () => {\n    this.setState((prevState) => ({\n      elementLocked: !prevState.elementLocked,\n      elementType: prevState.elementLocked\n        ? \"selection\"\n        : prevState.elementType,\n    }));\n  };\n\n  toggleZenMode = () => {\n    this.setState({\n      zenModeEnabled: !this.state.zenModeEnabled,\n    });\n  };\n\n  private destroySocketClient = () => {\n    this.setState({\n      isCollaborating: false,\n      collaborators: new Map(),\n    });\n    this.portal.close();\n  };\n\n  private initializeSocketClient = async (opts: {\n    showLoadingState: boolean;\n  }) => {\n    if (this.portal.socket) {\n      return;\n    }\n    const roomMatch = getCollaborationLinkData(window.location.href);\n    if (roomMatch) {\n      const initialize = () => {\n        this.portal.socketInitialized = true;\n        clearTimeout(initializationTimer);\n        if (this.state.isLoading && !this.unmounted) {\n          this.setState({ isLoading: false });\n        }\n      };\n      // fallback in case you're not alone in the room but still don't receive\n      //  initial SCENE_UPDATE message\n      const initializationTimer = setTimeout(\n        initialize,\n        INITAL_SCENE_UPDATE_TIMEOUT,\n      );\n\n      const updateScene = (\n        decryptedData: SocketUpdateDataSource[SCENE.INIT | SCENE.UPDATE],\n        { scrollToContent = false }: { scrollToContent?: boolean } = {},\n      ) => {\n        const { elements: remoteElements } = decryptedData.payload;\n\n        if (scrollToContent) {\n          this.setState({\n            ...this.state,\n            ...calculateScrollCenter(\n              remoteElements.filter((element: { isDeleted: boolean }) => {\n                return !element.isDeleted;\n              }),\n              this.state,\n              this.canvas,\n            ),\n          });\n        }\n\n        // Perform reconciliation - in collaboration, if we encounter\n        // elements with more staler versions than ours, ignore them\n        // and keep ours.\n        if (\n          globalSceneState.getElementsIncludingDeleted() == null ||\n          globalSceneState.getElementsIncludingDeleted().length === 0\n        ) {\n          globalSceneState.replaceAllElements(remoteElements);\n        } else {\n          // create a map of ids so we don't have to iterate\n          // over the array more than once.\n          const localElementMap = getElementMap(\n            globalSceneState.getElementsIncludingDeleted(),\n          );\n\n          // Reconcile\n          const newElements = remoteElements\n            .reduce((elements, element) => {\n              // if the remote element references one that's currently\n              //  edited on local, skip it (it'll be added in the next\n              //  step)\n              if (\n                element.id === this.state.editingElement?.id ||\n                element.id === this.state.resizingElement?.id ||\n                element.id === this.state.draggingElement?.id\n              ) {\n                return elements;\n              }\n\n              if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version > element.version\n              ) {\n                elements.push(localElementMap[element.id]);\n                delete localElementMap[element.id];\n              } else if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version === element.version &&\n                localElementMap[element.id].versionNonce !==\n                  element.versionNonce\n              ) {\n                // resolve conflicting edits deterministically by taking the one with the lowest versionNonce\n                if (\n                  localElementMap[element.id].versionNonce <\n                  element.versionNonce\n                ) {\n                  elements.push(localElementMap[element.id]);\n                } else {\n                  // it should be highly unlikely that the two versionNonces are the same. if we are\n                  // really worried about this, we can replace the versionNonce with the socket id.\n                  elements.push(element);\n                }\n                delete localElementMap[element.id];\n              } else {\n                elements.push(element);\n                delete localElementMap[element.id];\n              }\n\n              return elements;\n            }, [] as Mutable<typeof remoteElements>)\n            // add local elements that weren't deleted or on remote\n            .concat(...Object.values(localElementMap));\n\n          // Avoid broadcasting to the rest of the collaborators the scene\n          // we just received!\n          // Note: this needs to be set before replaceAllElements as it\n          // syncronously calls render.\n          this.lastBroadcastedOrReceivedSceneVersion = getDrawingVersion(\n            newElements,\n          );\n\n          globalSceneState.replaceAllElements(newElements);\n        }\n\n        // We haven't yet implemented multiplayer undo functionality, so we clear the undo stack\n        // when we receive any messages from another peer. This UX can be pretty rough -- if you\n        // undo, a user makes a change, and then try to redo, your element(s) will be lost. However,\n        // right now we think this is the right tradeoff.\n        history.clear();\n        if (!this.portal.socketInitialized) {\n          initialize();\n        }\n      };\n\n      const { default: socketIOClient }: any = await import(\n        /* webpackChunkName: \"socketIoClient\" */ \"socket.io-client\"\n      );\n\n      this.portal.open(\n        socketIOClient(SOCKET_SERVER),\n        roomMatch[1],\n        roomMatch[2],\n      );\n\n      // All socket listeners are moving to Portal\n      this.portal.socket!.on(\n        \"client-broadcast\",\n        async (encryptedData: ArrayBuffer, iv: Uint8Array) => {\n          if (!this.portal.roomKey) {\n            return;\n          }\n          const decryptedData = await decryptAESGEM(\n            encryptedData,\n            this.portal.roomKey,\n            iv,\n          );\n\n          switch (decryptedData.type) {\n            case \"INVALID_RESPONSE\":\n              return;\n            case SCENE.INIT: {\n              if (!this.portal.socketInitialized) {\n                updateScene(decryptedData, { scrollToContent: true });\n              }\n              break;\n            }\n            case SCENE.UPDATE:\n              updateScene(decryptedData);\n              break;\n            case \"MOUSE_LOCATION\": {\n              const {\n                socketID,\n                pointerCoords,\n                button,\n                username,\n                selectedElementIds,\n              } = decryptedData.payload;\n              this.setState((state) => {\n                if (!state.collaborators.has(socketID)) {\n                  state.collaborators.set(socketID, {});\n                }\n                const user = state.collaborators.get(socketID)!;\n                user.pointer = pointerCoords;\n                user.button = button;\n                user.selectedElementIds = selectedElementIds;\n                user.username = username;\n                state.collaborators.set(socketID, user);\n                return state;\n              });\n              break;\n            }\n          }\n        },\n      );\n      this.portal.socket!.on(\"first-in-room\", () => {\n        if (this.portal.socket) {\n          this.portal.socket.off(\"first-in-room\");\n        }\n        initialize();\n      });\n\n      this.setState({\n        isCollaborating: true,\n        isLoading: opts.showLoadingState ? true : this.state.isLoading,\n      });\n    }\n  };\n\n  // Portal-only\n  setCollaborators(sockets: string[]) {\n    this.setState((state) => {\n      const collaborators: typeof state.collaborators = new Map();\n      for (const socketID of sockets) {\n        if (state.collaborators.has(socketID)) {\n          collaborators.set(socketID, state.collaborators.get(socketID)!);\n        } else {\n          collaborators.set(socketID, {});\n        }\n      }\n      return {\n        ...state,\n        collaborators,\n      };\n    });\n  }\n\n  private broadcastMouseLocation = (payload: {\n    pointerCoords: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointerCoords\"];\n    button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n  }) => {\n    if (this.portal.socket?.id) {\n      const data: SocketUpdateDataSource[\"MOUSE_LOCATION\"] = {\n        type: \"MOUSE_LOCATION\",\n        payload: {\n          socketID: this.portal.socket.id,\n          pointerCoords: payload.pointerCoords,\n          button: payload.button || \"up\",\n          selectedElementIds: this.state.selectedElementIds,\n          username: this.state.username,\n        },\n      };\n      return this.portal._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n\n  // maybe should move to Portal\n  broadcastScene = (sceneType: SCENE.INIT | SCENE.UPDATE, syncAll: boolean) => {\n    if (sceneType === SCENE.INIT && !syncAll) {\n      throw new Error(\"syncAll must be true when sending SCENE.INIT\");\n    }\n\n    let syncableElements = getSyncableElements(\n      globalSceneState.getElementsIncludingDeleted(),\n    );\n\n    if (!syncAll) {\n      // sync out only the elements we think we need to to save bandwidth.\n      // periodically we'll resync the whole thing to make sure no one diverges\n      // due to a dropped message (server goes down etc).\n      syncableElements = syncableElements.filter(\n        (syncableElement) =>\n          !this.broadcastedElementVersions.has(syncableElement.id) ||\n          syncableElement.version >\n            this.broadcastedElementVersions.get(syncableElement.id)!,\n      );\n    }\n\n    const data: SocketUpdateDataSource[typeof sceneType] = {\n      type: sceneType,\n      payload: {\n        elements: syncableElements,\n      },\n    };\n    this.lastBroadcastedOrReceivedSceneVersion = Math.max(\n      this.lastBroadcastedOrReceivedSceneVersion,\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()),\n    );\n    for (const syncableElement of syncableElements) {\n      this.broadcastedElementVersions.set(\n        syncableElement.id,\n        syncableElement.version,\n      );\n    }\n    return this.portal._broadcastSocketData(data as SocketUpdateData);\n  };\n\n  private onSceneUpdated = () => {\n    this.setState({});\n  };\n\n  private updateCurrentCursorPosition = withBatchedUpdates(\n    (event: MouseEvent) => {\n      cursorX = event.x;\n      cursorY = event.y;\n    },\n  );\n\n  restoreUserName() {\n    const username = restoreUsernameFromLocalStorage();\n\n    if (username !== null) {\n      this.setState({\n        username,\n      });\n    }\n  }\n\n  // Input handling\n\n  private onKeyDown = withBatchedUpdates((event: KeyboardEvent) => {\n    // ensures we don't prevent devTools select-element feature\n    if (event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"C\") {\n      return;\n    }\n\n    if (\n      (isWritableElement(event.target) && event.key !== KEYS.ESCAPE) ||\n      // case: using arrows to move between buttons\n      (isArrowKey(event.key) && isInputLike(event.target))\n    ) {\n      return;\n    }\n\n    if (event.key === KEYS.QUESTION_MARK) {\n      this.setState({\n        showShortcutsDialog: true,\n      });\n    }\n\n    if (\n      !event[KEYS.CTRL_OR_CMD] &&\n      event.altKey &&\n      event.keyCode === KEYS.Z_KEY_CODE\n    ) {\n      this.toggleZenMode();\n    }\n\n    if (event.code === \"KeyC\" && event.altKey && event.shiftKey) {\n      this.copyToClipboardAsPng();\n      event.preventDefault();\n      return;\n    }\n\n    if (this.actionManager.handleKeyDown(event)) {\n      return;\n    }\n\n    const shape = findShapeByKey(event.key);\n\n    if (isArrowKey(event.key)) {\n      const step = event.shiftKey\n        ? ELEMENT_SHIFT_TRANSLATE_AMOUNT\n        : ELEMENT_TRANSLATE_AMOUNT;\n      globalSceneState.replaceAllElements(\n        globalSceneState.getElementsIncludingDeleted().map((el) => {\n          if (this.state.selectedElementIds[el.id]) {\n            const update: { x?: number; y?: number } = {};\n            if (event.key === KEYS.ARROW_LEFT) {\n              update.x = el.x - step;\n            } else if (event.key === KEYS.ARROW_RIGHT) {\n              update.x = el.x + step;\n            } else if (event.key === KEYS.ARROW_UP) {\n              update.y = el.y - step;\n            } else if (event.key === KEYS.ARROW_DOWN) {\n              update.y = el.y + step;\n            }\n            return newElementWith(el, update);\n          }\n          return el;\n        }),\n      );\n      event.preventDefault();\n    } else if (event.key === KEYS.ENTER) {\n      const selectedElements = getSelectedElements(\n        globalSceneState.getElements(),\n        this.state,\n      );\n\n      if (\n        selectedElements.length === 1 &&\n        isLinearElement(selectedElements[0])\n      ) {\n        if (\n          !this.state.editingLinearElement ||\n          this.state.editingLinearElement.elementId !== selectedElements[0].id\n        ) {\n          history.resumeRecording();\n          this.setState({\n            editingLinearElement: new LinearElementEditor(selectedElements[0]),\n          });\n        }\n      } else if (\n        selectedElements.length === 1 &&\n        !isLinearElement(selectedElements[0])\n      ) {\n        const selectedElement = selectedElements[0];\n        const x = selectedElement.x + selectedElement.width / 2;\n        const y = selectedElement.y + selectedElement.height / 2;\n\n        this.startTextEditing({\n          x: x,\n          y: y,\n        });\n        event.preventDefault();\n        return;\n      }\n    } else if (\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      this.state.draggingElement === null\n    ) {\n      if (shapesShortcutKeys.includes(event.key.toLowerCase())) {\n        this.selectShapeTool(shape);\n      } else if (event.key === \"q\") {\n        this.toggleLock();\n      }\n    }\n    if (event.key === KEYS.SPACE && gesture.pointers.size === 0) {\n      isHoldingSpace = true;\n      document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n    }\n  });\n\n  private onKeyUp = withBatchedUpdates((event: KeyboardEvent) => {\n    if (event.key === KEYS.SPACE) {\n      if (this.state.elementType === \"selection\") {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n      }\n      isHoldingSpace = false;\n    }\n  });\n\n  private selectShapeTool(elementType: AppState[\"elementType\"]) {\n    if (!isHoldingSpace) {\n      setCursorForShape(elementType);\n    }\n    if (isToolIcon(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    if (elementType !== \"selection\") {\n      this.setState({\n        elementType,\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    } else {\n      this.setState({ elementType });\n    }\n  }\n\n  private onGestureStart = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    gesture.initialScale = this.state.zoom;\n  });\n\n  private onGestureChange = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      zoom: getNormalizedZoom(gesture.initialScale! * event.scale),\n    });\n  });\n\n  private onGestureEnd = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    gesture.initialScale = null;\n  });\n\n  private setElements = (elements: readonly ExcalidrawElement[]) => {\n    globalSceneState.replaceAllElements(elements);\n  };\n\n  private handleTextWysiwyg(\n    element: ExcalidrawTextElement,\n    {\n      x,\n      y,\n      isExistingElement = false,\n    }: { x: number; y: number; isExistingElement?: boolean },\n  ) {\n    const resetSelection = () => {\n      this.setState({\n        draggingElement: null,\n        editingElement: null,\n      });\n    };\n\n    const deleteElement = () => {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id) {\n            return newElementWith(_element, { isDeleted: true });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    const updateElement = (text: string) => {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id) {\n            return newTextElement({\n              ...(_element as ExcalidrawTextElement),\n              x: element.x,\n              y: element.y,\n              text,\n            });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    textWysiwyg({\n      id: element.id,\n      x,\n      y,\n      initText: element.text,\n      strokeColor: element.strokeColor,\n      opacity: element.opacity,\n      fontSize: element.fontSize,\n      fontFamily: element.fontFamily,\n      angle: element.angle,\n      textAlign: element.textAlign,\n      zoom: this.state.zoom,\n      onChange: withBatchedUpdates((text) => {\n        if (text) {\n          updateElement(text);\n        } else {\n          deleteElement();\n        }\n      }),\n      onSubmit: withBatchedUpdates((text) => {\n        updateElement(text);\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [element.id]: true,\n          },\n        }));\n        if (this.state.elementLocked) {\n          setCursorForShape(this.state.elementType);\n        }\n        history.resumeRecording();\n        resetSelection();\n      }),\n      onCancel: withBatchedUpdates(() => {\n        deleteElement();\n        if (isExistingElement) {\n          history.resumeRecording();\n        }\n        resetSelection();\n      }),\n    });\n    // deselect all other elements when inserting text\n    this.setState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      editingGroupId: null,\n    });\n\n    // do an initial update to re-initialize element position since we were\n    //  modifying element's x/y for sake of editor (case: syncing to remote)\n    updateElement(element.text);\n  }\n\n  private startTextEditing = ({\n    x,\n    y,\n    clientX,\n    clientY,\n    centerIfPossible = true,\n  }: {\n    x: number;\n    y: number;\n    clientX?: number;\n    clientY?: number;\n    centerIfPossible?: boolean;\n  }) => {\n    const elementAtPosition = getElementAtPosition(\n      globalSceneState.getElements(),\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n\n    const element =\n      elementAtPosition && isTextElement(elementAtPosition)\n        ? elementAtPosition\n        : newTextElement({\n            x: x,\n            y: y,\n            strokeColor: this.state.currentItemStrokeColor,\n            backgroundColor: this.state.currentItemBackgroundColor,\n            fillStyle: this.state.currentItemFillStyle,\n            strokeWidth: this.state.currentItemStrokeWidth,\n            strokeStyle: this.state.currentItemStrokeStyle,\n            roughness: this.state.currentItemRoughness,\n            opacity: this.state.currentItemOpacity,\n            text: \"\",\n            fontSize: this.state.currentItemFontSize,\n            fontFamily: this.state.currentItemFontFamily,\n            textAlign: this.state.currentItemTextAlign,\n          });\n\n    this.setState({ editingElement: element });\n\n    let textX = clientX || x;\n    let textY = clientY || y;\n\n    let isExistingTextElement = false;\n\n    if (elementAtPosition && isTextElement(elementAtPosition)) {\n      isExistingTextElement = true;\n      const centerElementX = elementAtPosition.x + elementAtPosition.width / 2;\n      const centerElementY = elementAtPosition.y + elementAtPosition.height / 2;\n\n      const {\n        x: centerElementXInViewport,\n        y: centerElementYInViewport,\n      } = sceneCoordsToViewportCoords(\n        { sceneX: centerElementX, sceneY: centerElementY },\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n      textX = centerElementXInViewport;\n      textY = centerElementYInViewport;\n\n      // x and y will change after calling newTextElement function\n      mutateElement(element, {\n        x: centerElementX,\n        y: centerElementY,\n      });\n    } else {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted(),\n        element,\n      ]);\n\n      if (centerIfPossible) {\n        const snappedToCenterPosition = this.getTextWysiwygSnappedToCenterPosition(\n          x,\n          y,\n          this.state,\n          this.canvas,\n          window.devicePixelRatio,\n        );\n\n        if (snappedToCenterPosition) {\n          mutateElement(element, {\n            x: snappedToCenterPosition.elementCenterX,\n            y: snappedToCenterPosition.elementCenterY,\n          });\n          textX = snappedToCenterPosition.wysiwygX;\n          textY = snappedToCenterPosition.wysiwygY;\n        }\n      }\n    }\n\n    this.setState({\n      editingElement: element,\n    });\n\n    this.handleTextWysiwyg(element, {\n      x: textX,\n      y: textY,\n      isExistingElement: isExistingTextElement,\n    });\n  };\n\n  private handleCanvasDoubleClick = (\n    event: React.MouseEvent<HTMLCanvasElement>,\n  ) => {\n    // case: double-clicking with arrow/line tool selected would both create\n    //  text and enter multiElement mode\n    if (this.state.multiElement) {\n      return;\n    }\n\n    const selectedElements = getSelectedElements(\n      globalSceneState.getElements(),\n      this.state,\n    );\n\n    if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n      if (\n        !this.state.editingLinearElement ||\n        this.state.editingLinearElement.elementId !== selectedElements[0].id\n      ) {\n        history.resumeRecording();\n        this.setState({\n          editingLinearElement: new LinearElementEditor(selectedElements[0]),\n        });\n      }\n      return;\n    }\n\n    resetCursor();\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const selectedGroupIds = getSelectedGroupIds(this.state);\n\n    if (selectedGroupIds.length > 0) {\n      const elements = globalSceneState.getElements();\n      const hitElement = getElementAtPosition(\n        elements,\n        this.state,\n        x,\n        y,\n        this.state.zoom,\n      );\n\n      const selectedGroupId =\n        hitElement &&\n        getSelectedGroupIdForElement(hitElement, this.state.selectedGroupIds);\n\n      if (selectedGroupId) {\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              editingGroupId: selectedGroupId,\n              selectedElementIds: { [hitElement!.id]: true },\n              selectedGroupIds: {},\n            },\n            globalSceneState.getElements(),\n          ),\n        );\n        return;\n      }\n    }\n\n    resetCursor();\n\n    this.startTextEditing({\n      x: x,\n      y: y,\n      clientX: event.clientX,\n      clientY: event.clientY,\n      centerIfPossible: !event.altKey,\n    });\n  };\n\n  private handleCanvasPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.savePointer(event.clientX, event.clientY, this.state.cursorButton);\n\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n\n    if (gesture.pointers.size === 2) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter!.x;\n      const deltaY = center.y - gesture.lastCenter!.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance!;\n\n      this.setState({\n        scrollX: normalizeScroll(this.state.scrollX + deltaX / this.state.zoom),\n        scrollY: normalizeScroll(this.state.scrollY + deltaY / this.state.zoom),\n        zoom: getNormalizedZoom(gesture.initialScale! * scaleFactor),\n        shouldCacheIgnoreZoom: true,\n      });\n      this.resetShouldCacheIgnoreZoomDebounced();\n    } else {\n      gesture.lastCenter = gesture.initialDistance = gesture.initialScale = null;\n    }\n\n    if (isHoldingSpace || isPanning || isDraggingScrollBar) {\n      return;\n    }\n    const {\n      isOverHorizontalScrollBar,\n      isOverVerticalScrollBar,\n    } = isOverScrollBars(currentScrollBars, event.clientX, event.clientY);\n    const isOverScrollBar =\n      isOverVerticalScrollBar || isOverHorizontalScrollBar;\n    if (!this.state.draggingElement && !this.state.multiElement) {\n      if (isOverScrollBar) {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n      }\n    }\n\n    const { x: scenePointerX, y: scenePointerY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    if (\n      this.state.editingLinearElement &&\n      this.state.editingLinearElement.draggingElementPointIndex === null\n    ) {\n      const editingLinearElement = LinearElementEditor.handlePointerMove(\n        event,\n        scenePointerX,\n        scenePointerY,\n        this.state.editingLinearElement,\n      );\n      if (editingLinearElement !== this.state.editingLinearElement) {\n        this.setState({ editingLinearElement });\n      }\n    }\n\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n      const { x: rx, y: ry } = multiElement;\n\n      const { points, lastCommittedPoint } = multiElement;\n      const lastPoint = points[points.length - 1];\n\n      setCursorForShape(this.state.elementType);\n\n      if (lastPoint === lastCommittedPoint) {\n        // if we haven't yet created a temp point and we're beyond commit-zone\n        //  threshold, add a point\n        if (\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastPoint[0],\n            lastPoint[1],\n          ) >= LINE_CONFIRM_THRESHOLD\n        ) {\n          mutateElement(multiElement, {\n            points: [...points, [scenePointerX - rx, scenePointerY - ry]],\n          });\n        } else {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          // in this branch, we're inside the commit zone, and no uncommitted\n          //  point exists. Thus do nothing (don't add/remove points).\n        }\n      } else {\n        // cursor moved inside commit zone, and there's uncommitted point,\n        //  thus remove it\n        if (\n          points.length > 2 &&\n          lastCommittedPoint &&\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastCommittedPoint[0],\n            lastCommittedPoint[1],\n          ) < LINE_CONFIRM_THRESHOLD\n        ) {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          mutateElement(multiElement, {\n            points: points.slice(0, -1),\n          });\n        } else {\n          if (isPathALoop(points)) {\n            document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          }\n          // update last uncommitted point\n          mutateElement(multiElement, {\n            points: [\n              ...points.slice(0, -1),\n              [scenePointerX - rx, scenePointerY - ry],\n            ],\n          });\n        }\n      }\n      return;\n    }\n\n    const hasDeselectedButton = Boolean(event.buttons);\n    if (\n      hasDeselectedButton ||\n      (this.state.elementType !== \"selection\" &&\n        this.state.elementType !== \"text\")\n    ) {\n      return;\n    }\n\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    if (\n      selectedElements.length === 1 &&\n      !isOverScrollBar &&\n      !this.state.editingLinearElement\n    ) {\n      const elementWithResizeHandler = getElementWithResizeHandler(\n        elements,\n        this.state,\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (elementWithResizeHandler && elementWithResizeHandler.resizeHandle) {\n        document.documentElement.style.cursor = getCursorForResizingElement(\n          elementWithResizeHandler,\n        );\n        return;\n      }\n    } else if (selectedElements.length > 1 && !isOverScrollBar) {\n      if (canResizeMutlipleElements(selectedElements)) {\n        const resizeHandle = getResizeHandlerFromCoords(\n          getCommonBounds(selectedElements),\n          scenePointerX,\n          scenePointerY,\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (resizeHandle) {\n          document.documentElement.style.cursor = getCursorForResizingElement({\n            resizeHandle,\n          });\n          return;\n        }\n      }\n    }\n    const hitElement = getElementAtPosition(\n      elements,\n      this.state,\n      scenePointerX,\n      scenePointerY,\n      this.state.zoom,\n    );\n    if (this.state.elementType === \"text\") {\n      document.documentElement.style.cursor = isTextElement(hitElement)\n        ? CURSOR_TYPE.TEXT\n        : CURSOR_TYPE.CROSSHAIR;\n    } else {\n      document.documentElement.style.cursor =\n        hitElement && !isOverScrollBar ? \"move\" : \"\";\n    }\n  };\n\n  private handleCanvasPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.persist();\n\n    if (lastPointerUp !== null) {\n      // Unfortunately, sometimes we don't get a pointerup after a pointerdown,\n      // this can happen when a contextual menu or alert is triggered. In order to avoid\n      // being in a weird state, we clean up on the next pointerdown\n      lastPointerUp(event);\n    }\n\n    if (isPanning) {\n      return;\n    }\n\n    this.setState({\n      lastPointerDownWith: event.pointerType,\n      cursorButton: \"down\",\n    });\n    this.savePointer(event.clientX, event.clientY, \"down\");\n\n    // pan canvas on wheel button drag or space+drag\n    if (\n      gesture.pointers.size === 0 &&\n      (event.button === POINTER_BUTTON.WHEEL ||\n        (event.button === POINTER_BUTTON.MAIN && isHoldingSpace))\n    ) {\n      isPanning = true;\n\n      let nextPastePrevented = false;\n      const isLinux = /Linux/.test(window.navigator.platform);\n\n      document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n      let { clientX: lastX, clientY: lastY } = event;\n      const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n        const deltaX = lastX - event.clientX;\n        const deltaY = lastY - event.clientY;\n        lastX = event.clientX;\n        lastY = event.clientY;\n\n        /*\n         * Prevent paste event if we move while middle clicking on Linux.\n         * See issue #1383.\n         */\n        if (\n          isLinux &&\n          !nextPastePrevented &&\n          (Math.abs(deltaX) > 1 || Math.abs(deltaY) > 1)\n        ) {\n          nextPastePrevented = true;\n\n          /* Prevent the next paste event */\n          const preventNextPaste = (event: ClipboardEvent) => {\n            document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n            event.stopPropagation();\n          };\n\n          /*\n           * Reenable next paste in case of disabled middle click paste for\n           * any reason:\n           * - rigth click paste\n           * - empty clipboard\n           */\n          const enableNextPaste = () => {\n            setTimeout(() => {\n              document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n              window.removeEventListener(EVENT.POINTER_UP, enableNextPaste);\n            }, 100);\n          };\n\n          document.body.addEventListener(EVENT.PASTE, preventNextPaste);\n          window.addEventListener(EVENT.POINTER_UP, enableNextPaste);\n        }\n\n        this.setState({\n          scrollX: normalizeScroll(\n            this.state.scrollX - deltaX / this.state.zoom,\n          ),\n          scrollY: normalizeScroll(\n            this.state.scrollY - deltaY / this.state.zoom,\n          ),\n        });\n      });\n      const teardown = withBatchedUpdates(\n        (lastPointerUp = () => {\n          lastPointerUp = null;\n          isPanning = false;\n          if (!isHoldingSpace) {\n            setCursorForShape(this.state.elementType);\n          }\n          this.setState({\n            cursorButton: \"up\",\n          });\n          this.savePointer(event.clientX, event.clientY, \"up\");\n          window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n          window.removeEventListener(EVENT.POINTER_UP, teardown);\n          window.removeEventListener(EVENT.BLUR, teardown);\n        }),\n      );\n      window.addEventListener(EVENT.BLUR, teardown);\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove, {\n        passive: true,\n      });\n      window.addEventListener(EVENT.POINTER_UP, teardown);\n      return;\n    }\n\n    // only handle left mouse button or touch\n    if (\n      event.button !== POINTER_BUTTON.MAIN &&\n      event.button !== POINTER_BUTTON.TOUCH\n    ) {\n      return;\n    }\n\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = this.state.zoom;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values()),\n      );\n    }\n\n    // fixes pointermove causing selection of UI texts #32\n    event.preventDefault();\n    // Preventing the event above disables default behavior\n    //  of defocusing potentially focused element, which is what we\n    //  want when clicking inside the canvas.\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n\n    // don't select while panning\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n\n    // Handle scrollbars dragging\n    const {\n      isOverHorizontalScrollBar,\n      isOverVerticalScrollBar,\n    } = isOverScrollBars(currentScrollBars, event.clientX, event.clientY);\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n    let lastX = x;\n    let lastY = y;\n\n    if (\n      (isOverHorizontalScrollBar || isOverVerticalScrollBar) &&\n      !this.state.multiElement\n    ) {\n      isDraggingScrollBar = true;\n      lastX = event.clientX;\n      lastY = event.clientY;\n      const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n        const target = event.target;\n        if (!(target instanceof HTMLElement)) {\n          return;\n        }\n\n        if (isOverHorizontalScrollBar) {\n          const x = event.clientX;\n          const dx = x - lastX;\n          this.setState({\n            scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n          });\n          lastX = x;\n          return;\n        }\n\n        if (isOverVerticalScrollBar) {\n          const y = event.clientY;\n          const dy = y - lastY;\n          this.setState({\n            scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n          });\n          lastY = y;\n        }\n      });\n\n      const onPointerUp = withBatchedUpdates(() => {\n        isDraggingScrollBar = false;\n        setCursorForShape(this.state.elementType);\n        lastPointerUp = null;\n        this.setState({\n          cursorButton: \"up\",\n        });\n        this.savePointer(event.clientX, event.clientY, \"up\");\n        window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n        window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n      });\n\n      lastPointerUp = onPointerUp;\n\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n      return;\n    }\n\n    const originX = x;\n    const originY = y;\n\n    type ResizeTestType = ReturnType<typeof resizeTest>;\n    let resizeHandle: ResizeTestType = false;\n    const setResizeHandle = (nextResizeHandle: ResizeTestType) => {\n      resizeHandle = nextResizeHandle;\n    };\n    let resizeOffsetXY: [number, number] = [0, 0];\n    let resizeArrowDirection: \"origin\" | \"end\" = \"origin\";\n    let isResizingElements = false;\n    let draggingOccurred = false;\n    let hitElement: ExcalidrawElement | null = null;\n    let hitElementWasAddedToSelection = false;\n\n    if (this.state.elementType === \"selection\") {\n      const elements = globalSceneState.getElements();\n      const selectedElements = getSelectedElements(elements, this.state);\n      if (selectedElements.length === 1 && !this.state.editingLinearElement) {\n        const elementWithResizeHandler = getElementWithResizeHandler(\n          elements,\n          this.state,\n          x,\n          y,\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (elementWithResizeHandler) {\n          this.setState({\n            resizingElement: elementWithResizeHandler\n              ? elementWithResizeHandler.element\n              : null,\n          });\n          resizeHandle = elementWithResizeHandler.resizeHandle;\n          document.documentElement.style.cursor = getCursorForResizingElement(\n            elementWithResizeHandler,\n          );\n          isResizingElements = true;\n        }\n      } else if (selectedElements.length > 1) {\n        if (canResizeMutlipleElements(selectedElements)) {\n          resizeHandle = getResizeHandlerFromCoords(\n            getCommonBounds(selectedElements),\n            x,\n            y,\n            this.state.zoom,\n            event.pointerType,\n          );\n          if (resizeHandle) {\n            document.documentElement.style.cursor = getCursorForResizingElement(\n              {\n                resizeHandle,\n              },\n            );\n            isResizingElements = true;\n          }\n        }\n      }\n      if (isResizingElements) {\n        resizeOffsetXY = getResizeOffsetXY(\n          resizeHandle,\n          selectedElements,\n          x,\n          y,\n        );\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0]) &&\n          selectedElements[0].points.length === 2\n        ) {\n          resizeArrowDirection = getResizeArrowDirection(\n            resizeHandle,\n            selectedElements[0],\n          );\n        }\n      }\n      if (!isResizingElements) {\n        if (this.state.editingLinearElement) {\n          const ret = LinearElementEditor.handlePointerDown(\n            event,\n            this.state,\n            (appState) => this.setState(appState),\n            history,\n            x,\n            y,\n          );\n          if (ret.hitElement) {\n            hitElement = ret.hitElement;\n          }\n          if (ret.didAddPoint) {\n            return;\n          }\n        }\n\n        // hitElement may already be set above, so check first\n        hitElement =\n          hitElement ||\n          getElementAtPosition(elements, this.state, x, y, this.state.zoom);\n\n        // clear selection if shift is not clicked\n        if (\n          !(hitElement && this.state.selectedElementIds[hitElement.id]) &&\n          !event.shiftKey\n        ) {\n          this.setState((prevState) => ({\n            selectedElementIds: {},\n            selectedGroupIds: {},\n            editingGroupId:\n              prevState.editingGroupId &&\n              hitElement &&\n              isElementInGroup(hitElement, prevState.editingGroupId)\n                ? prevState.editingGroupId\n                : null,\n          }));\n        }\n\n        // If we click on something\n        if (hitElement) {\n          // deselect if item is selected\n          // if shift is not clicked, this will always return true\n          // otherwise, it will trigger selection based on current\n          // state of the box\n          if (!this.state.selectedElementIds[hitElement.id]) {\n            // if we are currently editing a group, treat all selections outside of the group\n            // as exiting editing mode.\n            if (\n              this.state.editingGroupId &&\n              !isElementInGroup(hitElement, this.state.editingGroupId)\n            ) {\n              this.setState({\n                selectedElementIds: {},\n                selectedGroupIds: {},\n                editingGroupId: null,\n              });\n              return;\n            }\n            this.setState((prevState) => {\n              return selectGroupsForSelectedElements(\n                {\n                  ...prevState,\n                  selectedElementIds: {\n                    ...prevState.selectedElementIds,\n                    [hitElement!.id]: true,\n                  },\n                },\n                globalSceneState.getElements(),\n              );\n            });\n            // TODO: this is strange...\n            globalSceneState.replaceAllElements(\n              globalSceneState.getElementsIncludingDeleted(),\n            );\n            hitElementWasAddedToSelection = true;\n          }\n        }\n      }\n    } else {\n      this.setState({\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    }\n\n    if (this.state.elementType === \"text\") {\n      // if we're currently still editing text, clicking outside\n      //  should only finalize it, not create another (irrespective\n      //  of state.elementLocked)\n      if (this.state.editingElement?.type === \"text\") {\n        return;\n      }\n\n      const { x, y } = viewportCoordsToSceneCoords(\n        event,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n      this.startTextEditing({\n        x: x,\n        y: y,\n        clientX: event.clientX,\n        clientY: event.clientY,\n        centerIfPossible: !event.altKey,\n      });\n\n      resetCursor();\n      if (!this.state.elementLocked) {\n        this.setState({\n          elementType: \"selection\",\n        });\n      }\n      return;\n    } else if (\n      this.state.elementType === \"arrow\" ||\n      this.state.elementType === \"draw\" ||\n      this.state.elementType === \"line\"\n    ) {\n      if (this.state.multiElement) {\n        const { multiElement } = this.state;\n\n        // finalize if completing a loop\n        if (multiElement.type === \"line\" && isPathALoop(multiElement.points)) {\n          mutateElement(multiElement, {\n            lastCommittedPoint:\n              multiElement.points[multiElement.points.length - 1],\n          });\n          this.actionManager.executeAction(actionFinalize);\n          return;\n        }\n\n        const { x: rx, y: ry, lastCommittedPoint } = multiElement;\n\n        // clicking inside commit zone → finalize arrow\n        if (\n          multiElement.points.length > 1 &&\n          lastCommittedPoint &&\n          distance2d(\n            x - rx,\n            y - ry,\n            lastCommittedPoint[0],\n            lastCommittedPoint[1],\n          ) < LINE_CONFIRM_THRESHOLD\n        ) {\n          this.actionManager.executeAction(actionFinalize);\n          return;\n        }\n\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [multiElement.id]: true,\n          },\n        }));\n        // clicking outside commit zone → update reference for last committed\n        //  point\n        mutateElement(multiElement, {\n          lastCommittedPoint:\n            multiElement.points[multiElement.points.length - 1],\n        });\n        document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n      } else {\n        const element = newLinearElement({\n          type: this.state.elementType,\n          x: x,\n          y: y,\n          strokeColor: this.state.currentItemStrokeColor,\n          backgroundColor: this.state.currentItemBackgroundColor,\n          fillStyle: this.state.currentItemFillStyle,\n          strokeWidth: this.state.currentItemStrokeWidth,\n          strokeStyle: this.state.currentItemStrokeStyle,\n          roughness: this.state.currentItemRoughness,\n          opacity: this.state.currentItemOpacity,\n        });\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [element.id]: false,\n          },\n        }));\n        mutateElement(element, {\n          points: [...element.points, [0, 0]],\n        });\n        globalSceneState.replaceAllElements([\n          ...globalSceneState.getElementsIncludingDeleted(),\n          element,\n        ]);\n        this.setState({\n          draggingElement: element,\n          editingElement: element,\n        });\n      }\n    } else {\n      const element = newElement({\n        type: this.state.elementType,\n        x: x,\n        y: y,\n        strokeColor: this.state.currentItemStrokeColor,\n        backgroundColor: this.state.currentItemBackgroundColor,\n        fillStyle: this.state.currentItemFillStyle,\n        strokeWidth: this.state.currentItemStrokeWidth,\n        strokeStyle: this.state.currentItemStrokeStyle,\n        roughness: this.state.currentItemRoughness,\n        opacity: this.state.currentItemOpacity,\n      });\n\n      if (element.type === \"selection\") {\n        this.setState({\n          selectionElement: element,\n          draggingElement: element,\n        });\n      } else {\n        globalSceneState.replaceAllElements([\n          ...globalSceneState.getElementsIncludingDeleted(),\n          element,\n        ]);\n        this.setState({\n          multiElement: null,\n          draggingElement: element,\n          editingElement: element,\n        });\n      }\n    }\n\n    let selectedElementWasDuplicated = false;\n\n    const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (isOverHorizontalScrollBar) {\n        const x = event.clientX;\n        const dx = x - lastX;\n        this.setState({\n          scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n        });\n        lastX = x;\n        return;\n      }\n\n      if (isOverVerticalScrollBar) {\n        const y = event.clientY;\n        const dy = y - lastY;\n        this.setState({\n          scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n        });\n        lastY = y;\n        return;\n      }\n\n      const { x, y } = viewportCoordsToSceneCoords(\n        event,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n      // for arrows/lines, don't start dragging until a given threshold\n      //  to ensure we don't create a 2-point arrow by mistake when\n      //  user clicks mouse in a way that it moves a tiny bit (thus\n      //  triggering pointermove)\n      if (\n        !draggingOccurred &&\n        (this.state.elementType === \"arrow\" ||\n          this.state.elementType === \"line\")\n      ) {\n        if (distance2d(x, y, originX, originY) < DRAGGING_THRESHOLD) {\n          return;\n        }\n      }\n\n      if (isResizingElements) {\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        this.setState({\n          isResizing: resizeHandle && resizeHandle !== \"rotation\",\n          isRotating: resizeHandle === \"rotation\",\n        });\n        if (\n          resizeElements(\n            resizeHandle,\n            setResizeHandle,\n            selectedElements,\n            resizeArrowDirection,\n            event,\n            x - resizeOffsetXY[0],\n            y - resizeOffsetXY[1],\n          )\n        ) {\n          return;\n        }\n      }\n\n      if (this.state.editingLinearElement) {\n        const didDrag = LinearElementEditor.handlePointDragging(\n          this.state,\n          (appState) => this.setState(appState),\n          x,\n          y,\n          lastX,\n          lastY,\n        );\n\n        if (didDrag) {\n          lastX = x;\n          lastY = y;\n          return;\n        }\n      }\n\n      if (hitElement && this.state.selectedElementIds[hitElement.id]) {\n        // Marking that click was used for dragging to check\n        // if elements should be deselected on pointerup\n        draggingOccurred = true;\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        if (selectedElements.length > 0) {\n          const { x, y } = viewportCoordsToSceneCoords(\n            event,\n            this.state,\n            this.canvas,\n            window.devicePixelRatio,\n          );\n\n          selectedElements.forEach((element) => {\n            mutateElement(element, {\n              x: element.x + x - lastX,\n              y: element.y + y - lastY,\n            });\n          });\n          lastX = x;\n          lastY = y;\n\n          // We duplicate the selected element if alt is pressed on pointer move\n          if (event.altKey && !selectedElementWasDuplicated) {\n            // Move the currently selected elements to the top of the z index stack, and\n            // put the duplicates where the selected elements used to be.\n            // (the origin point where the dragging started)\n\n            selectedElementWasDuplicated = true;\n\n            const nextElements = [];\n            const elementsToAppend = [];\n            const groupIdMap = new Map();\n            for (const element of globalSceneState.getElementsIncludingDeleted()) {\n              if (\n                this.state.selectedElementIds[element.id] ||\n                // case: the state.selectedElementIds might not have been\n                //  updated yet by the time this mousemove event is fired\n                (element.id === hitElement.id && hitElementWasAddedToSelection)\n              ) {\n                const duplicatedElement = duplicateElement(\n                  this.state.editingGroupId,\n                  groupIdMap,\n                  element,\n                );\n                mutateElement(duplicatedElement, {\n                  x: duplicatedElement.x + (originX - lastX),\n                  y: duplicatedElement.y + (originY - lastY),\n                });\n                nextElements.push(duplicatedElement);\n                elementsToAppend.push(element);\n              } else {\n                nextElements.push(element);\n              }\n            }\n            globalSceneState.replaceAllElements([\n              ...nextElements,\n              ...elementsToAppend,\n            ]);\n          }\n          return;\n        }\n      }\n\n      // It is very important to read this.state within each move event,\n      // otherwise we would read a stale one!\n      const draggingElement = this.state.draggingElement;\n      if (!draggingElement) {\n        return;\n      }\n\n      let width = distance(originX, x);\n      let height = distance(originY, y);\n\n      if (isLinearElement(draggingElement)) {\n        draggingOccurred = true;\n        const points = draggingElement.points;\n        let dx = x - draggingElement.x;\n        let dy = y - draggingElement.y;\n\n        if (event.shiftKey && points.length === 2) {\n          ({ width: dx, height: dy } = getPerfectElementSize(\n            this.state.elementType,\n            dx,\n            dy,\n          ));\n        }\n\n        if (points.length === 1) {\n          mutateElement(draggingElement, { points: [...points, [dx, dy]] });\n        } else if (points.length > 1) {\n          if (draggingElement.type === \"draw\") {\n            mutateElement(draggingElement, {\n              points: simplify([...(points as Point[]), [dx, dy]], 0.7),\n            });\n          } else {\n            mutateElement(draggingElement, {\n              points: [...points.slice(0, -1), [dx, dy]],\n            });\n          }\n        }\n      } else {\n        if (getResizeWithSidesSameLengthKey(event)) {\n          ({ width, height } = getPerfectElementSize(\n            this.state.elementType,\n            width,\n            y < originY ? -height : height,\n          ));\n\n          if (height < 0) {\n            height = -height;\n          }\n        }\n\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n\n        if (getResizeCenterPointKey(event)) {\n          width += width;\n          height += height;\n          newX = originX - width / 2;\n          newY = originY - height / 2;\n        }\n\n        mutateElement(draggingElement, {\n          x: newX,\n          y: newY,\n          width: width,\n          height: height,\n        });\n      }\n\n      if (this.state.elementType === \"selection\") {\n        const elements = globalSceneState.getElements();\n        if (!event.shiftKey && isSomeElementSelected(elements, this.state)) {\n          this.setState({\n            selectedElementIds: {},\n            selectedGroupIds: {},\n            editingGroupId: null,\n          });\n        }\n        const elementsWithinSelection = getElementsWithinSelection(\n          elements,\n          draggingElement,\n        );\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                ...elementsWithinSelection.reduce((map, element) => {\n                  map[element.id] = true;\n                  return map;\n                }, {} as any),\n              },\n            },\n            globalSceneState.getElements(),\n          ),\n        );\n      }\n    });\n\n    const onPointerUp = withBatchedUpdates((childEvent: PointerEvent) => {\n      const {\n        draggingElement,\n        resizingElement,\n        multiElement,\n        elementType,\n        elementLocked,\n      } = this.state;\n\n      this.setState({\n        isResizing: false,\n        isRotating: false,\n        resizingElement: null,\n        selectionElement: null,\n        cursorButton: \"up\",\n        editingElement: multiElement ? this.state.editingElement : null,\n      });\n\n      this.savePointer(childEvent.clientX, childEvent.clientY, \"up\");\n\n      // if moving start/end point towards start/end point within threshold,\n      //  close the loop\n      if (this.state.editingLinearElement) {\n        const editingLinearElement = LinearElementEditor.handlePointerUp(\n          this.state.editingLinearElement,\n        );\n        if (editingLinearElement !== this.state.editingLinearElement) {\n          this.setState({ editingLinearElement });\n        }\n      }\n\n      lastPointerUp = null;\n\n      window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n\n      if (draggingElement?.type === \"draw\") {\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n      if (isLinearElement(draggingElement)) {\n        if (draggingElement!.points.length > 1) {\n          history.resumeRecording();\n        }\n        if (!draggingOccurred && draggingElement && !multiElement) {\n          const { x, y } = viewportCoordsToSceneCoords(\n            childEvent,\n            this.state,\n            this.canvas,\n            window.devicePixelRatio,\n          );\n          mutateElement(draggingElement, {\n            points: [\n              ...draggingElement.points,\n              [x - draggingElement.x, y - draggingElement.y],\n            ],\n          });\n          this.setState({\n            multiElement: draggingElement,\n            editingElement: this.state.draggingElement,\n          });\n        } else if (draggingOccurred && !multiElement) {\n          if (!elementLocked) {\n            resetCursor();\n            this.setState((prevState) => ({\n              draggingElement: null,\n              elementType: \"selection\",\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          } else {\n            this.setState((prevState) => ({\n              draggingElement: null,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          }\n        }\n        return;\n      }\n\n      if (\n        elementType !== \"selection\" &&\n        draggingElement &&\n        isInvisiblySmallElement(draggingElement)\n      ) {\n        // remove invisible element which was added in onPointerDown\n        globalSceneState.replaceAllElements(\n          globalSceneState.getElementsIncludingDeleted().slice(0, -1),\n        );\n        this.setState({\n          draggingElement: null,\n        });\n        return;\n      }\n\n      if (draggingElement) {\n        mutateElement(\n          draggingElement,\n          getNormalizedDimensions(draggingElement),\n        );\n      }\n\n      if (resizingElement) {\n        history.resumeRecording();\n      }\n\n      if (resizingElement && isInvisiblySmallElement(resizingElement)) {\n        globalSceneState.replaceAllElements(\n          globalSceneState\n            .getElementsIncludingDeleted()\n            .filter((el) => el.id !== resizingElement.id),\n        );\n      }\n\n      // If click occurred on already selected element\n      // it is needed to remove selection from other elements\n      // or if SHIFT or META key pressed remove selection\n      // from hitted element\n      //\n      // If click occurred and elements were dragged or some element\n      // was added to selection (on pointerdown phase) we need to keep\n      // selection unchanged\n      if (\n        getSelectedGroupIds(this.state).length === 0 &&\n        hitElement &&\n        !draggingOccurred &&\n        !hitElementWasAddedToSelection\n      ) {\n        if (childEvent.shiftKey) {\n          this.setState((prevState) => ({\n            selectedElementIds: {\n              ...prevState.selectedElementIds,\n              [hitElement!.id]: false,\n            },\n          }));\n        } else {\n          this.setState((_prevState) => ({\n            selectedElementIds: { [hitElement!.id]: true },\n          }));\n        }\n      }\n\n      if (draggingElement === null) {\n        // if no element is clicked, clear the selection and redraw\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n        return;\n      }\n\n      if (!elementLocked) {\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [draggingElement.id]: true,\n          },\n        }));\n      }\n\n      if (\n        elementType !== \"selection\" ||\n        isSomeElementSelected(globalSceneState.getElements(), this.state)\n      ) {\n        history.resumeRecording();\n      }\n\n      if (!elementLocked) {\n        resetCursor();\n        this.setState({\n          draggingElement: null,\n          elementType: \"selection\",\n        });\n      } else {\n        this.setState({\n          draggingElement: null,\n        });\n      }\n    });\n\n    lastPointerUp = onPointerUp;\n\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n    window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n  };\n\n  private handleCanvasRef = (canvas: HTMLCanvasElement) => {\n    // canvas is null when unmounting\n    if (canvas !== null) {\n      this.canvas = canvas;\n      this.rc = rough.canvas(this.canvas);\n\n      this.canvas.addEventListener(EVENT.WHEEL, this.handleWheel, {\n        passive: false,\n      });\n      this.canvas.addEventListener(EVENT.TOUCH_START, this.onTapStart);\n    } else {\n      this.canvas?.removeEventListener(EVENT.WHEEL, this.handleWheel);\n      this.canvas?.removeEventListener(EVENT.TOUCH_START, this.onTapStart);\n    }\n  };\n\n  private handleCanvasOnDrop = (event: React.DragEvent<HTMLCanvasElement>) => {\n    const file = event.dataTransfer?.files[0];\n    if (\n      file?.type === \"application/json\" ||\n      file?.name.endsWith(\".excalidraw\")\n    ) {\n      this.setState({ isLoading: true });\n      loadFromBlob(file)\n        .then(({ elements, appState }) =>\n          this.syncActionResult({\n            elements,\n            appState: {\n              ...(appState || this.state),\n              isLoading: false,\n            },\n            commitToHistory: false,\n          }),\n        )\n        .catch((error) => {\n          this.setState({ isLoading: false, errorMessage: error.message });\n        });\n    } else {\n      this.setState({\n        isLoading: false,\n        errorMessage: t(\"alerts.couldNotLoadInvalidFile\"),\n      });\n    }\n  };\n\n  private handleCanvasContextMenu = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.preventDefault();\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const elements = globalSceneState.getElements();\n    const element = getElementAtPosition(\n      elements,\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n    if (!element) {\n      ContextMenu.push({\n        options: [\n          navigator.clipboard && {\n            label: t(\"labels.paste\"),\n            action: () => this.pasteFromClipboard(null),\n          },\n          probablySupportsClipboardBlob &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsPng\"),\n              action: this.copyToClipboardAsPng,\n            },\n          probablySupportsClipboardWriteText &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsSvg\"),\n              action: this.copyToClipboardAsSvg,\n            },\n          ...this.actionManager.getContextMenuItems((action) =>\n            CANVAS_ONLY_ACTIONS.includes(action.name),\n          ),\n        ],\n        top: event.clientY,\n        left: event.clientX,\n      });\n      return;\n    }\n\n    if (!this.state.selectedElementIds[element.id]) {\n      this.setState({ selectedElementIds: { [element.id]: true } });\n    }\n\n    ContextMenu.push({\n      options: [\n        navigator.clipboard && {\n          label: t(\"labels.copy\"),\n          action: this.copyAll,\n        },\n        navigator.clipboard && {\n          label: t(\"labels.paste\"),\n          action: () => this.pasteFromClipboard(null),\n        },\n        probablySupportsClipboardBlob && {\n          label: t(\"labels.copyAsPng\"),\n          action: this.copyToClipboardAsPng,\n        },\n        probablySupportsClipboardWriteText && {\n          label: t(\"labels.copyAsSvg\"),\n          action: this.copyToClipboardAsSvg,\n        },\n        ...this.actionManager.getContextMenuItems(\n          (action) => !CANVAS_ONLY_ACTIONS.includes(action.name),\n        ),\n      ],\n      top: event.clientY,\n      left: event.clientX,\n    });\n  };\n\n  private handleWheel = withBatchedUpdates((event: WheelEvent) => {\n    event.preventDefault();\n    const { deltaX, deltaY } = event;\n\n    // note that event.ctrlKey is necessary to handle pinch zooming\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY);\n      const MAX_STEP = 10;\n      let delta = Math.abs(deltaY);\n      if (delta > MAX_STEP) {\n        delta = MAX_STEP;\n      }\n      delta *= sign;\n      this.setState(({ zoom }) => ({\n        zoom: getNormalizedZoom(zoom - delta / 100),\n      }));\n      return;\n    }\n\n    // scroll horizontally when shift pressed\n    if (event.shiftKey) {\n      this.setState(({ zoom, scrollX }) => ({\n        // on Mac, shift+wheel tends to result in deltaX\n        scrollX: normalizeScroll(scrollX - (deltaY || deltaX) / zoom),\n      }));\n      return;\n    }\n\n    this.setState(({ zoom, scrollX, scrollY }) => ({\n      scrollX: normalizeScroll(scrollX - deltaX / zoom),\n      scrollY: normalizeScroll(scrollY - deltaY / zoom),\n    }));\n  });\n\n  private getTextWysiwygSnappedToCenterPosition(\n    x: number,\n    y: number,\n    state: {\n      scrollX: FlooredNumber;\n      scrollY: FlooredNumber;\n      zoom: number;\n    },\n    canvas: HTMLCanvasElement | null,\n    scale: number,\n  ) {\n    const elementClickedInside = getElementContainingPosition(\n      globalSceneState.getElementsIncludingDeleted(),\n      x,\n      y,\n    );\n    if (elementClickedInside) {\n      const elementCenterX =\n        elementClickedInside.x + elementClickedInside.width / 2;\n      const elementCenterY =\n        elementClickedInside.y + elementClickedInside.height / 2;\n      const distanceToCenter = Math.hypot(\n        x - elementCenterX,\n        y - elementCenterY,\n      );\n      const isSnappedToCenter =\n        distanceToCenter < TEXT_TO_CENTER_SNAP_THRESHOLD;\n      if (isSnappedToCenter) {\n        const { x: wysiwygX, y: wysiwygY } = sceneCoordsToViewportCoords(\n          { sceneX: elementCenterX, sceneY: elementCenterY },\n          state,\n          canvas,\n          scale,\n        );\n        return { wysiwygX, wysiwygY, elementCenterX, elementCenterY };\n      }\n    }\n  }\n\n  private savePointer = (x: number, y: number, button: \"up\" | \"down\") => {\n    if (!x || !y) {\n      return;\n    }\n    const pointerCoords = viewportCoordsToSceneCoords(\n      { clientX: x, clientY: y },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    if (isNaN(pointerCoords.x) || isNaN(pointerCoords.y)) {\n      // sometimes the pointer goes off screen\n      return;\n    }\n    this.portal.socket &&\n      // do not broadcast when more than 1 pointer since that shows flickering on the other side\n      gesture.pointers.size < 2 &&\n      this.broadcastMouseLocation({\n        pointerCoords,\n        button,\n      });\n  };\n\n  private resetShouldCacheIgnoreZoomDebounced = debounce(() => {\n    this.setState({ shouldCacheIgnoreZoom: false });\n  }, 300);\n\n  private saveDebounced = debounce(() => {\n    saveToLocalStorage(\n      globalSceneState.getElementsIncludingDeleted(),\n      this.state,\n    );\n  }, 300);\n}\n\n// -----------------------------------------------------------------------------\n// TEST HOOKS\n// -----------------------------------------------------------------------------\n\ndeclare global {\n  interface Window {\n    h: {\n      elements: readonly ExcalidrawElement[];\n      state: AppState;\n      setState: React.Component<any, AppState>[\"setState\"];\n      history: SceneHistory;\n      app: InstanceType<typeof App>;\n    };\n  }\n}\n\nif (\n  process.env.NODE_ENV === ENV.TEST ||\n  process.env.NODE_ENV === ENV.DEVELOPMENT\n) {\n  window.h = {} as Window[\"h\"];\n\n  Object.defineProperties(window.h, {\n    elements: {\n      get() {\n        return globalSceneState.getElementsIncludingDeleted();\n      },\n      set(elements: ExcalidrawElement[]) {\n        return globalSceneState.replaceAllElements(elements);\n      },\n    },\n    history: {\n      get: () => history,\n    },\n  });\n}\n\nexport default App;\n","// time in milliseconds\nexport const TAP_TWICE_TIMEOUT = 300;\nexport const INITAL_SCENE_UPDATE_TIMEOUT = 5000;\nexport const SYNC_FULL_SCENE_INTERVAL_MS = 20000;\n","import React, { useState } from \"react\";\nimport nanoid from \"nanoid\";\n\nimport \"./Claymate.css\";\nimport { Island } from \"./excalidraw/src/components/Island\";\nimport { globalSceneState } from \"./excalidraw/src/scene\";\nimport { exportToCanvas } from \"./excalidraw/src/scene/export\";\nimport { AppState } from \"./excalidraw/src/types\";\n\nconst dummyAppState: AppState = {\n  isLoading: false,\n  errorMessage: null,\n  draggingElement: null,\n  resizingElement: null,\n  multiElement: null,\n  selectionElement: null,\n  editingElement: null,\n  editingLinearElement: null,\n  elementType: \"selection\",\n  elementLocked: false,\n  exportBackground: false,\n  shouldAddWatermark: false,\n  currentItemStrokeColor: \"\",\n  currentItemBackgroundColor: \"\",\n  currentItemFillStyle: \"\",\n  currentItemStrokeWidth: -1,\n  currentItemStrokeStyle: \"solid\",\n  currentItemRoughness: -1,\n  currentItemOpacity: -1,\n  currentItemFontFamily: 1,\n  currentItemFontSize: -1,\n  currentItemTextAlign: \"center\",\n  viewBackgroundColor: \"\",\n  scrollX: -1 as any,\n  scrollY: -1 as any,\n  cursorX: -1,\n  cursorY: -1,\n  cursorButton: \"up\",\n  scrolledOutside: false,\n  name: \"\",\n  username: \"\",\n  isCollaborating: false,\n  isResizing: false,\n  isRotating: false,\n  zoom: 1,\n  openMenu: null,\n  lastPointerDownWith: \"mouse\",\n  selectedElementIds: {},\n  collaborators: new Map(),\n  shouldCacheIgnoreZoom: false,\n  showShortcutsDialog: false,\n  zenModeEnabled: false,\n  selectedGroupIds: {},\n  editingGroupId: null,\n};\n\nconst createDataUrl = () => {\n  const elements = globalSceneState.getElements();\n  const tempCanvas = exportToCanvas(elements, dummyAppState, dummyAppState);\n  tempCanvas.style.display = \"none\";\n  document.body.appendChild(tempCanvas);\n  const dataUrl = tempCanvas.toDataURL();\n  tempCanvas.remove();\n  return dataUrl;\n};\n\nconst Claymate: React.FC = () => {\n  const [snapshots, setSnapshots] = useState<\n    {\n      id: string;\n      dataUrl: string;\n    }[]\n  >([]);\n  const addSnapshot = () => {\n    const dataUrl = createDataUrl();\n    const id = nanoid();\n    setSnapshots((prev) => [...prev, { id, dataUrl }]);\n  };\n  const deleteSnapshot = (id: string) => {\n    setSnapshots((prev) => prev.filter((item) => item.id !== id));\n  };\n  const moveLeft = (id: string) => {\n    setSnapshots((prev) => {\n      const index = prev.findIndex((item) => item.id === id);\n      const tmp = [...prev];\n      tmp[index - 1] = prev[index];\n      tmp[index] = prev[index - 1];\n      return tmp;\n    });\n  };\n  const moveRight = (id: string) => {\n    setSnapshots((prev) => {\n      const index = prev.findIndex((item) => item.id === id);\n      const tmp = [...prev];\n      tmp[index + 1] = prev[index];\n      tmp[index] = prev[index + 1];\n      return tmp;\n    });\n  };\n  return (\n    <Island className=\"Claymate\">\n      <div className=\"Claymate-buttons\">\n        <button type=\"button\" onClick={addSnapshot}>\n          Add snapshot\n        </button>\n        <button type=\"button\">Export GIF</button>\n      </div>\n      <div className=\"Claymate-snapshots\">\n        {snapshots.map((snapshot, index) => (\n          <div key={snapshot.id} className=\"Claymate-snapshot\">\n            <img alt=\"snapshot\" src={snapshot.dataUrl} />\n            <button\n              type=\"button\"\n              className=\"Claymate-delete\"\n              aria-label=\"Delete\"\n              onClick={() => deleteSnapshot(snapshot.id)}\n            >\n              &#x2716;\n            </button>\n            <button\n              type=\"button\"\n              className=\"Claymate-left\"\n              aria-label=\"Move Left\"\n              disabled={index === 0}\n              onClick={() => moveLeft(snapshot.id)}\n            >\n              &#x2b05;\n            </button>\n            <button\n              type=\"button\"\n              className=\"Claymate-right\"\n              aria-label=\"Move Right\"\n              disabled={index === snapshots.length - 1}\n              onClick={() => moveRight(snapshot.id)}\n            >\n              &#x27a1;\n            </button>\n          </div>\n        ))}\n      </div>\n    </Island>\n  );\n};\n\nexport default Claymate;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport \"./Excalidraw.scss\";\nimport \"./excalidraw/src/css/styles.scss\";\nimport ExcalidrawApp from \"./excalidraw/src/components/App\";\nimport Claymate from \"./Claymate\";\n\nconst App: React.FC = () => (\n  <div className=\"ClaymateApp\">\n    <ExcalidrawApp />\n    <Claymate />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}